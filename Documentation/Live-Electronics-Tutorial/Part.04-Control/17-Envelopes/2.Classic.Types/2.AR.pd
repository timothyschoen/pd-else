#N canvas 313 114 1067 684 12;
#X declare -path else;
#X obj 41 260 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 94 233 *~;
#X obj 40 171 osc~ 440;
#X obj 94 273 out~;
#X obj 786 270 vsl 18 100 0 1 0 0 ewtwet wefwert empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X text 809 363 0;
#X text 809 264 1;
#X obj 845 250 *~;
#X obj 863 136 bng 16 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 845 293 out~;
#X obj 863 204 decay2~ 100 2000;
#X msg 951 166 0.5;
#X text 30 98 Here we have an attack stage of 50 ms and a release stage of 450 ms - the total duration of the envelope is 500 ms.;
#X obj 112 155 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 112 182 envgen~ 50 1 450 0;
#X text 61 351 0;
#X text 61 252 1;
#X obj 786 242 s2f~;
#X obj 41 226 s2f~;
#X obj 761 19 declare -path else;
#X obj 514 278 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 569 247 *~;
#X obj 515 185 osc~ 440;
#X obj 569 287 out~;
#X obj 587 138 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 534 369 0;
#X text 534 270 1;
#X obj 514 244 s2f~;
#X text 619 137 exponential;
#X obj 784 184 osc~ 440;
#X obj 284 263 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 337 236 *~;
#X obj 283 174 osc~ 440;
#X obj 337 276 out~;
#X text 304 354 0;
#X text 304 255 1;
#X obj 284 229 s2f~;
#X obj 355 185 vline~;
#X msg 355 158 1 50 \, 0 450 50;
#X text 30 18 An "AR" envelope has an "attack" and a "release" stage. The attack is the first stage that starts at 0 and goes to the peak amplitude. Right after the attack is finished we have the release stage going back to 0 - let's see this first implemented with [envgen~] and [vline~] \, both linearly .;
#X text 498 58 We can have a exponential setting for [envgen~]. Also \, the [decay2~] object from ELSE is another exponential envelope and a variant of [decay~] that has an attack stage \, which is the first argument - but the total duration still depends on the decay time., f 68;
#X obj 587 196 envgen~ 50 1 450 0;
#X obj 603 169 initmess expl 4 4;
#X obj 863 166 float2imp~;
#X obj 50 541 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 105 510 *~;
#X obj 51 448 osc~ 440;
#X obj 105 550 out~;
#X obj 123 421 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 70 632 0;
#X text 70 533 1;
#X obj 50 507 s2f~;
#X obj 123 459 adsr~ 50 450 0 0;
#X obj 232 494 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 710 231 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 696 259 status;
#X text 275 546 Note that the [envgen~] object also has a status output and how the [adsr~] object can also be triggered by bangs., f 39;
#X obj 597 529 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 652 498 *~;
#X obj 598 436 osc~ 440;
#X obj 652 538 out~;
#X obj 670 409 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 617 620 0;
#X text 617 521 1;
#X obj 597 495 s2f~;
#X obj 744 482 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 670 447 asr~ 50 450;
#X text 275 442 You can also use [adsr~] with just the attack and decay stages to implement an attack+release envelope. The [asr~] object \, with just attack and release phases can also implement the same kind of envelope., f 39;
#X text 801 415 The [decay~] and [decay2~] objects are cloned from SuperCollider. Note that in [decay2~] you do not have an attack phase of \, say \, 100 ms (as in the example above) and then a decay phase of 2000 ms (so a total of 2100 ms). The actual duration of the whole envelope is 2000 ms. For a proper attack and decay envelope that you can set exactly the time amount of the attack and decay phases you can use [asr~] and [adsr~] as to the left., f 34;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 7 0 9 0;
#X connect 8 0 43 0;
#X connect 10 0 7 1;
#X connect 10 0 17 0;
#X connect 11 0 10 0;
#X connect 13 0 14 0;
#X connect 14 0 1 1;
#X connect 14 0 18 0;
#X connect 17 0 4 0;
#X connect 18 0 0 0;
#X connect 21 0 23 0;
#X connect 22 0 21 0;
#X connect 24 0 41 0;
#X connect 27 0 20 0;
#X connect 29 0 7 0;
#X connect 31 0 33 0;
#X connect 32 0 31 0;
#X connect 36 0 30 0;
#X connect 37 0 31 1;
#X connect 37 0 36 0;
#X connect 38 0 37 0;
#X connect 41 0 21 1;
#X connect 41 0 27 0;
#X connect 41 1 54 0;
#X connect 42 0 41 0;
#X connect 43 0 10 0;
#X connect 45 0 47 0;
#X connect 46 0 45 0;
#X connect 48 0 52 0;
#X connect 51 0 44 0;
#X connect 52 0 45 1;
#X connect 52 0 51 0;
#X connect 52 1 53 0;
#X connect 58 0 60 0;
#X connect 59 0 58 0;
#X connect 61 0 66 0;
#X connect 64 0 57 0;
#X connect 66 0 58 1;
#X connect 66 0 64 0;
#X connect 66 1 65 0;
