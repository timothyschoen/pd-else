#N canvas 540 38 563 409 10;
#X obj 25 41 cnv 4 4 4 empty empty Manage 0 28 2 18 #e0e0e0 #000000 0;
#X obj 90 41 cnv 4 4 4 empty empty arguments 0 28 2 18 #e0e0e0 #000000 0;
#X obj 4 4 cnv 15 301 42 empty empty args 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 4 4 graph;
#X obj 307 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 306 4 pd;
#X obj 346 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 459 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 479 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 516 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 465 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 503 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 6 237 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 284 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 338 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 383 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 238 171 else/args;
#X text 178 244 bang - output arguments list;
#X text 150 292 anything -;
#N canvas 585 214 499 372 break 0;
#X obj 105 96 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 128 95 <= get arguments;
#X obj 105 124 else/args-example -freq 100 200 -amp 1 0.5;
#X obj 297 212 route -freq -amp;
#X obj 343 244 else/display;
#X obj 297 284 else/display;
#X obj 105 165 else/break -;
#X obj 105 203 route -freq -amp;
#X obj 151 235 else/display;
#X obj 105 275 else/display;
#X obj 25 185 print Full;
#X obj 354 180 print Broken;
#X text 64 28 You can use a break character as an optional first argument to split an argument list and furtherly route it. This is the same as using the [break] object aftwerwards. Open the subpatch below.;
#X connect 0 0 2 0;
#X connect 2 0 6 0;
#X connect 2 0 10 0;
#X connect 2 1 3 0;
#X connect 2 1 11 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X restore 467 199 pd break;
#X obj 238 145 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 220 293 symbol \, float or list \, depending on the given arguments - or bang if no arguments are given to the parent patch (as in this help patch), f 47;
#X obj 238 201 else/display;
#X text 91 90 [args] loads arguments of an abstraction and can also change them. It is useful for the management of variable number of arguments in abstractions \, and also to change/set them up.;
#X text 154 262 anything - sets new arguments;
#N canvas 460 162 848 520 example 0;
#X obj 81 151 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 81 227 else/display;
#X text 27 71 Here you can test that the given arguments are loaded and passed throughout the left outlet. But if no arguments are given \, then the right outlet sends a bang.;
#X text 27 23 Below we have an abstraction that uses [args] \, which is a very simple example on how it works.;
#X text 103 151 <= load arguments;
#X text 237 188 <= click and open the abstraction, f 18;
#X obj 532 135 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 532 257 else/display;
#X msg 562 170 1 2 3;
#X obj 532 223 else/args-example 1 2 3;
#X obj 81 188 else/args-example 1 2 3;
#X msg 573 195 list a b c;
#X obj 457 447 pdcontrol;
#X obj 457 373 print;
#X text 495 318 <= get arguments;
#X obj 457 342 else/args-example foo 100 \$0-x \\\$0 \$1 \$2-x;
#X msg 457 318 bang;
#X text 60 326 Note how dollar signs (such as "\$0" \, "\$1" or "\$2-x") get expanded unless you escape them with a backslash ("\$2-x" may appear as an unexpanded symbol \, but it actually gets expanded if this abstraction is called inside another that contains arguments).;
#X text 415 38 When you send any message (float \, list \, symbol) to [args] \, it'll change the arguments to that message. You can query the new arguments right away with a bang message and if you close and reopen this subpacth \, you'll see the new arguments. If you save the patch \, the new arguments are saved with the patch.;
#X text 230 429 As of Pd 0.50.0 \, there's a vanilla solution to load arguments \, with the new [pdcontrol] object. Check it out., f 34;
#X connect 0 0 10 0;
#X connect 6 0 9 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 10 0 1 0;
#X connect 11 0 9 0;
#X connect 15 0 13 0;
#X connect 16 0 15 0;
#X restore 466 178 pd example;
#X text 141 345 1) symbol - (optional) break character (default none);
#X text 147 361 2) float - depth level (default 0);
#X connect 16 0 22 0;
#X connect 20 0 16 0;
