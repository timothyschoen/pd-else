#N canvas 479 38 564 824 10;
#X obj 2 4 cnv 15 301 42 empty empty knob 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X obj 23 39 cnv 4 4 4 empty empty GUI\ knob 0 28 2 18 #e0e0e0 #000000 0;
#X obj 305 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 4 pd;
#X obj 344 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 6 147 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 682 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 793 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 80 154 cnv 17 3 522 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 75 690 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 117 236 size <float>;
#X text 159 152 float;
#X obj 6 713 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 123 166 set <float>;
#X text 200 194 -;
#N canvas 438 109 772 634 +parameters 0;
#X obj 327 123 else/knob 90 0 1 4 0 empty empty #9a9f9c #feffc6 #402420 0 0 2 0 0 320 0 0 0 empty empty 0 0 0 0 0 0 1 0;
#X obj 574 98 else/rescale;
#X floatatom 327 232 11 0 0 0 - - - 12;
#X msg 327 86 exp \$1;
#X floatatom 327 59 5 0 0 0 - - - 0;
#X obj 327 31 else/initmess 4;
#X obj 588 448 else/knob 110 110 1760 1 440 empty empty #202020 #bbbbbb #00faff 0 0 0 0 1 320 0 0 440 empty empty 0 8 0 0 0 0 0 0;
#X floatatom 588 582 11 0 0 0 - - - 12;
#X obj 162 128 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 181 284 0;
#X text 157 266 1;
#X text 148 237 2;
#X text 152 210 3;
#X text 171 185 4;
#X text 202 178 5;
#X text 230 185 6;
#X text 251 210 7;
#X text 255 237 8;
#X text 245 266 9;
#X text 217 284 10;
#X obj 162 195 else/knob 90 0 10 0 0 \$0-discrete empty #000000 #afafaf #dfdfdf 0 0 11 1 0 320 0 0 0 empty empty 0 0 0 0 0 0 1 0;
#X obj 380 81 else/rescale -exp 4 0 1, f 12;
#X msg 588 400 log \$1;
#X obj 588 367 tgl 22 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 380 60 else/midi.learn;
#A saved;
#A saved;
#X text 656 97 <-- see also;
#X obj 155 487 else/knob 125 1 10 0 1 empty empty #7c7c7c #000000 #b3dfde 1 1 11 1 1 320 90 0 1 empty empty 0 8 0 0 0 0 1 0;
#X msg 155 458 offset \$1;
#X floatatom 155 432 5 0 0 0 - - - 0;
#X text 488 21 [knob] has an exponential and log feature just like the [rescale] object. For more details \, check the help file of [rescale]. Note that sometimes you may need to use [rescale] as well \, like when knob receives data from MIDI controllers (see example to the left)., f 42;
#X text 453 130 The example to the left has an initial quartic function setting and a range from 0 to 1 (well suited for setting a volume gain \, for instance). There are 2 ticks to indicate start and end position., f 48;
#X obj 588 338 loadbang;
#X text 333 283 In log mode \, the range cannot reach or cross a value of 0! This mode supersedes the 'exp' mode \, so the 'exp' value is ignored., f 68;
#X text 347 398 The log mode is well suited for setting things like frequencies. To the right we have a frequency range that is from 110 to 1760 \, which covers 4 octaves from A2 to A6. The mid point is A4 (440 hz)., f 33;
#X text 453 194 You can change the exp value via message or set via a flag. Note that setting The 'exp' factor to '1' \, '0' or '-1' makes it linear., f 48;
#X text 347 338 You can set to log mode with the 'log' message or flag. You can also set it via the properties window., f 33;
#X text 45 190 Note that you can also use arrows to navigate the knob and in this case the step change is discrete as well., f 13;
#X text 39 503 Try also arrow keys here. It now loops as well., f 14;
#X msg 647 416 jump \$1;
#X obj 647 375 tgl 22 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 677 376 <- jump on click, f 9;
#X obj 162 103 loadbang;
#X obj 93 128 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 93 156 ticks \$1;
#X msg 162 156 discrete \$1;
#X text 40 324 Besides the angular range \, you can also set an angle offset to shift the start position. The example below is similar to the above \, but the shift is 90 degrees the motion is circular \, there is an arc and we have an outline. Additionally \, note that there's a canvas in the background so you can set yet a 4th color in the scheme., f 41;
#X text 32 16 You can set to discrete mode with a number of steps and also show tick marks for them as below (where we have 11 steps from 0 to 10 and the numbers are comments). Note that \, when displayed \, the first and last ticks are a bit thicker and wider., f 44;
#X text 453 235 You can also set to linear via the properties window., f 48;
#X text 347 485 You can see that how when the knob reaches the mid point of the knob you have '440' as the mid value between 110 and 1760! You can also double click to go directly to this mid value. Other usages include a frequency or gain multiplier \, from 0.5 to 2 for instance \, where 1 is the mid point., f 33;
#X connect 0 0 2 0;
#X connect 3 0 0 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 8 0 44 0;
#X connect 21 0 0 0;
#X connect 22 0 6 0;
#X connect 23 0 22 0;
#X connect 24 0 21 0;
#X connect 27 0 26 0;
#X connect 28 0 27 0;
#X connect 31 0 23 0;
#X connect 38 0 6 0;
#X connect 39 0 38 0;
#X connect 41 0 8 0;
#X connect 41 0 42 0;
#X connect 42 0 43 0;
#X connect 43 0 20 0;
#X connect 44 0 20 0;
#X restore 457 123 pd +parameters;
#X floatatom 197 117 7 0 0 0 - - - 12;
#X text 161 690 float;
#X text 200 151 - sets and outputs value, f 58;
#X text 202 690 - knob's value;
#X text 32 98 [knob] is a GUI knob.;
#X text 165 180 bang;
#X text 200 180 - outputs value, f 58;
#X text 123 251 arc <float>;
#X text 93 451 circular <float>;
#X text 111 465 angle <float>;
#X text 105 479 offset <float>;
#X text 111 507 send <symbol>;
#X text 93 493 receive <symbol>;
#X text 123 549 exp <float>;
#X text 111 577 ticks <float>;
#X text 93 591 discrete <float>;
#X text 200 165 - sets value (no output), f 58;
#X text 200 236 - sets size in pixels (default: 50), f 58;
#X text 200 309 -;
#X text 200 378 -;
#X text 105 378 bgcolor <list>;
#X text 200 426 -;
#X text 200 251 - non zero sets to arc drawing mode (default: 1), f 58;
#X text 200 465 - sets angular range value in degrees (default: 320), f 58;
#X text 200 479 - sets angular offset in degrees (default: 0), f 58;
#X text 200 507 - sets send symbol (default: empty), f 58;
#X text 200 493 - sets receive symbol (default: empty), f 58;
#X text 200 549 - sets exponential value (default: 1), f 58;
#X text 200 577 - sets number of ticks (default: 0), f 58;
#X text 200 591 - non zero sets to discrete mode (default: 0), f 58;
#X text 200 451 - non zero sets to circular dragging mode (default: 0), f 58;
#X obj 197 60 else/knob 50 0 127 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X text 105 426 fgcolor <list>;
#X text 200 401 -;
#X text 99 401 arccolor <list>;
#X text 212 401 sets the arc background color in hexadecimal or RGB list (default: #afafaf);
#X text 212 376 sets background color in hexadecimal or RGB list (default: #dfdfdf), f 56;
#X text 212 426 sets foreground color in hexadecimal or RGB list (default: #000000), f 56;
#X text 255 67 <--;
#X text 279 67 click and drag \, right click for properties, f 11;
#X text 117 605 jump <float>;
#X text 200 605 - non zero sets to jump on click mode (default: 0), f 58;
#X text 117 194 load <float>;
#X text 212 194 sets load value \, no float sets current (default: 0), f 56;
#X text 200 266 -;
#X text 212 266 sets arc start value \, no float sets current (default: 0);
#X text 117 308 range <f \, f>;
#X text 212 309 sets lower and upper values (default: 0 \, 127), f 56;
#X text 159 647 learn;
#X text 153 661 forget;
#X text 200 647 - activate a midi learn mechanism, f 58;
#X text 200 661 - activate a midi forget mechanism, f 58;
#X text 105 521 param <symbol>;
#X text 200 521 - sets param symbol (default: empty), f 58;
#X text 200 535 - sets param symbol (default: empty), f 58;
#X text 117 535 var <symbol>;
#X text 105 322 number <float>;
#N canvas 266 106 1052 525 basic 0;
#X floatatom 124 341 8 0 0 0 - - - 12;
#X msg 157 246 angle 360;
#X msg 149 226 angle 320;
#X msg 37 227 arc \$1;
#X obj 37 192 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 124 156 5 0 127 0 - - - 12;
#X msg 275 157 range -10 10;
#X msg 74 194 set 64;
#X msg 631 274 circular \$1;
#X obj 631 248 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 551 258 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 824 115 5 50 200 0 - - - 12;
#X msg 824 143 size \$1;
#X obj 894 121 else/colors;
#X msg 894 142 bgcolor \$1;
#X obj 922 214 else/colors;
#X msg 922 235 fgcolor \$1;
#X obj 905 167 else/colors;
#X obj 124 281 else/knob 50 0 127 0 0 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X obj 275 281 else/knob 50 -50 50 0 0 empty empty #7c7c7c #afafaf #ffc7c6 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X obj 824 271 else/knob 200 0 127 0 0 empty empty #ffffff #606060 #c00402 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X obj 631 314 else/knob 75 0 127 0 0 empty empty #7c7c7c #afafaf #ff0400 1 0 0 0 1 360 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X obj 37 166 loadbang;
#X msg 254 136 range -50 50;
#X text 803 22 The 'size' message sets size in pixels. The bgcolor \, arccolor and fgcolor parameters set background \, arc background and foreground color with a hex symbol or a list of RGB values (3 values from 0 to 255)., f 35;
#X msg 905 188 arccolor \$1;
#X msg 287 179 load 5;
#X msg 296 201 load 0;
#X msg 304 225 load;
#X text 19 16 By default \, the angular range is 320 degrees. The object also draws an 'arc' by default with its own color \, which is useful to display the initial and final position. You can change this with the 'arc' or 'angle' messages \, properties or flags. A full 360 degree is possible and the arc is then useful to differentiate from the fully turned down (background color) to the turned up [knob] (foreground color). The default range is from 0 to 127 \, but you can change that in the same way. A float sets and outputs values \, which get clipped to the [knob]'s range. A 'set' message only sets the value (no output)., f 65;
#X obj 551 235 loadbang;
#X text 449 436 You can also set the motion to 'circular' and in this case the [knob] follows the angular position of your mouse motion \, which allows for a 'looped' or 'infinite' knob (which makes more sense if the angular range is 360 degrees). Using arrow keys also make it loop around., f 56;
#X text 435 17 Click and dragging on the [knob] works both in vertical and horizontal axis - dragging down or left decreases values \, while dragiing up or right increases them. If shift is pressed before clicking \, the mouse dragging or arrow keys increment/decrement by a factor of a hundredth., f 55;
#X floatatom 631 400 8 0 0 0 - - - 12;
#X obj 275 341 else/display;
#X msg 342 226 savestate 1;
#X msg 551 284 square \$1;
#X msg 136 181 arcstart 90;
#X msg 143 200 arcstart;
#X msg 221 201 reset;
#X text 29 423 The 'load' message sets the initial value for when the object is loaded. A 'load' message without float saves the current value as the load value. In 'savestate' mode \, when you save the patch \, the current knob's value becomes the 'load' value. Note that the [savestate] object is needed if you use [knob] in an abstraction. In 'loadbang' mode (default) \, the load value is output at load time., f 65;
#X msg 342 249 lb 0;
#X text 380 249 no loadbang;
#X text 435 93 by default \, the knob has an outer square area \, with the same background color. There's a second mode without the square or any outline \, in which the knob circle increases in size. Use the "square 0" message or the '-nosquare' flag to change the display mode. You can also set it via properties. When you don't have the square \, note that when you are in edit mode the [knob] shows just a square outline around as to indicate you're in edit mode and where you can connect the object. Inlets and outlets are hidden in run mode but also appear in edit mode., f 55;
#X text 336 281 double click or alt+click (or option+click on mac) to restore to arc start state (same as 'reset'), f 25;
#X text 29 373 The 'arcstart' value is where the arc starts \, just 'arcstart' sets the current value as the start value. double clicking or alt+clicking (or option+clicking on mac) on the object restores to the 'arcstart' value \, so does the 'reset' message., f 65;
#X connect 1 0 18 0;
#X connect 2 0 18 0;
#X connect 3 0 18 0;
#X connect 4 0 3 0;
#X connect 5 0 18 0;
#X connect 6 0 19 0;
#X connect 7 0 18 0;
#X connect 8 0 21 0;
#X connect 9 0 8 0;
#X connect 10 0 36 0;
#X connect 11 0 12 0;
#X connect 12 0 20 0;
#X connect 13 0 14 0;
#X connect 14 0 20 0;
#X connect 15 0 16 0;
#X connect 16 0 20 0;
#X connect 17 0 25 0;
#X connect 18 0 0 0;
#X connect 19 0 34 0;
#X connect 21 0 33 0;
#X connect 22 0 4 0;
#X connect 23 0 19 0;
#X connect 25 0 20 0;
#X connect 26 0 19 0;
#X connect 27 0 19 0;
#X connect 28 0 19 0;
#X connect 30 0 10 0;
#X connect 35 0 19 0;
#X connect 36 0 21 0;
#X connect 37 0 18 0;
#X connect 38 0 18 0;
#X connect 39 0 19 0;
#X connect 41 0 19 0;
#X restore 493 55 pd basic;
#X text 200 323 -;
#X text 105 348 numbersize <f>;
#X text 200 348 - sets number font size (default: 12), f 58;
#X text 93 362 numberpos <f \, f>;
#X text 200 362 - sets coordinates relative to object (default: 6 \, -15), f 58;
#N canvas 331 133 869 733 activity/number 0;
#X msg 143 307 number \$1;
#X floatatom 143 287 3 0 0 0 - - - 0;
#X obj 143 217 vradio 16 1 0 4 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X text 163 217 never, f 11;
#X text 163 249 when active;
#X text 163 265 when typing;
#X text 163 233 always, f 11;
#X obj 480 184 knob 65 0 100 0 0 \$0-knob-% empty #dfdfdf #7c7c7c black 0 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X obj 481 257 note 54 14 Menlo \$0-set-note-% 0 0 0 0 0 255 255 255 0 1 0.00 %;
#X obj 596 184 knob 65 -12 12 0 0 \$0-knob-st empty #000000 #7c7c7c #ffffff 0 0 25 1 0 320 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X obj 577 257 note 117 13 Menlo \$0-set-note-st 0 0 0 0 0 255 255 255 0 1 0 semitones;
#X obj 728 184 knob 65 -100 100 0 0 \$0-knob-pan empty #000000 #202020 #ff0400 0 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0;
#X obj 728 257 note 64 14 Menlo \$0-set-note-pan 0 0 0 0 0 255 255 255 0 1 Center;
#N canvas 684 392 668 447 guts 0;
#X obj 269 139 makefilename %.3#g;
#X obj 152 157 moses;
#X obj 269 196 s \$0-set-note-pan;
#X obj 152 182 abs;
#X obj 229 224 makefilename %.3#g;
#X obj 200 144 sel 100;
#X floatatom 77 146 5 0 0 0 - - - 0;
#X obj 77 71 r \$0-knob-pan;
#X msg 76 273 set Center;
#X obj 77 168 select 0;
#X obj 76 348 s \$0-set-note-pan;
#X obj 152 224 sel 100;
#X obj 391 345 s \$0-set-note-pan;
#X msg 269 168 set \$1 R;
#X msg 200 167 set 100 R;
#X msg 229 254 set \$1 L;
#X msg 152 254 set 100 L;
#X floatatom 391 68 5 0 0 0 - - - 0;
#X msg 391 94 underline \$1;
#X obj 391 47 r \$0-knob-pan-active;
#X symbolatom 422 201 10 0 0 0 - - - 0;
#X obj 333 95 sel 0;
#X obj 422 170 r \$0-knob-pan-typing;
#X msg 422 239 set \$1...;
#X msg 93 322 bold 0;
#X obj 93 300 loadbang;
#X obj 37 46 loadbang;
#X msg 37 68 0;
#X obj 77 103 else/quantizer 0.1;
#X connect 0 0 13 0;
#X connect 1 0 3 0;
#X connect 1 1 5 0;
#X connect 3 0 11 0;
#X connect 4 0 15 0;
#X connect 5 0 14 0;
#X connect 5 1 0 0;
#X connect 6 0 9 0;
#X connect 7 0 28 0;
#X connect 8 0 10 0;
#X connect 9 0 8 0;
#X connect 9 1 1 0;
#X connect 11 0 16 0;
#X connect 11 1 4 0;
#X connect 13 0 2 0;
#X connect 14 0 2 0;
#X connect 15 0 12 0;
#X connect 16 0 12 0;
#X connect 17 0 18 0;
#X connect 17 0 21 0;
#X connect 18 0 12 0;
#X connect 19 0 17 0;
#X connect 20 0 23 0;
#X connect 21 0 6 0;
#X connect 22 0 20 0;
#X connect 23 0 12 0;
#X connect 24 0 10 0;
#X connect 25 0 24 0;
#X connect 26 0 27 0;
#X connect 27 0 6 0;
#X connect 28 0 6 0;
#X restore 737 287 pd guts;
#X obj 729 159 note 64 16 Menlo empty 0 255 4 0 0 255 255 255 0 1 Pan;
#X obj 597 159 note 58 14 Menlo empty 0 4 0 255 0 255 131 0 0 1 Shift;
#N canvas 719 437 594 329 guts 0;
#X floatatom 78 109 6 0 0 0 - - - 0;
#X obj 78 64 r \$0-knob-st;
#X obj 159 120 makefilename %.2+d;
#X obj 159 255 s \$0-set-note-st;
#X obj 78 131 select 0;
#X msg 159 146 set \$1 semitones;
#X msg 169 174 set 0 semitones;
#X floatatom 291 135 5 0 0 0 - - - 0;
#X obj 291 160 * 200;
#X msg 291 184 color \$1 0 0;
#X obj 290 42 r \$0-knob-st-active;
#X symbolatom 389 163 10 0 0 0 - - - 0;
#X msg 389 191 set \$1| semitones;
#X obj 389 132 r \$0-knob-st-typing;
#X obj 185 72 sel 0;
#X msg 90 209 bold 0;
#X obj 90 187 loadbang;
#X obj 37 36 loadbang;
#X msg 37 58 0;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 5 0;
#X connect 4 0 6 0;
#X connect 4 1 2 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 3 0;
#X connect 10 0 7 0;
#X connect 10 0 14 0;
#X connect 11 0 12 0;
#X connect 12 0 3 0;
#X connect 13 0 11 0;
#X connect 14 0 0 0;
#X connect 15 0 3 0;
#X connect 16 0 15 0;
#X connect 17 0 18 0;
#X connect 18 0 0 0;
#X restore 610 287 pd guts;
#N canvas 524 151 699 415 guts 0;
#X floatatom 119 81 11 0 0 0 - - - 0;
#X obj 119 47 r \$0-knob-%;
#X obj 386 312 s \$0-set-note-%;
#X obj 384 34 r \$0-knob-%-active;
#X floatatom 384 55 5 0 0 0 - - - 0;
#X msg 384 77 bold \$1;
#X obj 436 110 r \$0-knob-%-typing;
#X symbolatom 436 141 10 0 0 0 - - - 0;
#X msg 436 169 set \$1|;
#X obj 292 55 sel 0;
#X obj 86 24 loadbang;
#X msg 86 45 0;
#X msg 522 169 bold 0;
#X obj 522 147 loadbang;
#X obj 119 117 moses 1;
#X msg 240 149 100;
#X obj 119 147 makefilename %.2f;
#X obj 311 127 makefilename %.3#g;
#X obj 240 176 makefilename %d;
#X msg 311 221 set \$1 %;
#X obj 240 127 select 100;
#X connect 0 0 14 0;
#X connect 1 0 0 0;
#X connect 3 0 4 0;
#X connect 3 0 9 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 2 0;
#X connect 9 0 0 0;
#X connect 10 0 11 0;
#X connect 11 0 0 0;
#X connect 12 0 2 0;
#X connect 13 0 12 0;
#X connect 14 0 16 0;
#X connect 14 1 20 0;
#X connect 15 0 18 0;
#X connect 16 0 19 0;
#X connect 17 0 19 0;
#X connect 18 0 19 0;
#X connect 19 0 2 0;
#X connect 20 0 15 0;
#X connect 20 1 17 0;
#X restore 490 287 pd guts;
#X obj 481 159 note 58 14 Menlo empty 0 0 0 0 0 0 0 0 0 1 Wet;
#X obj 301 410 tgl 25 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 300 479 else/display;
#X text 446 29 Allowing to display a number can be quite useful to monitor the value from dragging and typing. It's like having a built in attached number box. The Color of the number is the same as the foreground color and you don't have much configuring options other than font size and position., f 65;
#X obj 48 440 else/display;
#X obj 300 449 r \$0-number-typing;
#X obj 301 380 r \$0-number-active;
#X obj 143 383 s \$0-set-number;
#X obj 175 425 else/knob 60 0 127 0 0 \$0-number \$0-set-number #000000 #afafaf #ff0400 0 0 0 0 1 320 0 0 0 empty empty 3 12 7 -15 0 1 0 0;
#X obj 48 417 r \$0-number;
#X text 11 7 When you can click on the [knob] it gets activated by showing a tiny center circle. Clicking outside the object deactivates it. When active \, you can use the up/down or left/right arrow keys to increment and decrement values. Note you can press shift before activating the object \, in which case the arrow keys will also increase or decrease in hundredths like if you'd just drag the mouse while clicking., f 66;
#X msg 27 263 numbersize \$1 \, numberpos \$2 \$3, f 15;
#X text 11 91 When active \, hitting enter outputs the current value. You can also type a number value and hit enter to set it. When the number is displayed \, you can see the number you're typing followed by '|'. The activity status and numbers you type are sent to receive names that match the send name followed by "-active" and "-typing". Check in the example below \, which has the "\$0-number" send name. The usefulness of this is discussed on the right., f 66;
#X msg 40 236 18 0 64;
#X msg 27 210 12 7 -15;
#X text 446 95 For more sophisticated GUI display you can use the [note] object from ELSE \, which can offer you a different font \, a different color and you can also interact with the 'active' and 'typing' send names to configure the object., f 65;
#X text 466 328 Open the [pd guts] subpatches for details. In the examples above \, we use [makefilename] to format the number value with custom units. You can do something like that for any unit you are controlling on your patch \, like ms \, dB \, hz and whatnot. The first example to the left uses percentage and the number value goes bold when the object is active., f 59;
#X text 466 408 The one in the middle is for transposition and the number label goes red when active. The one to the right is a bit more complex and displays panning values (displaying 'center' in the middle position) and is underlined when active., f 59;
#X text 466 471 In all examples above you can type in values when the knob is active and the [note] objects will display the values because we have receive objects listening to what you type. The value you type is only effective when you press enter.;
#X text 467 524 HINT: You can also use the 'active' send name to configure the knob itself and change its color \, or change the color of the other knobs in your patch so the current knob is highlighted., f 59;
#X obj 143 195 else/initmess 3;
#X text 42 524 There are 4 different modes for number display. The default is '0' \, which never displays it. In mode "1" \, the number is always shown. Mode '2' shows the number value when the object is active. Mode "3" only shows the number when the object is active and you're typing a number., f 65;
#X obj 257 268 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 257 294 readonly \$1;
#X obj 260 319 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 260 345 active \$1;
#X text 257 175 'read only' disables all clicking activities and the object only responds to messages to set it. The 'active' message activates or deactivates the object in any case., f 25;
#X obj 182 617 else/knob 50 0 127 0 0 value set-value #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 1 12 6 -15 0 1 0 0;
#X obj 182 675 else/display;
#X obj 284 643 else/display;
#X obj 284 674 s set-value;
#X obj 284 618 r value-enter;
#X text 402 608 If you have a [receive] object with the address matching the send name followed by "-enter" \, then when you activate the object and hit enter \, this is where the value goes to instead of the outlet. This is needed if you have a complex rescaling mapping for your range. Then you can grab the output and perform the actual scaling before sending it back to the object. See the guts of [level~] and [level.m~] to see this in action., f 61;
#X connect 0 0 25 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 23 0 20 0;
#X connect 24 0 19 0;
#X connect 27 0 22 0;
#X connect 29 0 25 0;
#X connect 31 0 29 0;
#X connect 32 0 29 0;
#X connect 38 0 2 0;
#X connect 40 0 41 0;
#X connect 41 0 25 0;
#X connect 42 0 43 0;
#X connect 43 0 25 0;
#X connect 45 0 46 0;
#X connect 47 0 48 0;
#X connect 49 0 47 0;
#X restore 433 74 pd activity/number;
#X text 87 208 savestate <float>;
#X text 200 207 - non zero sets to state saving mode, f 58;
#X text 200 221 - non zero sets to loadbang mode, f 58;
#X text 129 222 lb <float>;
#X text 212 323 sets number display modes: '0'-never \, '1'-always \, '2'-when active \, '3'-when typing (default 0), f 56;
#X text 105 294 square <float>;
#X text 200 294 - non zero sets to square drawing mode (default: 1), f 58;
#X text 123 563 log <float>;
#X text 200 563 - sets to log mode (default: 0), f 58;
#X text 93 266 arcstart <float>;
#X text 74 719 -size <float> | -range <float \, float> | -bgcolor <list> | -arccolor <list> | -fgcolor <list> | -arcstart <float> | -noarc | -nosquare | -angle <float> | -circular | -jump | -discrete | -number <float> | -numbersize <float> | -numberpos <f \, f> | -receive <symbol> | -send <symbol> | -param <symbol> | -var <symbol> | -log | -exp <f> | -ticks <float> | -offset <float> | -savestate | -noloadbang | -readonly |, f 77;
#X text 93 619 readonly <float>;
#X text 200 619 - non zero sets to read only mode (default: 0), f 58;
#X text 159 280 reset;
#X text 200 280 - resets to arc start value, f 58;
#X text 93 633 activate <float>;
#X text 200 633 - non zero activates \, zero deactivates, f 58;
#N canvas 486 147 800 656 receive 0;
#X obj 266 380 r \$0-knob;
#X obj 122 363 else/knob 100 0 127 0 0 empty empty #dfdfdf #afafaf black 1 0 0 0 1 360 0 0 0 pitch empty 0 8 0 0 0 1 0 0;
#X msg 69 177 send \\\$0-knob;
#X msg 90 197 send empty;
#X text 37 20 When in edit mode \, [knob] shows its inlet/outlet. The inlet will always be hidden if you have a receive symbol \, same with the outlet if you have a send symbol. You can set a send symbol above to send messages to a matching [receive] object. A receive symbol makes [send] objects communicate to it., f 57;
#X msg 142 283 receive \\\$0-knob-set;
#X msg 153 306 receive empty;
#X msg 111 228 param pitch;
#X msg 122 249 param empty;
#X obj 266 412 else/display -noflash;
#X obj 122 530 else/display -noflash;
#X text 160 198 or just "send";
#X text 202 248 or just "param";
#X text 244 306 or just "receive";
#X text 37 94 If you set send/receive names to "empty" then the symbols are cleared and inlet/outlet are shown again (same if you give an actual empty symbol). Note you need to escape dollar signs with backslashes to set send receive names via messages or flags \, but not via properties!, f 57;
#X text 88 564 The 'param' message sets a symbol name before the value \, so you can directly control a parameter in an object without the need to pass through a message box. An "empty" symbol clears it., f 40;
#X text 227 476 <-- Unlike iemguis \, [knob] doesn't have a 'label' but you can use [note] for that, f 27;
#X floatatom 484 276 8 0 0 0 - - - 0;
#X obj 484 211 knob 50 0 127 0 0 \$0-knob2 \$0-knob2-set #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 0 0 0;
#X floatatom 397 241 7 0 0 0 - - - 0;
#X obj 565 176 bng 21 250 50 0 empty empty empty 0 -12 0 16 #dfdfdf #000000 #000000;
#X obj 397 212 r \$0-knob2;
#X obj 565 147 r \$0-knob2-learn;
#X obj 565 249 else/midi.learn;
#A saved;
#A saved;
#X msg 484 158 learn;
#X obj 635 220 bng 21 250 50 0 empty empty empty 0 -12 0 16 #dfdfdf #000000 #000000;
#X obj 635 187 r \$0-knob2-forget;
#X msg 497 183 forget;
#X obj 467 470 else/knob 50 0 127 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty \$0-x 0 0 0 0 0 0 0 0;
#X msg 467 415 var \\\$0-x;
#X msg 476 438 var empty;
#X obj 567 437 v \$0-x;
#X obj 623 403 bng 16 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X floatatom 567 462 7 0 0 0 - - - 0;
#X obj 569 493 r \$0-x;
#X floatatom 569 514 5 0 0 0 - - - 0;
#X obj 467 392 loadbang;
#X text 400 306 Use "var' to set a variable and send values to variables in [value] or [var] objects. Note that you also can do that if you have a send name that matches a variable name \, but with the 'var' symbol you bypass sending to a [receive] object and just set the variable directly. Like send/receive \, you need to escape dollar signs in messages.;
#X floatatom 467 528 7 0 0 0 - - - 0;
#X text 620 495 [receive] objects don't get the values., f 17;
#X text 643 398 query for the value, f 9;
#X obj 623 434 else/var \$0-x;
#X floatatom 623 462 7 0 0 0 - - - 0;
#X text 413 559 This is particularly useful if you have a 'param' name \, in which case you cannot send values to a [value] object with the same 'send' name \, for instance., f 60;
#X text 413 600 HINT: use [var] with [savestate] objects to save the current state of GUIs.;
#X text 252 460 HINT:;
#X msg 578 222 forget;
#X obj 565 273 s \$0-knob2-set;
#X text 666 248 <-- check;
#X text 684 262 it out;
#X obj 135 474 else/note 74 16 Menlo empty 4 0 0 0 0 223 223 223 1 1 pitch;
#X text 403 14 Use the "learn" message or "Ctrl+Click" ("command+click" on mac) for "MIDI learn". This mechanism sends a bang to a given send name followed by "-learn". Below \, the object has a "\$0-knob2" send name \, so it goes to "\$0-knob2-learn". You can use this to connect to a [midi.learn] object that actually offers a "MIDI Learn" mechanism. Try it below. Anyway \, even if you're not sending values anywhere \, the send name is needed for this. The MIDI forget follows the same mechanism and is triggered by the 'forget' message or "Shift+Ctrl+Click". Note that the shortcuts don't work in 'read only' mode., f 59;
#X connect 0 0 9 0;
#X connect 1 0 10 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X connect 8 0 1 0;
#X connect 18 0 17 0;
#X connect 20 0 23 0;
#X connect 21 0 19 0;
#X connect 22 0 20 0;
#X connect 23 0 47 0;
#X connect 24 0 18 0;
#X connect 26 0 25 0;
#X connect 26 0 46 0;
#X connect 27 0 18 0;
#X connect 28 0 38 0;
#X connect 29 0 28 0;
#X connect 30 0 28 0;
#X connect 31 0 33 0;
#X connect 32 0 31 0;
#X connect 32 0 41 0;
#X connect 34 0 35 0;
#X connect 36 0 29 0;
#X connect 41 0 42 0;
#X connect 46 0 23 0;
#X restore 415 93 pd receive send param var learn forget;
#X f 21;
#X connect 53 0 22 0;
