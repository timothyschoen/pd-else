#N canvas 579 38 561 666 10;
#X obj 182 113 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 182 138 metro 500;
#X obj 182 161 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 194 223 else/out~;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 305 3 graph;
#X obj 22 40 cnv 4 4 4 empty empty Granular 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 3 cnv 15 301 42 empty empty grain.sampler~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 4 635 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 6 287 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 533 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 78 540 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 80 294 cnv 17 3 210 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 6 583 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X obj 78 561 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 93 489 scale <list> - scale to autotune to in cents (default equal temperament), f 74;
#X text 105 419 pan <f \, f> - sets left and right pan boundaries (default -1 to 1), f 72;
#X text 93 475 autotune <f> - non-zero autotunes to a given scale (default 0), f 74;
#X text 187 541 signal - left channel output;
#X text 187 561 signal - right channel output;
#X obj 293 161 nbx 3 14 1 32 0 0 empty empty empty 0 -8 0 12 #dcdcdc #000000 #000000 0 256;
#X obj 94 40 cnv 4 4 4 empty empty sampler 0 28 2 18 #e0e0e0 #000000 0;
#N canvas 585 135 781 557 example 0;
#N canvas 958 281 408 394 tuning 0;
#X obj 64 339 outlet;
#X obj 94 236 else/eqdiv;
#X msg 63 80 autotune \$1;
#X obj 63 54 tgl 15 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 94 264 else/insert scale;
#X text 174 156 You can try other arbitrary scales in the same format, f 18;
#X text 154 137 <= some equal divisions;
#X text 180 64 The autotune message retunes the reading speed to match a given scale \, see [else/autotune] for reference., f 32;
#X msg 94 112 13 3;
#X msg 103 132 13 2;
#X msg 112 153 12 2;
#X msg 120 174 24 2;
#X msg 126 195 7 2;
#X connect 1 0 4 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X connect 8 0 1 0;
#X connect 9 0 1 0;
#X connect 10 0 1 0;
#X connect 11 0 1 0;
#X connect 12 0 1 0;
#X restore 59 175 pd tuning;
#N canvas 563 270 746 404 presets 0;
#X obj 86 335 outlet;
#X obj 69 126 loadbang;
#X text 165 35 Here we have different messages with all the setable parameters. The pan range is from -1 (left) to 1 (right) and the position in the sample is set proprtionally (0 is the beginning of the sample and 1 is the end). The 'rev' message sets the probability in percentage that the grain will be played backwards \, so \, for 0 \, we have all grains played forward. For 50 \, we have a 50/50 chance \, and for 100 \, all grains are reversed., f 65;
#X msg 69 150 n 256 \, dur 2000 \, transp -1200 1200 \, pan -1 1 \, amp 0.05 1 \, size 30 60 \, pos 0 1 \, rev 50, f 85;
#X msg 86 175 n 128 \, dur 1000 \, transp -600 600 \, pan -0.8 0.8 \, amp 0.1 1 \, size 40 60 \, pos 0 1 \, rev 100, f 87;
#X msg 101 200 n 10 \, dur 1000 \, transp -2400 -1200 \, pan -0.8 0.8 \, amp 0.1 1 \, size 150 250 \, pos 0.25 0.5 \, rev 50, f 95;
#X msg 112 224 n 10 \, dur 500 \, transp 0 1200 \, pan -0.8 0.8 \, amp 0.1 1 \, size 20 50 \, pos 0.5 1 \, rev 50, f 84;
#X msg 121 248 n 10 \, dur 1000 \, transp -2400 -1200 \, pan -0.8 0.8 \, amp 0.1 1 \, size 150 400 \, pos 0.5 1 \, rev 0, f 91;
#X msg 130 272 n 3 \, dur 1000 \, transp 0 1200 \, pan -0.8 0.8 \, amp 0.1 1 \, size 1000 3000 \, pos 0 1 \, rev 50, f 86;
#X msg 136 297 n 3 \, dur 1000 \, transp -1200 0 \, pan -0.8 0.8 \, amp 0.1 1 \, size 2000 4000 \, pos 0 1 \, rev 100, f 88;
#X connect 1 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X restore 91 210 pd presets;
#X obj 106 253 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 106 302 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 153 253 route dur;
#X obj 106 279 metro;
#X floatatom 153 275 5 0 0 0 - - - 0;
#X obj 99 472 else/out~;
#X text 193 207 Here's some presets for you to have fun with, f 23;
#X text 71 31 Try some of the presets and also try dfferent parameters from the settings here \, where we can change to synchronous mode and also the density (number of grains).;
#X text 71 72 By default \, we have an asynchronous mode \, and that means that the interval between grains are random. On the other hand \, synchronous mode spaces the grains equally within a cloud event. This is more noticeable if you have less density. You can set the object to sync mode at creation with the -sync flag., f 58;
#X text 163 212 <==;
#X text 125 176 <= about tuning;
#X msg 143 334 sync \$1;
#X obj 143 307 tgl 18 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 167 307 synchronous mode;
#X obj 244 375 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 286 371 density (number of grains);
#X msg 290 437 \$2;
#X floatatom 290 458 5 0 0 0 - - - 0;
#X msg 290 478 sr \$1;
#X text 327 457 sample rate;
#X obj 136 393 r \$0-set;
#X obj 290 500 s \$0-set;
#X text 439 462 If a sample has a dfferent sample rate than Pd's \, you can set it with the 'sr' message so the player adjusts the reading speed., f 49;
#X obj 550 198 else/function 200 100 empty empty 0 1 220 220 220 50 50 50 0 0 0 0 0 0.05 1 0.95 0;
#X obj 550 314 else/display;
#X obj 550 386 else/insert env;
#X msg 492 353 sin;
#X obj 550 163 else/initmess 0 0.05 1 0.95 0;
#X msg 524 353 tri;
#X msg 559 353 hann;
#X text 471 25 By default \, the envelope is a sine shape \, like the default in the [envelope~] object. You can set other envelope function types \, namely 'tri' \, 'hann' and 'gauss' (also like in the [envelope~] object). The gaussian envelope takes a float argument that sets the width., f 48;
#X text 471 96 You can also give it a list of values in the same syntax as taken by [function~] (which is used internally). This syntax is also given by the [function] GUI object., f 48;
#X text 482 205 [function];
#X obj 550 418 s \$0-set;
#X msg 596 353 gauss 0.3;
#X obj 91 428 else/grain.sampler~ -n 256 -t \$0-sax -sync, f 26;
#X obj 290 415 else/sample~ \$0-sax sax.wav;
#X connect 0 0 37 0;
#X connect 1 0 4 0;
#X connect 1 0 37 0;
#X connect 2 0 5 0;
#X connect 3 0 37 0;
#X connect 4 0 6 0;
#X connect 5 0 3 0;
#X connect 6 0 5 1;
#X connect 13 0 37 0;
#X connect 14 0 13 0;
#X connect 16 0 37 1;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 23 0;
#X connect 22 0 37 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 35 0;
#X connect 28 0 27 0;
#X connect 29 0 25 0;
#X connect 30 0 27 0;
#X connect 31 0 27 0;
#X connect 36 0 27 0;
#X connect 37 0 7 0;
#X connect 37 1 7 1;
#X connect 38 0 18 0;
#X restore 468 254 pd example;
#X text 38 86 [grain.sampler~] is a sample based granulator that generates clouds of grains., f 78;
#X obj 34 248 else/grain.synth~;
#X text 35 202 see also:;
#X obj 34 225 else/grain.live~;
#X text 123 334 dur <f> - sets cloud event duration in ms (default 500), f 69;
#X text 141 292 bang - plays an event of pitch clouds, f 66;
#X text 93 348 set <symbol> - sets table name with loaded sample, f 74;
#X text 99 376 size <f \, f> - sets min/max grain sizes in ms (default 50 to 450), f 73;
#X text 105 404 pos <f \, f> - sets min/max grain position (default 0 to 1), f 72;
#X text 105 433 amp <f \, f> - min/max amplitude values (default 0.1 to 1), f 72;
#X text 117 320 sync <f> - non zero sets to synchronous mode (default 0), f 70;
#X text 87 390 transp <f \, f> - sets min/max transposition in cents (default -1200 to 1200), f 75;
#X text 99 447 rev <float> - sets probability in % of grain being reversed (default 0), f 73;
#X text 105 362 sr <float> - sets sample rate for reading the buffer (default Pd's), f 72;
#X text 111 461 env <any> - envelope type (sin \, hann \, tri \, gauss) or function list, f 71;
#X obj 182 187 else/grain.sampler~ -n 32 -t \$0-sample, f 19;
#X text 117 306 n <float> - number of grains in cloud event (minimum 1 \, maximum 256), f 70;
#X text 66 592 -n <f> | -t <symbol> (table name) | -dur <f> | -size <f \, f> | -transp <f \, f> | -pan <f \, f> | -sync | -env <any> | -amps <f \, f> | -pos <f \, f> | -autotune <f> | -scale <list> | -rev <float>, f 79;
#X obj 78 509 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 135 510 float - number of grains in cloud event (minimum 1 \, maximum 256), f 64;
#X obj 313 126 else/sample~ \$0-sample violin.flac;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 45 0;
#X connect 27 0 45 1;
#X connect 45 0 3 0;
#X connect 45 1 3 1;
