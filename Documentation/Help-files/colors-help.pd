#N canvas 572 38 560 662 10;
#X obj 248 158 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 41 cnv 4 4 4 empty empty Pick/Convert 0 28 2 18 #e0e0e0 #000000 0;
#X obj 131 41 cnv 4 4 4 empty empty colors 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 4 cnv 15 301 42 empty empty colors 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 4 graph;
#X obj 4 306 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 483 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 518 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 105 492 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 106 312 cnv 17 3 166 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 634 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 198 312 bang;
#X text 154 232 click opens color picker =>, f 15;
#X msg 269 212 rgb 127 127 127;
#X msg 209 193 pick;
#X msg 263 189 hex #feabc4;
#X text 271 159 convert/output;
#X text 95 193 open color picker;
#N canvas 652 41 707 800 convert 0;
#X symbolatom 388 303 8 0 0 0 - - - 0;
#X obj 124 274 else/colors;
#X msg 144 183 to rgb \, hex #ab1f4c;
#X msg 124 157 to hex \, rgb 127 127 127;
#X msg 388 327 hex \$1;
#X msg 156 217 to ds \, bang;
#X text 83 86 You can define the output format with a flag \, and also with the "to" message., f 40;
#X text 76 352 Be aware that when you lose resolution when you convert to "ds" (Pd's Data Structures format)., f 38;
#X obj 124 303 else/display;
#X obj 388 238 else/display;
#X obj 388 381 else/display;
#X obj 65 706 else/display;
#X obj 457 449 vsl 15 128 0 360 0 0 empty empty empty 0 -9 0 10 #fcfcfc #000000 #000000 0 1;
#X floatatom 457 588 8 0 0 0 - - - 0;
#X obj 517 449 vsl 15 128 0 100 0 0 empty empty empty 0 -9 0 10 #fcfcfc #000000 #000000 0 1;
#X floatatom 517 588 8 0 0 0 - - - 0;
#X obj 587 449 vsl 15 128 0 100 0 0 empty empty empty 0 -9 0 10 #fcfcfc #000000 #000000 0 1;
#X floatatom 587 588 8 0 0 0 - - - 0;
#X obj 396 697 else/colors;
#X obj 396 726 else/display;
#X obj 550 697 else/colors;
#X obj 550 726 else/display;
#X text 489 414 HSL & HSV;
#X obj 253 478 vsl 15 128 0 100 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 253 685 else/display;
#X msg 253 624 gray \$1;
#X text 291 532 <= gray scale;
#X text 45 445 CMYK values (from \, 0 to 100);
#X msg 172 241 to iemgui \, bang;
#X obj 124 131 loadbang;
#X obj 388 276 else/colors;
#X text 477 265 converts to hexadecimal (default), f 11;
#X text 497 345 converts to RGB, f 8;
#X text 460 276 <=;
#X obj 388 351 else/colors -rgb;
#X obj 253 656 else/colors;
#X obj 65 677 else/colors -rgb;
#X obj 388 187 else/pack2 0 0 0;
#X obj 395 22 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 0;
#X obj 434 22 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 0;
#X obj 473 22 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #0400fc #fcfcfc #000000 0 0;
#X obj 395 164 int;
#X obj 434 164 int;
#X obj 473 164 int;
#X obj 388 212 else/insert rgb;
#X obj 396 667 else/insert hsl;
#X obj 550 667 else/insert hsv;
#X obj 396 636 else/pack2 0 0 0;
#X obj 550 636 else/pack2 0 0 0;
#X obj 65 650 else/insert cmyk;
#X obj 65 624 else/pack2 0 0 0 0;
#X obj 82 474 vsl 15 128 0 100 0 0 empty \$0-cyan empty 0 -9 0 10 #00fcfc #000000 #000000 0 1;
#X obj 106 474 vsl 15 128 0 100 0 0 empty \$0-yellow empty 0 -9 0 10 #fcfc00 #000000 #000000 0 1;
#X obj 132 474 vsl 15 128 0 100 0 0 empty empty empty 0 -9 0 10 #fc00fc #000000 #000000 0 1;
#X obj 161 474 vsl 15 128 0 100 0 0 empty empty empty 0 -9 0 10 #000000 #fcfcfc #000000 0 1;
#X connect 0 0 4 0;
#X connect 1 0 8 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 34 0;
#X connect 5 0 1 0;
#X connect 9 0 30 0;
#X connect 12 0 13 0;
#X connect 13 0 47 0;
#X connect 13 0 48 0;
#X connect 14 0 15 0;
#X connect 15 0 47 1;
#X connect 15 0 48 1;
#X connect 16 0 17 0;
#X connect 17 0 47 2;
#X connect 17 0 48 2;
#X connect 18 0 19 0;
#X connect 20 0 21 0;
#X connect 23 0 25 0;
#X connect 25 0 35 0;
#X connect 28 0 1 0;
#X connect 29 0 3 0;
#X connect 30 0 0 0;
#X connect 34 0 10 0;
#X connect 35 0 24 0;
#X connect 36 0 11 0;
#X connect 37 0 44 0;
#X connect 38 0 41 0;
#X connect 39 0 42 0;
#X connect 40 0 43 0;
#X connect 41 0 37 0;
#X connect 42 0 37 1;
#X connect 43 0 37 2;
#X connect 44 0 9 0;
#X connect 45 0 18 0;
#X connect 46 0 20 0;
#X connect 47 0 45 0;
#X connect 48 0 46 0;
#X connect 49 0 36 0;
#X connect 50 0 49 0;
#X connect 51 0 50 0;
#X connect 52 0 50 1;
#X connect 53 0 50 2;
#X connect 54 0 50 3;
#X restore 472 252 pd convert;
#X text 228 312 - output/convert color;
#X text 144 344 rgb <f \, f \, f>;
#X text 228 328 - open color picker;
#X text 198 328 pick;
#X text 150 360 hex <symbol>;
#X text 156 463 to <symbol>;
#X text 174 492 anything;
#X text 232 526 none;
#X obj 4 547 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 606 cnv 3 550 3 empty empty click 8 12 0 13 #dcdcdc #000000 0;
#X text 151 614 clicking on the object opens color picker;
#X obj 248 244 else/colors;
#X text 228 464 -;
#X text 162 390 ds <float>;
#X text 228 344 - RGB (Red \, Green and Blue) color values;
#X text 229 360 - hexadecimal color value;
#X text 340 188 color in hexadecimal;
#X text 369 210 color in RGB;
#X text 241 463 set conversion to "rgb" \, "hex" \, "gui" or "ds";
#X obj 248 272 else/display;
#X text 120 405 cmyk <f \, f \, f \, f>;
#X text 228 405 - CMYK (Cyan \, Magente Yellow and Key) color values;
#X text 144 419 hsl <f \, f \, f>;
#X text 144 433 hsv <f \, f \, f>;
#X text 150 448 gray <float>;
#X text 228 419 - HSL (Hue \, Saturation and Lightness) color values;
#X text 228 433 - HSV (Hue \, Saturation and Value) color values, f 50;
#X text 228 448 - grayscale value from 0 to 100;
#X text 77 88 [colors] is a color picker and converter. You can set the output format and also convert from other input formats. Colors that you pick and colors you send to the object are stored and recalled next time you open the color picker. This object is useful for setting color properties inside abstractions., f 66;
#N canvas 750 160 720 512 iemgui/DS 0;
#X obj 227 144 cnv 15 90 250 empty empty empty 20 12 0 14 #000000 #404040 0;
#X obj 229 146 cnv 15 86 246 empty \$0-set-cnv empty 20 12 0 14 #000000 #404040 0;
#X text 228 126 GUI;
#X text 557 122 Data Structures;
#N canvas 4 23 450 300 \$0-DS 0;
#X coords 0 0 1 1 90 250 2 100 100;
#X restore 560 144 pd \$0-DS;
#N canvas 488 57 292 236 set-gui 0;
#X msg 64 148 color \$1;
#X obj 64 170 send \$0-set-cnv;
#X obj 106 96 loadbang;
#X msg 106 116 -1;
#X obj 64 62 inlet;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X restore 44 402 pd set-gui;
#N canvas 359 38 276 256 set-ds 0;
#N canvas 98 230 427 275 \$0-pixel 0;
#X obj 74 152 struct \$0-pixel float color;
#X obj 74 184 filledpolygon color 0 2 0 0 0 1 1 1 1 0;
#X restore 79 188 pd \$0-pixel;
#X obj 161 39 inlet;
#X obj 68 65 else/lb;
#X msg 68 122 clear \, scalar \$1 \$2;
#X obj 68 146 send pd-\$0-DS;
#X obj 68 96 pack2 \$0-pixel 0;
#X connect 1 0 5 1;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X restore 391 375 pd set-ds;
#X obj 391 313 else/colors -ds;
#X obj 391 342 else/display;
#X obj 44 365 else/display;
#X msg 44 249 to hex;
#X text 132 27 [colors] can output color values specially for Pd Vanilla's GUI objects (aka iemgus) and Data Structures. In recent versions of Pd \, the iemguis also understand colors with hex notation \, which should be the best practice way to work with colors in these objects nowadays. But [colors] can also set to the particular and old iemgui float format., f 72;
#X text 152 430 Data Structures also have a particular format to set colors \, provided by colors with the '-ds' flag or "to ds" message. Note that these have less color resolution.;
#X obj 44 333 else/colors -iemgui;
#X msg 22 221 to iemgui;
#X obj 76 286 else/pack2 0 0 0;
#X obj 100 148 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 0;
#X obj 122 148 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 0;
#X obj 145 148 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #0400fc #fcfcfc #000000 0 0;
#X obj 76 309 else/insert rgb;
#X obj 391 263 else/pack2 0 0 0;
#X obj 415 125 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 0;
#X obj 437 125 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 0;
#X obj 460 125 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #0400fc #fcfcfc #000000 0 0;
#X obj 391 286 else/insert rgb;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X connect 9 0 5 0;
#X connect 10 0 13 0;
#X connect 13 0 9 0;
#X connect 14 0 13 0;
#X connect 15 0 19 0;
#X connect 16 0 15 0;
#X connect 17 0 15 1;
#X connect 18 0 15 2;
#X connect 19 0 13 0;
#X connect 20 0 24 0;
#X connect 21 0 20 0;
#X connect 22 0 20 1;
#X connect 23 0 20 2;
#X connect 24 0 7 0;
#X restore 460 272 pd iemgui/DS;
#X text 228 492 - color values (in RGB \, hex \, iemgui or ds);
#X text 138 375 iemgui <float>;
#X text 229 375 - iemgui's color format value;
#X text 229 390 - Data Structures' color value;
#X text 142 555 -rgb - sets to RGB list output (default hexadecimal), f 59;
#X text 124 570 -iemgui - sets to iemguis output (default hexadecimal), f 62;
#X text 148 585 -ds - sets to Data Structures output (default hexadecimal);
#X text 37 276 output (hexadecimal by default) =>;
#X connect 0 0 38 0;
#X connect 21 0 38 0;
#X connect 22 0 38 0;
#X connect 23 0 38 0;
#X connect 38 0 46 0;
