#N canvas 546 89 568 483 10;
#X obj 306 3 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 2 pd;
#X obj 345 10 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 145 39 cnv 4 4 4 empty empty train 0 28 2 18 #e0e0e0 #000000 0;
#X obj 95 39 cnv 4 4 4 empty empty pulse 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 10 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 10 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 10 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 25 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 25 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 193 39 cnv 4 4 4 empty empty oscillator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 309 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 408 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 82 318 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 3 451 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 150 415 1) float;
#X obj 219 139 nbx 5 14 -50 50 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #4a4f51 #cde5c3 #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #4a4f51 #cde5c3 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 505 70 pd;
#X obj 3 2 cnv 15 301 42 empty empty randpulse2~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 2 graph;
#X obj 3 226 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 83 234 cnv 17 3 65 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 24 39 cnv 4 4 4 empty empty Random 0 28 2 18 #e0e0e0 #000000 0;
#X text 143 249 seed <float>;
#X text 209 414 - density (default 0);
#X text 150 431 2) float;
#X obj 219 164 else/randpulse2~ 50;
#X text 143 264 rand <float>;
#X text 224 263 - non zero sets to random gate value mode;
#X text 209 430 - non zero sets to random gate value mode (default 0);
#N canvas 622 221 467 476 rand 0;
#X obj 130 268 else/graph~ 441 3;
#X msg 69 132 rand \$1;
#X obj 69 107 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 147 205 else/out~;
#X obj 129 132 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 129 168 else/randpulse2~ 1500 1;
#X obj 132 105 hsl 128 15 100 44100 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X text 47 23 By default \, gate values in [randopulse2~] are "1" \, but you can set it to random mode with the second argument (non zero value) \, where it gives you random positive and negative values (in the range from -1 to 1). You can also use the "rand" message to change this.;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X restore 434 166 pd rand;
#X text 35 150 see also:;
#X obj 31 174 else/randpulse~;
#X obj 219 190 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 6 342 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 135 351 -seed <float>: seed value (default: unique internal);
#X text 224 248 - a float sets seed \, no float sets a unique internal;
#N canvas 877 139 466 374 seed 0;
#X text 64 15 Pseudo random number generators aren't true random number generators. Instead \, an algorithm is used to provide a sequence of numbers that seems random. The same sequence can be reproduced if you set a "seed" value \, which can be any integer number., f 57;
#X text 64 139 You can set a seed with the '-seed' flag. If you don't supply it \, each object gets its own seed internal seed. If you send a 'seed' message without float \, the object also gets a unique seed value., f 57;
#X msg 339 264 seed;
#X msg 329 235 seed 123;
#X obj 60 311 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 190 311 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 329 297 s \$0-randpulse2~;
#X obj 190 223 r \$0-randpulse2~;
#X obj 60 223 r \$0-randpulse2~;
#X text 64 78 Seeds are kept locally \, which means that if two [randpulse2~] objects are seeded the same they will have the same output. Conversely \, you can seed the same [randpulse2~] object twice with the same seed to repeat the output., f 57;
#X obj 60 253 else/randpulse2~ -seed 123 2 1, f 16;
#X obj 190 253 else/randpulse2~ -seed 123 2 1, f 16;
#X connect 2 0 6 0;
#X connect 3 0 6 0;
#X connect 7 0 11 0;
#X connect 8 0 10 0;
#X connect 10 0 4 0;
#X connect 11 0 5 0;
#X restore 485 166 pd seed;
#X obj 32 197 else/randpulse2;
#X text 279 137 <-- density;
#N canvas 683 110 622 689 multichannel 0;
#X obj 100 87 hsl 128 15 1 5000 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 97 116 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 181 117 density;
#X obj 97 241 else/out.mc~;
#X msg 161 161 ch 2;
#X msg 116 160 ch 1;
#X obj 405 217 else/out.mc~;
#X text 29 25 The -ch flag or message sets the number of output channels. This is only meaningful if you have a single channel input., f 42;
#X obj 235 599 else/out~;
#X floatatom 235 417 5 0 0 0 - - - 12;
#X msg 248 448 400 600;
#X text 126 330 You can initialize the object with multichannel if you give it a list of frequencies with the -mc flag (you can't set phases though). A list input also works if no signal is connected to set it to multichannel with a list of frequency input., f 62;
#X text 348 509 the set message sets a single frequency channel, f 17;
#X obj 97 207 else/randpulse2~ -ch 2 50;
#X obj 405 179 else/randpulse2~;
#X obj 405 134 else/sigs~ 30 50;
#X text 316 28 If you have a multichannel connection in the frequency input \, [randpulse2~] generates a signal with the same number of channels and the 'ch' message or flag is meaningless. The multichannel input is the density for each output., f 44;
#X obj 235 568 else/randpulse2~ -mc 440 660;
#X msg 278 521 set 1 1555;
#X msg 261 478 100 600 1700;
#X connect 0 0 1 0;
#X connect 1 0 13 0;
#X connect 4 0 13 0;
#X connect 5 0 13 0;
#X connect 9 0 17 0;
#X connect 10 0 17 0;
#X connect 13 0 3 0;
#X connect 14 0 6 0;
#X connect 15 0 14 0;
#X connect 17 0 8 0;
#X connect 18 0 17 0;
#X connect 19 0 17 0;
#X restore 437 187 pd multichannel;
#X text 60 86 [randpulse2~] is a random pulse train oscillator. It alternates at random intervals according to a "density" parameter \, which controls the average frequency. It has support for multichannels., f 65;
#X text 121 371 -ch <float>: number of output channels (default 1);
#X text 127 386 -mc <list>: sets multichannel output with a list of frequencies, f 63;
#X text 134 233 list/signal(s) - density value(s);
#X text 95 281 set <float \, float> -;
#X text 221 281 <channel \, freq> set a single density channel, f 50;
#X text 224 317 - random pulse signal(s);
#X text 161 318 signal(s);
#X connect 16 0 26 0;
#X connect 26 0 33 0;
