#N canvas 538 38 563 532 10;
#X obj 3 3 cnv 15 301 42 empty empty dust2~ 20 20 2 37 #e0e0e0 #000000 0;
#X obj 307 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 306 3 pd;
#X obj 346 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 24 40 cnv 4 4 4 empty empty Random 0 28 2 18 #e0e0e0 #000000 0;
#X obj 459 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 479 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 465 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 93 40 cnv 4 4 4 empty empty impulses 0 28 2 18 #e0e0e0 #000000 0;
#X obj 212 166 hsl 128 15 1 5000 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 209 253 else/out~;
#X obj 209 195 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 293 196 density;
#X obj 209 221 else/dust2~ 1;
#X obj 38 267 else/dust~;
#X text 39 245 see also:;
#N canvas 777 84 466 384 seed 0;
#X text 64 15 Pseudo random number generators aren't true random number generators. Instead \, an algorithm is used to provide a sequence of numbers that seems random. The same sequence can be reproduced if you set a "seed" value \, which can be any integer number., f 57;
#X text 64 129 You can set a seed with the '-seed' flag. If you don't supply it \, each object gets its own seed internal seed. If you send a 'seed' message without float \, the object also gets a unique seed value., f 57;
#X msg 377 276 seed;
#X msg 367 247 seed 123;
#X obj 47 294 else/trighold~;
#X obj 207 297 else/trighold~;
#X obj 47 338 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 207 338 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 367 309 s \$0-dust;
#X obj 47 230 r \$0-dust;
#X obj 207 230 r \$0-dust;
#X text 64 78 Seeds are kept locally \, which means that if two [dust2~] objects are seeded the same they will have the same output. Conversely \, you can seed the same [dust2~] object twice with the same seed to repeat the output., f 57;
#X obj 47 260 else/dust2~ -seed 123 1;
#X obj 207 260 else/dust2~ -seed 123 1;
#X connect 2 0 8 0;
#X connect 3 0 8 0;
#X connect 4 0 6 0;
#X connect 5 0 7 0;
#X connect 9 0 12 0;
#X connect 10 0 13 0;
#X connect 12 0 4 0;
#X connect 13 0 5 0;
#X restore 478 253 pd seed;
#X obj 4 506 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 4 317 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 386 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 473 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 107 395 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 106 326 cnv 17 3 50 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 169 395 signal;
#X text 177 482 1) float;
#X text 218 326 - density (rate) of random impulses;
#X text 238 481 - density (default 0);
#X text 133 327 float/signal;
#X text 133 343 seed <float>;
#X obj 6 422 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 135 431 -seed <float>: seed value (default: unique internal);
#X text 217 343 - a float sets seed \, no float sets a unique internal;
#X text 217 360 - set number of output channels;
#X text 147 447 -ch <float>: number of output channels (default 1);
#X text 218 396 - random impulses;
#N canvas 494 125 607 338 multichannel 0;
#X obj 100 87 hsl 128 15 1 5000 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 97 116 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 181 117 density;
#X obj 97 241 else/out.mc~;
#X msg 161 161 ch 2;
#X msg 116 160 ch 1;
#X obj 405 217 else/out.mc~;
#X obj 405 134 else/sigs~ 1 11;
#X text 29 25 The -ch flag or message sets the number of output channels. This is only meaningful if you have a single channel input., f 42;
#X obj 97 207 else/dust2~ -ch 2 50;
#X obj 405 179 else/dust2~;
#X text 316 28 If you have a multichannel connection in the frequency input \, [dust2~] generates a signal with the same number of channels and the 'ch' message or flag is meaningless. The multichannel input is the density for each output., f 44;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 4 0 9 0;
#X connect 5 0 9 0;
#X connect 7 0 10 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X restore 430 277 pd multichannel;
#X text 145 360 ch <float>;
#X obj 38 290 else/velvet~;
#X text 53 87 [dust~] is based on SuperCollider's "Dust2" UGEN and outputs random impulse values (from -1 to 1) at random times according to a density parameter. At high frequencies there's a good chance of consecutive non zero values. To the extreme \, it becomes white noiset. It has support for multichannels., f 68;
#X connect 10 0 12 0;
#X connect 12 0 14 0;
#X connect 14 0 11 0;
