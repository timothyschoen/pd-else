#N canvas 486 38 569 592 10;
#X obj 23 36 cnv 4 4 4 empty empty Filtered\ delay 0 28 2 18 #e0e0e0 #000000 0;
#X obj 207 232 else/out~;
#X obj 11 298 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 11 442 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 10 516 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 10 564 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 103 308 cnv 17 3 79 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 11 480 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X obj 101 453 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 190 455 signal - filter delay output;
#X obj 101 393 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 101 417 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 193 394 signal - delay time in ms;
#X text 192 417 signal - feedback amount;
#X obj 2 4 cnv 15 301 42 empty empty filterdelay~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X text 50 86 [filterdelay~] is a high level delay unit that goes thgouh a resonant lowpass filter \, a soft clipper and a DC filter. The processed delay output is also fed back into the delay line., f 70;
#X obj 207 199 else/filterdelay~ 600 0.5;
#X floatatom 280 174 6 0 0 0 - - - 0;
#X floatatom 354 174 8 0 0 0 - - - 0;
#X text 218 174 time (ms);
#X text 333 173 fb;
#X text 145 357 freeze <float> - non zero freezes the delay, f 45;
#X text 199 373 clear - clear the delay line, f 36;
#X text 176 525 1) float - delay time in ms (default 0);
#X text 176 542 2) float - feedback amount (default 0);
#X text 145 308 cutoff <float> - resonant filter cutoff in hz \, default 20Khz;
#X text 151 325 reson <float> - filter resonance (0-1) \, default 0;
#X text 163 341 wet <float> - dry wet ratio (0-1) \, default 0.5;
#X text 138 490 -cutoff <float> | -reson <float> | -wet <float>;
#N canvas 404 136 780 342 example 0;
#X floatatom 432 150 7 0 0 0 - - - 0;
#X floatatom 506 151 7 -200 200 0 - - - 0;
#X floatatom 659 70 5 0 100 0 - - - 0;
#X obj 659 181 tgl 22 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 659 213 freeze \$1;
#X floatatom 585 70 10 20 20000 0 - - - 0;
#X msg 659 92 reson \$1;
#X msg 585 92 cutoff \$1;
#X msg 672 244 clear;
#X msg 585 222 wet \$1;
#X obj 359 244 else/out~;
#X text 25 201 The freeze parameter stops recording the input into the delay line and the feedback value is set to 1 (if >= 0) or -1 (if negative). Delay time modulation and filtering is still possible., f 50;
#X text 25 21 The filter is a 2nd order lowpass filter much like [lowpass~]. Note that it gets bypassed when the cutoff is 20 khz or more. The resonance parameter is from 0 to 1 \, where at 0 there's no resonance. Since the filter output can be fed back into the delay line \, the resonance behaves as an increasing feedback parameter around this center frequency. This is minimized by a soft clipping stage (an atan function just like in the [drive~] object)., f 50;
#X text 25 127 The feedback parameter can be positive or negative and there are no restrains \, hence you can have values over 1 or below -1 \, but the soft clipping also takes care of high feedback values. A DC block filter is also present to prevent other artifacts from the processing., f 50;
#X obj 659 18 else/knob 41 0 1 0 0 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 0 empty empty 0 0 0 0 0 0 0 0;
#X floatatom 585 196 5 0 100 0 - - - 0;
#X obj 585 144 else/knob 41 0 1 0 0.5 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 0 empty empty 0 0 0 0 0 0 0 0;
#X obj 359 180 else/filterdelay~ 500 0.7;
#X text 429 76 time ms;
#X text 500 76 feedback;
#X obj 372 149 r \$0-del;
#X obj 659 273 s \$0-del;
#X obj 659 127 s \$0-del;
#X text 27 262 For a better idea of this module diagram \, check this version in a patch:, f 41;
#X obj 585 18 else/knob 41 100 5000 2 100 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 100 empty empty 0 0 0 0 0 0 0 0;
#X obj 432 96 else/knob 41 10 1000 2 10 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 10 empty empty 0 0 0 0 0 0 0 0;
#X obj 506 96 else/knob 41 -2 2 0 0 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 0 empty empty 0 0 0 0 0 0 0 0;
#N canvas 520 122 531 468 patch 0;
#X floatatom 378 151 10 0 100 0 - - - 0;
#X floatatom 310 133 8 20 20000 0 - - - 0;
#X obj 243 208 hip~ 5;
#X obj 243 279 *~ 0.7;
#X obj 228 321 +~;
#X msg 264 368 clear;
#X obj 84 309 else/xfade~;
#X obj 84 344 else/out~;
#X obj 228 402 else/del~ in fdel2 5555;
#X obj 243 123 else/del~ out fdel2, f 9;
#X obj 243 242 else/drive~;
#X obj 243 174 else/lowpass~, f 23;
#X text 317 244 soft clip;
#X text 288 209 DC filter;
#X floatatom 309 328 7 -200 200 0 - - - 0;
#X text 355 329 feedback;
#X floatatom 243 96 7 0 0 0 - - - 0;
#X text 237 23 time ms;
#X text 308 55 cutoff;
#X text 370 74 resonance;
#X floatatom 184 244 5 0 100 0 - - - 0;
#X text 193 171 wet;
#X text 42 72 This patch is quite similar to [filterdelay~] and is given here for didactical reasons. The only thing missing is the freeze toggle., f 27;
#X obj 184 190 else/knob 41 0 1 0 0.5 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 0 empty empty 0 0 0 0 0 0 0 0;
#X obj 243 45 else/knob 41 10 1000 2 10 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 10 empty empty 0 0 0 0 0 0 0 0;
#X obj 310 81 else/knob 41 100 5000 2 100 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 100 empty empty 0 0 0 0 0 0 0 0;
#X obj 378 96 else/knob 41 0 1 0 0 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 0 empty empty 0 0 0 0 0 0 0 0;
#X obj 84 222 else/player~ bubul.mp3 1 1, f 13;
#X connect 0 0 11 2;
#X connect 1 0 11 1;
#X connect 2 0 10 0;
#X connect 3 0 4 1;
#X connect 4 0 8 0;
#X connect 5 0 8 0;
#X connect 6 0 7 0;
#X connect 9 0 11 0;
#X connect 10 0 3 0;
#X connect 10 0 6 1;
#X connect 11 0 2 0;
#X connect 14 0 3 1;
#X connect 16 0 9 0;
#X connect 20 0 6 2;
#X connect 23 0 20 0;
#X connect 24 0 16 0;
#X connect 25 0 1 0;
#X connect 26 0 0 0;
#X connect 27 0 4 0;
#X connect 27 0 6 0;
#X restore 226 285 pd patch;
#X obj 359 33 else/player~ bubul.mp3 1 1;
#X connect 0 0 17 1;
#X connect 1 0 17 2;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 21 0;
#X connect 5 0 7 0;
#X connect 6 0 22 0;
#X connect 7 0 22 0;
#X connect 8 0 21 0;
#X connect 9 0 21 0;
#X connect 14 0 2 0;
#X connect 15 0 9 0;
#X connect 16 0 15 0;
#X connect 17 0 10 0;
#X connect 20 0 17 0;
#X connect 24 0 5 0;
#X connect 25 0 0 0;
#X connect 26 0 1 0;
#X connect 28 0 17 0;
#X restore 469 264 pd example;
#X text 34 163 see also:;
#X obj 32 187 else/ffdelay~;
#X obj 32 211 else/fbdelay~;
#X obj 32 235 else/del~;
#X obj 32 258 else/lowpass~;
#X obj 207 143 else/player~ bubul.mp3 1 1;
#X connect 25 0 1 0;
#X connect 26 0 25 1;
#X connect 27 0 25 2;
#X connect 44 0 25 0;
#X coords 0 0 1 1 85 60 0;
