#N canvas 471 38 560 588 10;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Store 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 71 40 cnv 4 4 4 empty empty messages 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 3 cnv 15 301 42 empty empty store 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X obj 4 266 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 433 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 486 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 120 442 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 120 275 cnv 17 3 130 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 550 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 191 273 bang;
#X obj 120 411 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 167 411 anything;
#X text 167 442 anything;
#X text 185 329 clear;
#X msg 215 158 clear;
#X obj 205 231 else/display;
#X obj 205 132 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X msg 309 179 1 2 \, 3 4 \, 5 6;
#X text 221 442 - the stored message;
#X obj 120 463 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 159 132 output;
#X floatatom 286 127 5 0 0 0 - - - 0;
#X text 324 126 store messages;
#X msg 298 153 a \, b c \, list x y \, symbol hi;
#X text 191 315 dump;
#X text 221 372 - opens [text] window;
#X text 221 387 - closes [text] window;
#N canvas 863 183 503 298 open 0;
#X obj 171 217 else/display;
#X obj 171 143 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X msg 272 166 1 2 \, 3 4 \, 5 6;
#X floatatom 238 114 5 0 0 0 - - - 0;
#X text 279 113 store messages;
#X msg 258 139 a \, b c \, list x y \, symbol hi;
#X msg 85 144 open;
#X msg 122 144 close;
#X obj 171 193 else/store, f 15;
#A saved;
#X text 110 193 click -->;
#X text 82 29 The [store] object is based on Pd Vanilla's [text] object. You can open its window with the 'show' message and close it with the 'hide' message. Clicking on the object also opens it. This also means you can manually edit the contents of stack!;
#X connect 1 0 8 0;
#X connect 2 0 8 1;
#X connect 3 0 8 1;
#X connect 5 0 8 1;
#X connect 6 0 8 0;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X restore 491 181 pd open \; close;
#N canvas 935 178 425 279 store 0;
#X obj 97 205 else/display;
#X msg 97 127 open;
#X msg 196 155 a \, b c \, list x y \, symbol hi;
#X msg 152 95 clear;
#X obj 97 179 else/store 1, f 17;
#A saved a \; b c \; list x y \; symbol hi \;;
#X text 85 39 You can store messages with the object if it has a non zero argument., f 39;
#X obj 152 120 t b a;
#X obj 62 136 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 196 207 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X connect 1 0 4 0;
#X connect 2 0 4 1;
#X connect 3 0 6 0;
#X connect 4 0 0 0;
#X connect 4 1 8 0;
#X connect 6 0 2 0;
#X connect 6 1 4 0;
#X connect 7 0 4 0;
#X restore 492 235 pd store;
#X obj 286 231 display;
#X text 209 357 n;
#X text 221 356 - outputs number of elements in right outlet;
#X msg 226 182 n;
#X obj 4 519 cnv 3 550 3 empty empty click 8 12 0 13 #dcdcdc #000000 0;
#X obj 150 40 cnv 4 4 4 empty empty sequentially 0 28 2 18 #e0e0e0 #000000 0;
#X obj 205 207 else/store, f 14;
#A saved;
#N canvas 869 149 359 260 dump 0;
#X obj 96 156 else/display;
#X floatatom 153 98 5 0 0 0 - - - 0;
#X text 194 97 store messages;
#X msg 96 96 dump;
#X obj 96 198 print data;
#X obj 153 159 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 96 129 else/store;
#A saved;
#X text 178 160 <= bang when done;
#X text 55 43 A dump message outputs all stored messages \, the information is kept., f 34;
#X connect 0 0 4 0;
#X connect 1 0 6 1;
#X connect 3 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X connect 6 1 5 0;
#X restore 497 213 pd dump;
#X msg 154 168 goto 2;
#X text 221 411 - messages to be stored in a sequence;
#X text 55 88 [store] is an abstraction based on [text] that stores incoming messages sequentially., f 73;
#X text 221 273 - outputs element from sequence and goes forward;
#X text 221 315 - outputs all stored messages sequentially;
#X text 221 329 - clears all messages, f 42;
#X text 185 287 float;
#X text 221 287 - sets index and outputs stored messages at index;
#X text 143 301 goto <float>;
#X text 221 301 - sets index to output on next bang message;
#X text 167 463 anything;
#X text 221 463 - bang at end of sequence or 'n' number of messages;
#X text 110 496 float - non-zero sets to store elements with the patch (default 0), f 66;
#X floatatom 121 169 4 0 0 0 - - - 0;
#X text 19 174 see also:;
#X obj 19 235 else/sequencer;
#X obj 19 193 else/stack;
#X obj 19 214 else/rec;
#X text 191 372 show;
#X text 191 387 hide;
#X text 163 527 clicking on the object opens [store]'s window;
#X text 191 343 sort;
#X text 221 343 - sort stored data alphabetically, f 42;
#X connect 23 0 44 0;
#X connect 25 0 44 0;
#X connect 26 0 44 1;
#X connect 30 0 44 1;
#X connect 32 0 44 1;
#X connect 41 0 44 0;
#X connect 44 0 24 0;
#X connect 44 1 38 0;
#X connect 46 0 44 0;
#X connect 59 0 44 0;
