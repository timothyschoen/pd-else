#N canvas 516 38 561 632 10;
#X obj 4 263 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 455 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 544 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 609 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 91 462 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 91 271 cnv 17 3 116 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 150 268 signal;
#X obj 2 3 cnv 15 301 42 empty empty ramp~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 23 40 cnv 4 4 4 empty empty Resettable 0 28 2 18 #e0e0e0 #000000 0;
#X obj 107 40 cnv 4 4 4 empty empty ramp 0 28 2 18 #e0e0e0 #000000 0;
#X obj 194 134 else/imp~ 1;
#X obj 194 216 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 194 190 else/sig2float~;
#X obj 197 239 hsl 128 15 0 44100 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 163 135 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 150 462 signal;
#X text 162 283 bang;
#X text 192 315 - sets the reset point value;
#X obj 91 392 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 114 393 float/signal;
#X obj 91 413 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 114 414 float/signal;
#X obj 91 433 cnv 17 3 17 empty empty 3 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 114 435 float/signal;
#X text 192 462 - the ramp signal;
#N canvas 852 143 414 568 frequency 0;
#X obj 103 178 /~;
#X obj 84 275 expr~ sin($v1);
#X obj 84 236 else/ramp~;
#X obj 103 206 *~;
#X obj 118 148 else/sr~;
#X obj 141 182 else/pi 2;
#X obj 102 319 else/out~;
#X text 162 119 Hertz;
#X text 173 149 sample rate;
#X text 203 183 max = 2*pi;
#X text 167 236 (Having an oscillator the hard way);
#X obj 84 396 else/graph~ 500 6;
#X obj 103 119 sig~ 440;
#X text 24 22 If one wants [ramp~] to output a signal with frequency in hertz (oscillating between min and max values) \, then the increment value should be (max - min) * freq / sr (where freq is the frequency in hz and sr is the sampling rate). Anyway \, this makes it wrk like a [phasor~].;
#X connect 0 0 3 0;
#X connect 1 0 11 0;
#X connect 1 0 6 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 0 1;
#X connect 5 0 2 3;
#X connect 5 0 3 1;
#X connect 12 0 0 0;
#X restore 468 236 pd frequency;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #dcdcdc #7c7c7c #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #dcdcdc #7c7c7c 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 505 61 pd;
#X text 192 393 - sets the increment value (default 1);
#X text 192 414 - sets the minimum value (default 0);
#X text 192 435 - sets the maximum value (default 2ˆ32 - 1);
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #dcdcdc #7c7c7c #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #dcdcdc #7c7c7c 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 505 61 pd;
#X text 139 549 1) float;
#X text 139 564 2) float;
#X text 139 578 3) float;
#X text 139 592 4) float;
#X text 193 549 - increment value (default 1), f 43;
#X text 193 563 - minimum value (default 0), f 43;
#X text 193 577 - maximum value (default 2ˆ32 - 1), f 43;
#N canvas 650 38 532 668 read 0;
#X floatatom 280 207 0 0 0 0 - - - 0;
#X text 370 233 sample size;
#X text 76 353 The [ramp~] object loops automatically \, you can set different loop points and a reset/restart value outside the loop., f 68;
#X obj 150 599 else/out~;
#X obj 150 494 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 96 495 restart;
#X obj 102 267 else/out~;
#X obj 134 106 hsl 128 15 -2 2 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 131 160 else/float2sig~ 100 1;
#X obj 131 132 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 102 132 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 50 132 restart;
#X obj 102 191 else/ramp~, f 15;
#X obj 159 404 tgl 15 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 159 425 select 0 1;
#X msg 187 493 mode 0;
#X obj 280 231 value \$0-size;
#X obj 348 488 value \$0-size;
#X msg 246 493 mode 1;
#X msg 333 458 50000;
#X text 179 403 on/off loop;
#X msg 280 158 show;
#X text 69 17 [ramp~] is very convenient for driving [tabread4~] or [else/table~] as to read samples at different speeds. With an increment of "1" \, it reads at the original speed \, at "2" it reads twice as fast \, "0.5" half as fast \, and so on. Note it can also play it backwards at different speeds with negative increment values., f 69;
#X obj 150 523 else/ramp~ -off 1 10000 50000 0;
#X obj 102 227 tabread~ \$0-sample;
#X obj 150 558 tabread~ \$0-sample;
#X obj 280 182 else/sample~ \$0-sample vacuous.flac;
#X connect 0 0 12 3;
#X connect 0 0 16 0;
#X connect 4 0 23 0;
#X connect 7 0 9 0;
#X connect 8 0 12 1;
#X connect 9 0 8 0;
#X connect 10 0 12 0;
#X connect 12 0 24 0;
#X connect 13 0 14 0;
#X connect 14 0 17 0;
#X connect 14 0 18 0;
#X connect 14 1 15 0;
#X connect 14 1 4 0;
#X connect 14 1 19 0;
#X connect 15 0 23 0;
#X connect 17 0 23 3;
#X connect 18 0 23 0;
#X connect 19 0 23 3;
#X connect 21 0 26 0;
#X connect 23 0 25 0;
#X connect 24 0 6 0;
#X connect 25 0 3 0;
#X connect 26 0 0 0;
#X restore 450 216 pd read buffers;
#X text 156 299 float;
#X text 192 299 - jump to the float's value;
#X text 162 344 stop;
#X text 156 360 start;
#X text 120 315 set <float>;
#X text 192 376 - stops and goes back to the reset point;
#X text 156 376 reset;
#X text 192 344 - stops incrementing;
#X text 192 360 - (re)starts incrementing;
#N canvas 277 120 1052 471 examples-1 0;
#X obj 71 258 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 71 229 else/sig2float~;
#X obj 71 293 vsl 15 128 0 127 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 71 170 bng 16 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 470 202 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 470 173 else/sig2float~;
#X obj 470 237 vsl 15 128 -1 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 470 113 bng 16 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 491 262 0.5;
#X text 489 229 1;
#X text 491 294 0;
#X text 491 358 -1;
#X text 53 415 0;
#X text 41 285 127;
#X text 35 348 63.5;
#X msg 139 158 0.001;
#X msg 126 130 -0.001;
#X text 27 27 Below \, we have [ramp~] loaded with the following parameters:;
#X text 193 145 <= change direction;
#X obj 71 197 else/ramp~ -0.001 0 127 63.5;
#X text 26 60 increment = -0.001 / minimum = 0 / maximum = 127 / reset value = 63.5 (also the initial/staring value).;
#X text 20 170 restart;
#X text 492 113 start/restart;
#X text 106 372 Also \, by default \, [ramp~] automatically starts at loading the patch. You can change that with the -off flag (also see the example on the right)., f 49;
#X msg 869 189 mode \$1;
#X obj 869 118 vradio 15 1 0 3 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0;
#X floatatom 869 169 2 0 0 0 - - - 0;
#X text 887 134 clip;
#X text 887 150 reset;
#X text 762 133 change modes ==>;
#X obj 808 256 else/sig2float~;
#X obj 808 176 bng 16 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 811 287 hsl 128 15 0 88200 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X text 757 176 restart;
#X text 887 118 loop;
#X text 490 325 -0.5;
#X obj 236 227 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 665 170 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 973 249 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 257 227 <= bang when finished;
#X text 106 293 Note that the ramp is in wrap mode by default \, where it automatically wraps between the min and max values. You can set it to clip mode or reset mode with the -mode flag or message as in the rightmost example., f 49;
#X text 412 24 You can have a reset point outside the minimum and maximum range. Below \, the value is reset to -1 \, but it wraps around when it falls within the min/max range (when in wrap mode)., f 47;
#X text 733 26 You can change to "clip" mode \, - where it'll clip (or "stop") at the min/max boundaries - or also "reset" mode - where it'll reset back to the reset point and stop after reaching the limits., f 49;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #dcdcdc #7c7c7c #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #dcdcdc #7c7c7c 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 644 285 pd;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #dcdcdc #7c7c7c #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #dcdcdc #7c7c7c 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 644 285 pd;
#X obj 470 141 else/ramp~ -off 2e-05 -0.5 0.5 -1;
#X obj 808 224 else/ramp~ -mode 2 1 0 88200;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 3 0 19 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 7 0 45 0;
#X connect 15 0 19 1;
#X connect 16 0 19 1;
#X connect 19 0 1 0;
#X connect 19 1 36 0;
#X connect 24 0 46 0;
#X connect 25 0 26 0;
#X connect 26 0 24 0;
#X connect 30 0 32 0;
#X connect 31 0 46 0;
#X connect 45 0 5 0;
#X connect 45 1 37 0;
#X connect 46 0 30 0;
#X connect 46 1 38 0;
#X restore 462 175 pd examples-1;
#N canvas 480 163 823 384 examples-2 0;
#X obj 521 278 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 521 249 else/sig2float~;
#X obj 574 147 *~;
#X obj 614 146 else/pulse~ 1;
#X text 516 322 0;
#X text 642 322 127;
#X text 573 322 63.5;
#X obj 524 305 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 574 113 sig~ 0.0025;
#X text 25 21 The "start" and "stop" messages starts and stops incrementing. The "reset" message stops and goes back to the reset point. The "set" message sets the reset value and a float input makes [ramp~] jump to that value.;
#X obj 154 273 else/sig2float~;
#X msg 170 149 start;
#X msg 186 173 stop;
#X msg 154 121 reset;
#X obj 154 302 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 149 346 0;
#X text 275 346 127;
#X text 206 346 63.5;
#X obj 157 329 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 311 185 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 314 160 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X msg 236 181 set \$1;
#X obj 236 155 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 239 130 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X text 246 129 change reset value;
#X text 349 160 set value;
#X obj 128 183 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 49 178 start from reset value, f 11;
#X text 70 99 stops and goes back to the reset point, f 15;
#X obj 521 217 else/ramp~ 0.001 0 127 63.5;
#X obj 614 174 else/status~;
#X text 433 25 This examples uses a [*~] start and stop the ramp increment. This allows you to stop and start with sample accuracy. Additionally \, we use [status~] to stop and reset the ramp as in the "reset" message \, but with sample accurately.;
#X obj 154 241 else/ramp~ -off 0.001 0 127 63.5;
#X connect 0 0 7 0;
#X connect 1 0 0 0;
#X connect 2 0 29 1;
#X connect 3 0 2 1;
#X connect 3 0 30 0;
#X connect 8 0 2 0;
#X connect 10 0 14 0;
#X connect 11 0 32 0;
#X connect 12 0 32 0;
#X connect 13 0 32 0;
#X connect 14 0 18 0;
#X connect 19 0 32 0;
#X connect 20 0 19 0;
#X connect 21 0 32 0;
#X connect 22 0 21 0;
#X connect 23 0 22 0;
#X connect 26 0 32 0;
#X connect 29 0 1 0;
#X connect 30 1 29 0;
#X connect 32 0 10 0;
#X restore 462 195 pd examples-2;
#X text 61 82 [ramp~] is a resettable linear ramp between a minimum and maximum value. You can trigger it with a bang or with a trigger signal (non-positive to positive transition)., f 65;
#X text 273 134 trigger via bang or signal;
#X obj 4 506 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 174 528 - prevents the ramp from automatically starting;
#X text 192 268 - signal trigger: starts ramp from the reset point value;
#X text 192 283 - control trigger: starts ramp from the reset point value;
#X text 143 528 -off;
#X text 114 331 mode <float>;
#X text 89 512 -mode <float>;
#X obj 194 163 else/ramp~;
#X text 193 591 - start/reset value (default minimum value);
#X obj 91 483 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 162 484 bang;
#X text 192 484 - a bang when the ramp is finished;
#X text 174 513 - sets mode: "wrap" <0> (default) \, "clip" <1> or "reset" <2>;
#X text 192 331 - sets mode to "wrap" <0> \, "clip" <1> or "reset" <2>;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X connect 11 0 60 0;
#X connect 12 0 14 0;
#X connect 13 0 12 0;
#X connect 15 0 60 0;
#X connect 60 0 13 0;
