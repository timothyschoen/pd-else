#N canvas 489 38 563 562 10;
#X obj 218 141 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 278 140 <= hz;
#X obj 218 204 else/out~;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 25 40 cnv 4 4 4 empty empty Triangular 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 165 40 cnv 4 4 4 empty empty oscillator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 3 cnv 15 301 42 empty empty tri~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 114 40 cnv 4 4 4 empty empty wave 0 28 2 18 #e0e0e0 #000000 0;
#N canvas 717 169 403 388 waveform 0;
#X obj 117 86 cnv 15 198 148 empty empty empty 20 12 0 14 #e8ecf4 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-waveform 400 float 1;
#A 0 0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.4 0.41 0.42 0.43 0.44 0.45 0.46 0.47 0.48 0.49 0.5 0.51 0.52 0.53 0.54 0.55 0.56 0.57 0.58 0.59 0.6 0.61 0.62 0.63 0.64 0.65 0.66 0.67 0.68 0.69 0.7 0.71 0.72 0.73 0.74 0.75 0.76 0.77 0.78 0.79 0.8 0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88 0.89 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1 0.99 0.98 0.97 0.96 0.95 0.94 0.93 0.92 0.91 0.9 0.89 0.88 0.87 0.86 0.85 0.84 0.83 0.82 0.81 0.8 0.79 0.78 0.77 0.76 0.75 0.74 0.73 0.72 0.71 0.7 0.69 0.68 0.67 0.66 0.65 0.64 0.63 0.62 0.61 0.6 0.59 0.58 0.57 0.56 0.55 0.54 0.53 0.52 0.51 0.5 0.49 0.48 0.47 0.46 0.45 0.44 0.43 0.42 0.41 0.4 0.39 0.38 0.37 0.36 0.35 0.34 0.33 0.32 0.31 0.3 0.29 0.28 0.27 0.26 0.25 0.24 0.23 0.22 0.21 0.2 0.19 0.18 0.17 0.16 0.15 0.14 0.13 0.12 0.11 0.1 0.09 0.08 0.0700001 0.0599999 0.05 0.04 0.03 0.02 0.00999999 0 -0.00999999 -0.02 -0.03 -0.04 -0.05 -0.0599999 -0.0699999 -0.0799999 -0.0899999 -0.0999999 -0.11 -0.12 -0.13 -0.14 -0.15 -0.16 -0.17 -0.18 -0.19 -0.2 -0.21 -0.22 -0.23 -0.24 -0.25 -0.26 -0.27 -0.28 -0.29 -0.3 -0.31 -0.32 -0.33 -0.34 -0.35 -0.36 -0.37 -0.38 -0.39 -0.4 -0.41 -0.42 -0.43 -0.44 -0.45 -0.46 -0.47 -0.48 -0.49 -0.5 -0.51 -0.52 -0.53 -0.54 -0.55 -0.56 -0.57 -0.58 -0.59 -0.6 -0.61 -0.62 -0.63 -0.64 -0.65 -0.66 -0.67 -0.68 -0.69 -0.7 -0.71 -0.72 -0.73 -0.74 -0.75 -0.76 -0.77 -0.78 -0.79 -0.8 -0.81 -0.82 -0.83 -0.84 -0.85 -0.86 -0.87 -0.88 -0.89 -0.9 -0.91 -0.92 -0.93 -0.94 -0.95 -0.96 -0.97 -0.98 -0.99 -1 -0.99 -0.98 -0.97 -0.96 -0.95 -0.94 -0.93 -0.92 -0.91 -0.9 -0.89 -0.88 -0.87 -0.86 -0.85 -0.84 -0.83 -0.82 -0.81 -0.8 -0.79 -0.78 -0.77 -0.76 -0.75 -0.74 -0.73 -0.72 -0.71 -0.7 -0.69 -0.68 -0.67 -0.66 -0.65 -0.64 -0.63 -0.62 -0.61 -0.6 -0.59 -0.58 -0.57 -0.56 -0.55 -0.54 -0.53 -0.52 -0.51 -0.5 -0.49 -0.48 -0.47 -0.46 -0.45 -0.44 -0.43 -0.42 -0.41 -0.4 -0.39 -0.38 -0.37 -0.36 -0.35 -0.34 -0.33 -0.32 -0.31 -0.3 -0.29 -0.28 -0.27 -0.26 -0.25 -0.24 -0.23 -0.22 -0.21 -0.2 -0.19 -0.18 -0.17 -0.16 -0.15 -0.14 -0.13 -0.12 -0.11 -0.0999999 -0.0899999 -0.0799999 -0.0699999 -0.0599999 -0.05 -0.04 -0.03 -0.02 -0.00999999;
#X coords -10 1.05 410 -1.05 200 150 1 0 0;
#X restore 116 85 graph;
#X text 64 242 phase:;
#X text 114 242 0;
#X text 306 242 1;
#X text 206 242 0.5;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 200 75 1 0 0;
#X restore 116 85 graph;
#X text 86 26 This is the waveform of this oscillator.;
#X text 110 301 see also:;
#X obj 182 300 else/vsaw~;
#X text 82 333 For different triangular waveforms;
#X restore 469 165 pd waveform;
#X obj 218 169 else/tri~ 440;
#X text 40 197 see also:;
#X obj 43 220 else/bl.tri~;
#X obj 3 266 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 385 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 484 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 98 394 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 3 534 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 98 341 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 98 363 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 154 493 1) float;
#X text 236 364 phase offset (modulation input), f 50;
#X text 236 342 phase sync (resets internal phase), f 50;
#X text 213 512 - initial phase offset (default 0);
#X text 154 512 2) float;
#X obj 98 275 cnv 17 3 58 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 146 290 midi <float> -;
#X text 236 290 non zero sets to frequency input in MIDI pitch, f 50;
#X obj 3 421 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 213 493 - frequency in midi pitch or hertz (default 0);
#X text 146 320 soft <float> -;
#X text 236 320 non zero sets to soft sync mode, f 50;
#X text 133 460 -soft: sets to soft sync mode (default hard), f 58;
#X text 133 445 -midi: sets frequency input in MIDI pitch (default hertz), f 58;
#X text 128 342 float/signal(s) -;
#X text 128 364 float/signal(s) -;
#X text 164 395 signal(s) -;
#X text 134 275 list/signal(s) - frequency in hz or midi, f 67;
#X text 103 430 -mc <list>: sets multichannel output with a list of frequencies, f 63;
#X text 110 305 set <float \, float> -;
#X text 236 305 <channel \, freq> set a single frequency channel, f 50;
#N canvas 403 51 838 490 sync 0;
#X text 472 19 Syncing the phase with control messages is useful for LFOs and control with MIDI. A sync with audio is useful for the "hard sync" technique \, where an oscillator is synced according to the frequency of a master frequency., f 56;
#X obj 542 263 else/out~;
#X obj 579 160 nbx 5 14 110 200 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 670 186 Master oscillator;
#X text 633 221 Slave oscillator;
#X obj 542 220 else/tri~ 200;
#X obj 579 186 else/imp~ 110;
#X text 504 354 NOTE:;
#X msg 33 134 0;
#X obj 58 249 vsl 15 100 -1 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 58 211 else/sig2float~;
#X obj 58 181 else/tri~ 0.25;
#X msg 64 134 0.25;
#X msg 134 133 0.75;
#X msg 177 133 1;
#X msg 101 133 0.5;
#X obj 267 249 vsl 15 100 -1 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 267 217 else/sig2float~;
#X text 221 132 <= reset =>;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #4a4f51 #cde5c3 #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #4a4f51 #cde5c3 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 145 265 pd;
#X msg 413 133 0.25;
#X msg 339 132 0.75;
#X msg 307 132 1;
#X msg 379 132 0.5;
#X obj 267 193 else/tri~ 0.25;
#X text 509 382 The "phase sync" inlet is quite different from the "phase offset" inlet. They are completely independent!, f 43;
#X msg 513 176 soft \$1;
#X obj 513 151 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 472 72 Soft sync is also possible with the '-soft' flag or the "soft" message \, where it alternates between positive and negative frequencies and sounds less harsh.;
#X text 38 15 The second inlet resets the phase ands behaves in the same way for control data as objects like [osc~] and [phasor~] in Pd. A number input resets the oscillator and restarts the cycle with an initial phase that corresponds to the input number \, so the internal phase is synced to the given value. The phase values are from 0 to 1 and values beyond that are wrapped within this range. The control message reset is meaningful for LFOs.;
#X text 40 370 Additionally \, you can reset the oscillator with an impulse signal. Inputs that are > 0 and <= 1 reset the phase Pd expects an impulse signal for syncing. The impulse values need to be > 0 and <= 1 (otherwise ignored). Because phase is cyclical \, the value of 1 represents the "phase 0" of the cycle \, where the impulse occurs. Send it impulses above and check the result. Use a multiplier to reset to another phase value.;
#X obj 307 164 else/float2imp~;
#X connect 2 0 6 0;
#X connect 5 0 1 0;
#X connect 6 0 5 1;
#X connect 8 0 11 1;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 12 0 11 1;
#X connect 13 0 11 1;
#X connect 14 0 11 1;
#X connect 15 0 11 1;
#X connect 17 0 16 0;
#X connect 20 0 31 0;
#X connect 21 0 31 0;
#X connect 22 0 31 0;
#X connect 23 0 31 0;
#X connect 24 0 17 0;
#X connect 26 0 5 0;
#X connect 27 0 26 0;
#X connect 31 0 24 1;
#X restore 493 186 pd sync;
#N canvas 488 174 713 332 phase 0;
#X obj 438 189 else/out~;
#X text 532 136 Phase Modulation:;
#X obj 513 108 osc~ 50.01;
#X obj 438 136 else/tri~ 200;
#X text 20 25 The second argument sets an initial phase (or "phase offset"). This is also settable with the third inlet. This allows you to control two oscillators with the same frequency falling in and out of phase. Another feature is phase modulation., f 53;
#X obj 123 245 else/out~;
#X obj 123 209 +~;
#X obj 69 144 else/tri~ 220 0.5;
#X obj 138 182 else/tri~ 220;
#X text 348 108 1;
#X obj 216 108 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 213 132 6 0 0 0 - - - 0;
#X text 196 108 0;
#X obj 213 156 else/float2sig~ 10;
#X text 387 48 The phase values are wrapped into the 0-1 range \, since the phase cycle is from 0 to 1 (where 1 is also the start of another cycle)., f 45;
#X connect 2 0 3 2;
#X connect 3 0 0 0;
#X connect 6 0 5 0;
#X connect 7 0 6 0;
#X connect 8 0 6 1;
#X connect 10 0 11 0;
#X connect 11 0 13 0;
#X connect 13 0 8 2;
#X restore 444 209 pd phase offset;
#N canvas 693 127 449 354 midi 0;
#X msg 150 150 midi \$1;
#X obj 150 121 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 174 186 7 0 0 0 - - - 0;
#X obj 150 250 else/out~;
#X obj 150 219 else/tri~ -midi 69;
#X text 40 27 By default \, frequency input is in hertz \, but if you use the 'midi' message or '-midi' flag you can change it to MIDI pitch input \, where it is bound to the 0 to 127 range (but they don't have to be integers) - this is kinda like using [mtof~]...;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 4 0 3 0;
#X restore 443 186 pd midi;
#N canvas 628 213 555 483 multichannel 0;
#X obj 39 303 else/tri~;
#X obj 39 354 else/out.mc~;
#X obj 117 244 *~ 0.75;
#X obj 110 179 *~ 2;
#X obj 236 368 else/out~;
#X floatatom 236 186 5 0 0 0 - - - 12;
#X msg 249 217 400 600;
#X msg 262 247 400 600 700;
#X text 33 14 If the oscillator has a multichannel left input \, it outputs the same number of channels. If the secondary inlets have a signal with a single channel for sync and phase modulation \, the single value is applied to all channels. If a secondary inlet is also a multichhanel signal \, then each channel gets its sync or phase deviation value. Note \, however \, that the number of multichannels in secondary inlets need to match the same number of channels from the left input., f 76;
#X obj 39 145 else/sigs~ 333 444;
#X obj 110 205 else/impulse~;
#X text 195 109 You can initialize the object with multichannel if you give it a list of frequencies with the -mc flag (you can't set phases though). A list input also works if no signal is connected to set it to multichannel with a list of frequency input., f 49;
#X msg 279 290 set 1 555;
#X text 349 283 the set message sets a single frequency channel, f 24;
#X obj 117 273 else/sine~;
#X obj 236 337 else/tri~ -mc 440 660;
#X connect 0 0 1 0;
#X connect 2 0 14 0;
#X connect 3 0 10 0;
#X connect 5 0 15 0;
#X connect 6 0 15 0;
#X connect 7 0 15 0;
#X connect 9 0 0 0;
#X connect 9 0 2 0;
#X connect 9 0 3 0;
#X connect 10 0 0 1;
#X connect 12 0 15 0;
#X connect 14 0 0 2;
#X connect 15 0 4 0;
#X restore 444 232 pd multichannel;
#X text 239 395 triangular wave signal(s);
#X text 60 89 [tri~] is a triangular wave oscillator that accepts negative frequencies \, has inlets for phase sync and phase modulation. It also has support for multichannels., f 73;
#X connect 0 0 17 0;
#X connect 17 0 2 0;
