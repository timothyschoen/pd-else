#N canvas 540 56 567 584 10;
#X obj 2 2 cnv 15 301 42 empty empty circle 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 2 graph;
#X obj 23 39 cnv 4 4 4 empty empty Circular 0 28 2 18 #e0e0e0 #000000 0;
#X obj 92 39 cnv 4 4 4 empty empty slider 0 28 2 18 #e0e0e0 #000000 0;
#X obj 305 3 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 2 pd;
#X obj 344 10 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 10 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 10 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 10 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 25 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 25 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 6 251 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 475 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 508 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 546 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 80 259 cnv 17 3 212 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 80 484 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 192 484 list;
#X text 192 271 list;
#X text 108 285 set <float \, float>;
#X text 232 285 - sets x and y, f 52;
#X text 232 271 - sets x \, y and outputs it, f 52;
#X text 144 299 size <float>;
#X text 232 299 - sets size, f 52;
#X text 96 314 range <float \, float>;
#X text 192 257 bang;
#X text 232 257 - outputs last values, f 52;
#X text 232 483 - x/y values;
#X text 232 314 - sets range (minimum and maximum values of x and y);
#X text 232 329 - sets range (minimum and maximum values of x), f 52;
#X text 232 344 - sets range (minimum and maximum values of y), f 52;
#X text 90 329 xrange <float \, float>;
#X text 90 344 yrange <float \, float>;
#X text 144 358 line <float>;
#X text 232 358 - non zero sets line visibility, f 52;
#X text 114 428 fgcolor <f \, f \, f>;
#X text 232 428 - sets frontground color in RGB, f 52;
#X text 144 372 grid <float>;
#X text 232 372 - non zero sets grid visibility, f 52;
#N canvas 783 80 416 413 set-values 0;
#X obj 156 333 else/display;
#X text 28 23 If you send it a list of x/y coordinates \, the [circle] object will clip it inside its range and output it.;
#X msg 179 162 set 0 0;
#X msg 156 131 0.5 0.5;
#X obj 156 192 else/circle 127 -1 1 -1 1 1 255 255 255 255 255 255 0 0 0 1 0 0 0 0 empty empty empty empty 1;
#X obj 119 131 bng 22 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X text 28 59 The "set" message behaves similarly \, it just doesn't output the incoming value. You can send a bang to force output., f 56;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 5 0 4 0;
#X restore 38 143 pd set-values;
#N canvas 633 23 507 435 range 0;
#X obj 105 359 else/display;
#X obj 73 173 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 294 377 else/display;
#X msg 283 128 xrange 0 127;
#X msg 294 151 xrange -1 1;
#X msg 320 178 yrange 0 127;
#X msg 328 198 yrange -1 1;
#X text 67 29 By default \, the slider output range is from -1 to 1 \, but you can change it with the -range flag or the range message \, which sets the range for both x and y dimensions. But you can also set independent range for both x and y with the -xrange \, -yrange or xrange \, yrange messages. Note that a bang rescales the last output according to the new range., f 64;
#X msg 105 166 range 0 127;
#X msg 192 166 range -1 1;
#X obj 105 219 else/circle 127 0 127 0 127 1 255 255 255 255 255 255 0 0 0 1 0 0 63.5 63.5 empty empty 1;
#X obj 294 232 else/circle 127 -1 1 -1 1 1 255 255 255 255 255 255 0 0 0 1 0 0 63.5 63.5 empty empty 1;
#X connect 1 0 10 0;
#X connect 3 0 11 0;
#X connect 4 0 11 0;
#X connect 5 0 11 0;
#X connect 6 0 11 0;
#X connect 8 0 10 0;
#X connect 9 0 10 0;
#X connect 9 0 11 0;
#X connect 10 0 0 0;
#X connect 11 0 2 0;
#X restore 128 143 pd range;
#N canvas 465 252 313 441 resize 0;
#X obj 83 375 else/display;
#X msg 83 197 size \$1;
#X obj 86 138 hsl 100 15 18 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 83 168 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 74 29 You can set the size with the '-size' flag or with the 'size' message., f 25;
#X obj 83 230 else/circle 127 -1 1 -1 1 1 0 -1 -1 0 -1 -1 1 -1 -1 1 0 0 0 0 empty empty empty empty 1;
#X obj 83 105 else/initmess 127;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 5 0 0 0;
#X connect 6 0 2 0;
#X restore 128 163 pd resize;
#N canvas 734 124 736 630 colors 0;
#X text 58 88 Colors are in RGB.;
#X obj 170 198 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 0;
#X obj 191 198 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 0;
#X obj 212 198 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #0400fc #fcfcfc #000000 0 0;
#X obj 50 198 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 0;
#X obj 71 198 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 0;
#X obj 92 198 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #0400fc #fcfcfc #000000 0 0;
#X obj 268 193 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 0;
#X obj 289 193 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 0;
#X obj 310 193 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #0400fc #fcfcfc #000000 0 0;
#X obj 418 196 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 0;
#X obj 439 196 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 0;
#X obj 460 196 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 #0400fc #fcfcfc #000000 0 0;
#X text 423 123 set both backgrounds, f 21;
#X text 57 24 You can set background colors (different colors for inside and outside the circle) and frontground colors with 'bgcolor1' (inside circle) / 'bgcolor2' (outside circle) / 'fgcolor' messages and '-bgcolor1' / '-bgcolor2' / '-fgcolor' flags. You can also set both background colors with the '-fgcolor' flag or 'fgcolor' message., f 83;
#X obj 71 146 else/initmess 0;
#X obj 268 146 else/initmess 255;
#X obj 418 146 else/initmess 255;
#X obj 258 433 else/circle 127 -1 1 -1 1 1 255 255 255 255 255 255 0 0 0 1 0 0 0 0 empty empty empty empty empty;
#X obj 40 374 else/insert fgcolor, f 11;
#X obj 160 374 else/insert bgcolor1, f 11;
#X obj 258 374 else/insert bgcolor2, f 11;
#X obj 40 341 else/pack2 0 0 0, f 11;
#X obj 160 341 else/pack2 255 255 255, f 11;
#X obj 258 341 else/pack2 255 255 255, f 11;
#X obj 408 341 else/pack2 255 255 255, f 11;
#X obj 408 374 else/insert bgcolor, f 11;
#X connect 1 0 23 0;
#X connect 2 0 23 1;
#X connect 3 0 23 2;
#X connect 4 0 22 0;
#X connect 5 0 22 1;
#X connect 6 0 22 2;
#X connect 7 0 24 0;
#X connect 8 0 24 1;
#X connect 9 0 24 2;
#X connect 10 0 25 0;
#X connect 11 0 25 1;
#X connect 12 0 25 2;
#X connect 15 0 4 0;
#X connect 15 0 6 0;
#X connect 15 0 5 0;
#X connect 16 0 1 0;
#X connect 16 0 3 0;
#X connect 16 0 2 0;
#X connect 16 0 7 0;
#X connect 16 0 8 0;
#X connect 16 0 9 0;
#X connect 17 0 10 0;
#X connect 17 0 11 0;
#X connect 17 0 12 0;
#X connect 19 0 18 0;
#X connect 20 0 18 0;
#X connect 21 0 18 0;
#X connect 22 0 19 0;
#X connect 23 0 20 0;
#X connect 24 0 21 0;
#X connect 25 0 26 0;
#X connect 26 0 18 0;
#X restore 62 163 pd colors;
#X text 283 221 x/y values:;
#N canvas 465 252 305 377 jump 0;
#X obj 88 289 else/display;
#X text 78 34 You can set the size with the '-size' flag or with the 'size' message., f 25;
#X msg 88 119 jump \$1;
#X obj 88 95 tgl 15 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 88 144 else/circle 127 -1 1 -1 1 1 255 255 255 255 255 255 0 0 0 1 1 0 63.5 63.5 empty empty 1;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X restore 74 184 pd jump;
#N canvas 689 272 613 231 flags 0;
#X text 94 33 -size <float>: sets x/y size (default: 127), f 71;
#X text 94 77 -line <float>: non zero sets line visibility (default: 1), f 71;
#X text 94 153 -fgcolor <f \, f \, f>: sets frontground color in RGB (default 0 0 0), f 76;
#X text 94 92 -grid <float>: non zero sets grid visibility (default: 0), f 71;
#X obj 26 21 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X obj 26 208 cnv 3 550 3 empty empty empty 8 12 0 13 #dcdcdc #000000 0;
#X text 94 47 -range: sets x/y range <float \, float> (default: -1 \, 1), f 71;
#X text 94 62 -xrange / -yrange (set x/y range independently), f 71;
#X text 94 106 -bgcolor1 <f \, f \, f>: sets in bounds back color in RGB (default 255 255 255), f 76;
#X text 94 121 -bgcolor2 <f \, f \, f>: sets out of bounds color in RGB (default 255 255 255), f 76;
#X text 94 136 -bgcolor <f \, f \, f>: sets both background colors in RGB (default 255 255 255), f 76;
#X text 94 168 -clip <float>: non zero sets to clip mode (default 1), f 76;
#X text 94 183 -savestate <float>: sets to savestate mode, f 76;
#X restore 203 520 pd flags;
#N canvas 595 56 426 641 example 0;
#X obj 122 578 else/out8~;
#X obj 137 124 else/circle 127 -1 1 -1 1 1 0 -1 -1 0 -1 -1 1 -1 -1 1 0 0 0 1 empty empty empty empty 1;
#X text 265 179 3;
#X text 244 130 2;
#X text 195 110 1;
#X text 147 131 8;
#X text 127 180 7;
#X text 147 227 6;
#X text 243 228 4;
#X text 195 250 5;
#X obj 56 123 else/setdsp~;
#X text 73 63 Here's an example to use it with [pan~].;
#X floatatom 137 304 8 0 0 0 - - - 0;
#X floatatom 206 304 6 0 0 0 - - - 0;
#X floatatom 259 305 8 -1 1 0 - - - 0;
#X obj 262 277 hsl 128 15 -1 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X text 301 276 spread;
#X obj 80 250 noise~;
#X obj 80 403 else/meter8~;
#X text 273 464 <= [else/meter8~];
#X obj 122 578 else/out8~;
#X obj 80 372 else/pan~ -radians 8 1 90, f 29;
#X obj 137 270 else/car2pol;
#X obj 137 328 else/f2s~;
#X obj 194 350 else/f2s~;
#X text 142 287 gain;
#X text 212 287 angle;
#X obj 137 90 else/initmess 0 1;
#X connect 1 0 22 0;
#X connect 12 0 23 0;
#X connect 13 0 24 0;
#X connect 14 0 21 3;
#X connect 15 0 14 0;
#X connect 17 0 21 0;
#X connect 18 0 20 0;
#X connect 18 1 20 1;
#X connect 18 2 20 2;
#X connect 18 3 20 3;
#X connect 18 4 20 4;
#X connect 18 5 20 5;
#X connect 18 6 20 6;
#X connect 18 7 20 7;
#X connect 21 0 18 0;
#X connect 21 1 18 1;
#X connect 21 2 18 2;
#X connect 21 3 18 3;
#X connect 21 4 18 4;
#X connect 21 5 18 5;
#X connect 21 6 18 6;
#X connect 21 7 18 7;
#X connect 22 0 12 0;
#X connect 22 1 13 0;
#X connect 23 0 21 1;
#X connect 24 0 21 2;
#X connect 27 0 1 0;
#X restore 128 222 pd example;
#N canvas 482 193 621 384 send/receive 0;
#X msg 397 108 receive \\\$0-circle-rcv \, send \\\$0-circle-snd, f 24;
#X text 61 18 You can also set send/receive names with the 'send'/'receive' messages or '-send'/'-receive' flags., f 61;
#X msg 378 63 receive \\\$0-rcv \, send \\\$0-snd, f 16;
#X obj 220 283 send \$0-circle-rcv;
#X obj 65 251 receive \$0-circle-snd;
#X obj 225 195 send \$0-rcv;
#X obj 68 165 receive \$0-snd;
#X msg 415 156 receive empty \, send empty, f 14;
#X text 63 86 Setting these to 'empty' removes the send/receive symbols., f 38;
#X msg 220 255 0 0;
#X msg 225 167 0 0;
#X text 63 55 Make sure to escape "\$0" properly with backslashes (as in: "\\\$0")., f 38;
#X obj 378 208 else/circle 127 -1 1 -1 1 1 255 255 255 255 255 255 0 0 0 1 0 0 0 0 \\\$0-snd \\\$0-rcv empty empty empty;
#X listbox 65 282 20 0 0 0 - - - 12;
#X listbox 68 196 20 0 0 0 - - - 12;
#X connect 0 0 12 0;
#X connect 2 0 12 0;
#X connect 4 0 13 0;
#X connect 6 0 14 0;
#X connect 7 0 12 0;
#X connect 9 0 3 0;
#X connect 10 0 5 0;
#X restore 26 222 pd send/receive;
#X text 272 162 press shift for fine tuning, f 11;
#N canvas 814 36 341 570 mode-grid 0;
#X obj 109 487 else/display;
#X obj 181 281 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X msg 181 309 grid \$1;
#X msg 109 283 mode \$1;
#X obj 109 206 vradio 15 1 0 3 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0;
#X floatatom 109 260 3 0 0 0 - - - 0;
#X text 46 34 There are 3 modes of display \, by default is "cartesian" (mode 1) \, but you can also set it to "polar" (mode 2). Alternatively \, you camn switch both modes off and just have a single point (mode 0). You can set the mode with the 'mode' message or '-mode' flag., f 40;
#X text 128 205 none;
#X text 129 220 cartesian;
#X text 130 236 polar;
#X text 45 123 There's also a grid visibility option (visible by default). You can set it with the 'grid' message or '-grid' flag., f 40;
#X obj 109 345 else/circle 127 -1 1 -1 1 0 255 255 255 255 255 255 0 0 0 0 0 0 63.5 63.5 empty empty 1;
#X connect 1 0 2 0;
#X connect 2 0 11 0;
#X connect 3 0 11 0;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X connect 11 0 0 0;
#X restore 128 184 pd mode-grid;
#X text 108 386 bgcolor1 <f \, f \, f>;
#X text 108 400 bgcolor2 <f \, f \, f>;
#X text 232 386 - sets background color inside circle in RGB, f 52;
#X text 232 400 - sets background color outside circle in RGB, f 52;
#X obj 359 83 else/circle 127 -1 1 -1 1 1 255 255 255 255 255 255 0 0 0 1 0 0 0.425197 -0.0944882 empty empty empty empty empty;
#N canvas 700 46 382 360 clip 0;
#X obj 117 149 else/circle 127 -1 1 -1 1 1 255 255 255 255 255 255 0 0 0 1 0 0 63.5 63.5 empty empty 0;
#X msg 117 125 clip \$1;
#X obj 117 100 tgl 15 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 53 33 With the 'clip' message or '-clip' flag \, you can set it to clip inside the circle bounds. A value of "1" clips (default) and "0" does not., f 46;
#X obj 117 290 else/display;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X restore 74 203 pd clip;
#X text 114 414 bgcolor <f \, f \, f>;
#X text 232 414 - sets both background colors in RGB, f 52;
#X text 144 456 clip <float>;
#X text 232 456 - non zero clips inside the circle, f 52;
#N canvas 715 146 462 396 savestate 0;
#X obj 206 309 else/display;
#X msg 206 131 0.5 0.5;
#X obj 206 164 else/circle 127 -1 1 -1 1 1 255 255 255 255 255 255 0 0 0 1 0 1 127 127 empty empty 1;
#X text 77 166 see also;
#X obj 74 194 savestate;
#X obj 74 226 else/presets;
#A saved -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \; -empty- \;;
#X text 24 23 With the 'savestate' message or '-savestate' flag \, the GUI operates in 'save state mode' \, where it saves the state from the last time the patch was saved. Note that this is only useful for patches and not abstractions. For abstractions oyou should use [savestate] instead \, and also have a look at [presets]. Unlike iemguis \, the value is not output when loading the patch \, use [loadbang] for that.;
#X msg 280 133 savestate 1;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 7 0 2 0;
#X restore 128 203 pd savestate;
#X text 114 442 savestate <float>;
#X text 232 442 - non zero sets to save state mode, f 52;
#X text 14 87 [circle] is a two dimensional slider GUI abstraction with a circular area (see also [else/slider2d)., f 52;
#X text 238 136 click and drag -->;
#X listbox 359 221 20 0 0 0 - - - 12;
#X text 262 520 <-- click to open;
#X connect 55 0 66 0;
