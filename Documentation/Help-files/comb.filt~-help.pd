#N canvas 604 38 564 541 10;
#X obj 4 511 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 4 285 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 451 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 108 292 cnv 17 3 45 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 191 219 else/out~;
#X obj 4 4 cnv 15 301 42 empty empty comb.filter~ 20 20 2 37 #e0e0e0 #000000 0;
#X obj 307 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 3 4 graph;
#X obj 346 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 24 41 cnv 4 4 4 empty empty Comb 0 28 2 18 #e0e0e0 #000000 0;
#X obj 79 41 cnv 4 4 4 empty empty filter 0 28 2 18 #e0e0e0 #000000 0;
#X obj 459 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 479 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 516 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 465 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 503 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 306 4 graph;
#X text 178 293 signal - signal input to the filter, f 49;
#N canvas 491 159 757 359 Details 0;
#X floatatom 498 199 5 0 1000 0 - - - 0;
#X floatatom 575 211 8 0 100 0 - - - 0;
#X obj 578 187 hsl 128 15 -0.99 0.99 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 422 277 else/out~;
#X obj 381 175 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 35 78 cnv 15 270 120 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 82 91 |;
#X text 82 103 |;
#X text 82 115 |;
#X text 63 126 |;
#X text 105 126 |;
#X text 105 146 |;
#X text 63 146 |;
#X text 66 117 _______;
#X text 66 146 _______;
#X text 82 118 v;
#X text 144 118 |;
#X text 144 129 |;
#X text 144 99 |;
#X text 144 108 |;
#X text 144 94 ^;
#X text 228 92 |;
#X text 228 104 |;
#X text 228 116 |;
#X text 209 127 |;
#X text 251 127 |;
#X text 251 147 |;
#X text 209 147 |;
#X text 212 118 _______;
#X text 212 147 _______;
#X text 228 119 v;
#X text 174 120 |;
#X text 174 130 |;
#X text 174 98 |;
#X text 174 108 |;
#X text 174 93 ^;
#X text 239 85 >;
#X text 63 136 | z^-D |;
#X text 209 137 | z^-D |;
#X text 629 210 (a);
#X text 42 85 x[n] ---------(+)--(+)----------- y[n];
#X text 44 170 y[n] = x[n] + a * x[n-D] + a * y[n-D];
#X text 175 136 -(*a)-;
#X text 111 135 -(*a)-;
#X text 121 229 a = gain coefficient;
#X text 41 34 Here's the delay lines diagram of [comb.filt~] and equation:, f 34;
#X text 119 263 where D = 1000 / hz;
#X text 500 177 Hz;
#X text 346 75 The [comb.rev~] object performs a simple linear interpolation for delay time that falls in between sample values. The minimum frequency [comb.filt~] takes is 1 Hz and the maximum is the sample rate. For a frequency input of 0hz \, the filter is bypassed., f 61;
#X text 348 27 By default \, the 'a' coefficient is calculated from the decay time parameter (t60) and delay time (D) according to the expression: a = exp(log(0.001) * D/t60).;
#X text 121 216 D = delay time;
#X obj 422 237 else/comb.filt~ 100 0.99 1;
#X obj 381 203 else/float2imp~;
#X connect 0 0 51 1;
#X connect 1 0 51 2;
#X connect 2 0 1 0;
#X connect 4 0 52 0;
#X connect 51 0 3 0;
#X connect 52 0 51 0;
#X restore 438 242 pd Details and \; Filter Equation;
#X text 119 459 1) float - maximum and initial delay time in ms (default 0), f 61;
#X text 184 308 clear - clears the delay buffer, f 48;
#X obj 5 388 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 107 343 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 107 397 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 107 365 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 170 398 signal;
#X text 220 399 - output from comb filter;
#X text 139 344 float/signal;
#X text 139 365 float/signal;
#X obj 284 133 hsl 128 15 40 400 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 281 155 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0 256;
#X floatatom 364 182 5 0 0 0 - - - 0;
#X obj 367 158 hsl 128 15 -2000 2000 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X msg 140 141 clear;
#X text 220 344 - frequency in hz;
#X obj 191 140 else/imp~ 1;
#X obj 191 185 else/comb.filt~ 200 1000;
#X text 384 158 decay time in ms;
#N canvas 747 220 498 284 gain 0;
#X obj 234 98 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 234 202 else/out~;
#X msg 170 127 gain \$1;
#X obj 170 102 tgl 16 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 37 17 By default \, the reverberation/decay time mode is in "t60" \, which is the time in ms that the impulse takes to fall 60dB in energy. You can change this parameter to a gain coefficient value with the third argument \, where a non zero value sets to "gain mode" or the -gain flag. You can also change that with the "gain" message., f 72;
#X obj 234 159 else/comb.filt~ 440 0.99 1;
#X obj 234 125 else/float2imp~;
#X connect 0 0 6 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X restore 457 217 pd gain mode;
#X text 119 491 3) float -;
#X obj 5 420 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 203 430 -;
#X text 163 429 -gain;
#X text 217 429 sets feedback mode to gain;
#X text 46 217 see also:;
#X obj 37 239 else/fbdelay~;
#X text 315 134 frequency;
#X text 186 491 decay mode: <0> ("t60" \, default) or <non-0> (gain mode);
#X text 61 89 Use [comb.filt~] as a resonator comb filter., f 67;
#X text 119 476 2) float - decay coefficient, f 61;
#X text 220 365 - decay coefficient;
#X text 142 323 gain <float> - non zero sets to gain mode instead of 't60';
#X connect 29 0 30 0;
#X connect 30 0 36 1;
#X connect 31 0 36 2;
#X connect 32 0 31 0;
#X connect 33 0 36 0;
#X connect 35 0 36 0;
#X connect 36 0 4 0;
