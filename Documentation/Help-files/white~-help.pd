#N canvas 617 247 565 429 10;
#X obj 7 403 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 7 240 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 7 300 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 233 172 else/out~;
#X obj 23 40 cnv 4 4 4 empty empty White\ noise\ generator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 3 cnv 15 301 42 empty empty white~ 20 20 2 37 #e0e0e0 #000000 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 233 140 else/white~;
#X obj 95 248 cnv 17 3 45 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 95 309 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 126 248 seed <float> - a float sets seed \, no float sets a unique internal, f 65;
#N canvas 783 192 439 468 clip 0;
#X obj 221 173 else/white~;
#X msg 221 137 clip \$1;
#X obj 139 379 else/out~;
#X obj 221 99 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 221 247 7 0 0 0 - - - 12;
#X obj 221 219 else/rms~;
#X obj 139 222 meter~;
#X text 50 22 In clipped mode \, the output is cliped to values that are either -1 or 1 (aka "clip noise"). This produces the maximum energy and peak to peak amplitude. Set it to clip mode with the '-clip' flag or "clip" message., f 53;
#X obj 313 213 print~;
#X obj 313 167 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X connect 0 0 5 0;
#X connect 0 0 6 0;
#X connect 0 0 8 0;
#X connect 1 0 0 0;
#X connect 3 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 2 0;
#X connect 9 0 8 0;
#X restore 473 176 pd clip;
#X obj 7 336 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 161 346 '-clip': sets to clipped output mode, f 45;
#X text 126 263 clip <float> - non zero sets to clipped output mode, f 65;
#X text 125 362 -seed <float>: sets seed (default: unique internal);
#N canvas 475 138 704 321 seed 0;
#X obj 393 220 else/downsample~ 1;
#X obj 548 220 else/downsample~ 1;
#X obj 393 260 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 548 260 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X text 30 19 Pseudo random number generators aren't true random number generators. Instead \, an algorithm is used to provide a sequence of numbers that seems random. The same sequence can be reproduced if you set a "seed" value \, which can be any integer number., f 52;
#X obj 57 220 else/downsample~ 1;
#X obj 57 260 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 207 220 else/downsample~ 1;
#X obj 207 260 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X text 365 24 You can set a seed with the '-seed' flag. If you don't supply it \, each object gets its own seed internal seed. If you send a 'seed' message without float \, the object also gets a unique seed value., f 52;
#X msg 433 113 seed 507;
#X msg 393 113 seed;
#X text 495 114 <-- set seed;
#X obj 393 142 trigger bang anything;
#X obj 57 181 else/white~ -seed 1039;
#X obj 207 181 else/white~ -seed 1039;
#X obj 403 192 else/white~;
#X obj 548 192 else/white~;
#X text 30 97 Seeds are kept locally \, which means that if two [white~] objects are seeded the same they will have the same output. Conversely \, you can seed the same [white~] object twice with the same seed to repeat the output., f 52;
#X text 387 79 Sync [white~] objects with a seed value;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 13 0 1 0;
#X connect 13 0 0 0;
#X connect 13 1 16 0;
#X connect 13 1 17 0;
#X connect 14 0 5 0;
#X connect 15 0 7 0;
#X connect 16 0 0 0;
#X connect 17 0 1 0;
#X restore 421 176 pd seed;
#N canvas 749 154 362 429 multichannel 0;
#X obj 77 322 else/out.mc~;
#X msg 121 120 ch 2;
#X msg 76 119 ch 1;
#X obj 76 166 else/white~ -ch 2;
#X text 68 46 The -ch flag or message sets the number of output channels. You can also use the '-mc' flag., f 33;
#X obj 110 211 snake~ out, f 12;
#X obj 224 213 else/imp~ 1;
#X obj 110 256 else/sh~;
#X obj 179 256 else/sh~;
#X obj 110 285 else/numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 179 285 else/numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 3 0 5 0;
#X connect 5 0 7 0;
#X connect 5 1 8 0;
#X connect 6 0 7 1;
#X connect 6 0 8 1;
#X connect 7 0 9 0;
#X connect 8 0 10 0;
#X restore 423 198 pd multichannel;
#X text 70 91 [white~] is a white noise generator from a pseudo random number generator algorithm. It has support for multuchannels., f 64;
#X text 137 378 -ch <float>: sets number of channels (default: 1);
#X text 52 145 see also:;
#X obj 51 172 else/pink~;
#X obj 51 194 else/brown~;
#X text 145 309 signal(s) - white noise(s);
#X text 138 278 ch <float> - set number of channels, f 63;
#X connect 15 0 3 0;
