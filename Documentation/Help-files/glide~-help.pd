#N canvas 410 43 563 563 10;
#X obj 4 346 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 441 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 504 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 535 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 126 450 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 126 357 cnv 17 3 50 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 23 41 cnv 4 4 4 empty empty Signal 0 28 2 18 #e0e0e0 #000000 0;
#X obj 80 41 cnv 4 4 4 empty empty glide/portamento 0 28 2 18 #e0e0e0 #000000 0;
#X obj 126 414 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 184 275 else/out~;
#X obj 184 231 *~;
#X obj 145 158 else/brown~;
#X obj 304 228 vsl 18 100 0 1 0 0 ewtwet wefwert empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 304 200 else/sig2float~;
#X text 327 321 0;
#X text 327 222 1;
#X obj 2 4 cnv 15 301 42 empty empty glide~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X text 259 413 - glide time in ms;
#N canvas 699 216 522 312 example 0;
#X obj 80 143 else/glide~ 1000;
#X obj 80 185 osc~;
#X obj 80 232 else/out~;
#X text 189 143 <= values are glided \, generating a portamento;
#X obj 80 54 else/dust~ 1;
#X text 165 53 <= random triggers;
#X text 212 97 <= random values in 200-800 range;
#X obj 80 97 else/rand.f~ 200 800;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 4 0 7 0;
#X connect 7 0 0 0;
#X restore 471 266 pd example;
#X text 185 510 1) float - glide time in ms (default 0);
#X obj 242 141 else/pulse~ 0.5;
#X obj 242 170 else/glide~ 1000;
#X text 217 375 reset;
#X text 260 375 - resets glide to input value;
#X obj 305 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 304 4 pd;
#X obj 344 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 29 257 else/glide2~;
#X text 22 235 see also:;
#N canvas 727 146 532 514 exponential 0;
#X obj 68 328 cnv 15 398 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-exp 441 float 0;
#X coords 0 1 440 0 400 140 1 0 0;
#X restore 67 327 graph;
#X obj 74 38 bng 20 250 50 1 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 90 83 else/timed.gate~ 5;
#X obj 75 257 tabwrite~ \$0-exp;
#X msg 111 124 4;
#X msg 141 124 -4;
#X floatatom 141 153 5 0 0 0 - - - 0;
#X msg 172 124 0.25;
#X msg 212 124 -0.25;
#X obj 350 207 else/rescale~;
#X msg 141 176 exp \$1;
#X obj 383 33 else/setdsp~;
#X text 281 146 You can set exponential factors \, much like as in [rescale~]. Check it out as well., f 33;
#X obj 90 206 else/glide~ -exp 4 5;
#X connect 2 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 14 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X connect 7 0 11 0;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X connect 11 0 14 0;
#X connect 14 0 4 0;
#X restore 448 288 pd exponential;
#X obj 6 476 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 90 483 -exp <float>: sets exponential factor (default '1' \, linear);
#X text 181 391 exp <float>;
#X text 260 391 - sets exponential factor;
#X obj 29 281 else/lag~;
#X obj 29 304 else/slew~;
#N canvas 520 156 498 502 multichannel 0;
#X obj 75 271 else/s2f~;
#X obj 75 125 bng 25 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 356 339 setdsp~;
#X obj 75 312 unpack;
#X obj 75 343 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 108 343 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 75 242 else/glide~ 500;
#X obj 75 196 else/rand.f~ -ch 2 0 1;
#X obj 238 267 else/s2f~;
#X obj 238 312 unpack;
#X obj 238 343 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 271 343 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 238 238 else/glide~;
#X obj 301 207 else/sigs~ 150 1500;
#X text 47 21 If [glide~] has a multichannel input \, it outputs the same number of channels. If the right inlet has a single channel for the glide time in ms \, the value is applied to all channels. If the right inlet is also a multichhanel signal \, then each channel gets its own time value. Note \, however \, that the number of multichannels in the right inlet needs to match the same number of channels from the left input., f 65;
#X obj 75 164 else/float2imp~;
#X connect 0 0 3 0;
#X connect 1 0 15 0;
#X connect 3 0 4 0;
#X connect 3 1 5 0;
#X connect 6 0 0 0;
#X connect 7 0 6 0;
#X connect 7 0 12 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 9 1 11 0;
#X connect 12 0 8 0;
#X connect 13 0 12 1;
#X connect 15 0 7 0;
#X restore 442 313 pd multichannel;
#X text 193 450 signal(s);
#X text 260 357 - input signal(s);
#X text 260 450 - glided signal(s);
#X text 61 90 [glide~] generates a glide/portamento from its signal input changes. The glide time in ms. There's support for multichannel signals., f 53;
#X text 192 414 signal(s);
#X text 157 357 float/signal(s);
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 13 0 12 0;
#X connect 21 0 22 0;
#X connect 22 0 10 1;
#X connect 22 0 13 0;
