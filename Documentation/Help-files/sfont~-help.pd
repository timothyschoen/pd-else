#N canvas 486 43 561 603 10;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 25 40 cnv 4 4 4 empty empty Soundfont 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 110 40 cnv 4 4 4 empty empty synthesizer 0 28 2 18 #e0e0e0 #000000 0;
#X obj 2 384 cnv 3 550 3 empty \$0-pddp.cnv.inlets inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 420 cnv 3 550 3 empty \$0-pddp.cnv.outlets outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 546 cnv 3 550 3 empty \$0-pddp.cnv.argument arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 107 395 cnv 17 3 17 empty \$0-pddp.cnv.let.0 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 107 426 cnv 17 3 17 empty \$0-pddp.cnv.let.n 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 107 446 cnv 17 3 17 empty \$0-pddp.cnv.let.r 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 159 427 signal;
#X text 159 447 signal;
#X text 160 552 1) symbol;
#X text 221 552 - soundfont file to load (default none);
#X obj 4 571 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 202 427 - left output signal of stereo output, f 39;
#X text 202 447 - right output signal of stereo output, f 39;
#X obj 3 3 cnv 15 301 42 empty empty sfont~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#N canvas 340 138 958 524 basic 0;
#X obj 189 154 + 1;
#X obj 189 131 hradio 15 1 0 4 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X floatatom 189 176 4 0 0 0 - - - 0;
#X obj 114 199 list append 1;
#X listbox 114 164 8 0 0 0 - - - 12;
#X listbox 114 223 9 0 0 0 - - - 16;
#X floatatom 284 213 4 0 127 0 - - - 0;
#X obj 284 125 vradio 15 1 0 5 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X floatatom 337 213 4 0 127 0 - - - 0;
#X obj 337 125 vradio 15 1 0 4 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X obj 337 192 + 1;
#X text 622 14 SoundFont is a file format for sample-based instrument sounds. If you are not familiar with it \, check:, f 44;
#X floatatom 417 210 4 0 1000 0 - - - 0;
#X obj 417 122 vradio 15 1 0 5 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X floatatom 473 210 4 0 127 0 - - - 0;
#X obj 473 122 vradio 15 1 0 4 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X obj 473 189 + 1;
#X text 334 104 channel;
#X text 470 104 channel;
#X text 136 129 channel;
#X text 28 25 shift + click;
#X text 10 44 to hold keys -->;
#X msg 124 305 info;
#X obj 42 280 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 42 305 verbose \$1;
#X text 50 218 Pitch \; Velocity \; Channel;
#X msg 172 261 version;
#X text 594 104 Ain't got none? Download some Soundfonts from:, f 41;
#X text 528 160 Play notes with either 'note' or list messages \, whose arguments are: MIDI Pitch \, Velocity and optional channel number (counting from 1). If no channel number is given \, then a default channel 1 is used. The minimum and default number of channels by is 16 but you can set up to 256 with the '-ch' flag., f 67;
#X text 117 470 preset name when loading a program -->;
#X text 762 122 (and check the resources for converters and editors), f 28;
#X msg 362 321 ctl \$1 0 1;
#X obj 362 297 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X text 271 104 program;
#X text 411 104 bank, f 6;
#X text 385 298 bank 0/1 in ch 1;
#X text 510 327 Some files - like the "waves.sf2" file used here - include different bank numbers with different programs each. A different program means usually a different sample (as in here). Set the program number with the 'pgm' message. You can optionally set a channel to load the program into a specific channel (by default it loads on channel 1). You can then load different programs into different channels and use the note and other MIDI messages to access them., f 70;
#X text 433 315 control number 0, f 8;
#X text 510 411 Similarly \, you can choose a different bank of programs into a channel (if no channel is given \, channel 1 is used). The 'bank' message sets the bank number and loads the previously set program number from the new bank. You can set another program number right next with the 'pgm' message or you can also use the control change message 0 \, which also sets the bank number into a channel but requires you to load a program number next so a program can be loaded in the channel (see next example for more about control messages)., f 70;
#X obj 355 425 route preset;
#X obj 232 239 else/pack2 pgm f 1;
#X obj 362 236 else/pack2 bank f 1;
#X obj 636 56 else/openfile -h https://en.wikipedia.org/wiki/SoundFont;
#X obj 635 121 else/openfile -h https://github.com/FluidSynth/fluidsynth/wiki/SoundFont fluidsynth's github;
#X obj 636 73 else/openfile -h https://freepats.zenvoid.org/sf2/SF2_Intro.txt;
#X obj 114 16 else/keyboard 17 80 4 3 0 0 empty empty;
#X obj 222 403 else/out~;
#X obj 355 466 else/display;
#X obj 362 261 else/display;
#X obj 232 269 else/display;
#X obj 375 365 print info;
#X msg 246 305 dump;
#X text 528 220 If the verbosity flag is given (-v) \, [sfont~] prints the version as in the 'version' message when loading the object. When loading a file \, it prints the soundfont name \, its banks \, programs and preset names (which also given by the "info" message on Pd's window or by the 'dump' message in the 'info' outlet). In verbosity mode \, the terminal window also prints bank \, program and preset name when you load a program or if it fails. Verbosity is also set by the "verbose" message. The preset name is also output as a 'preset' message in the rightmost "info" outlet when loading a program., f 67;
#X obj 232 360 else/sfont~ -v -ch 32 sf/waves.sf2, f 21;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 3 1;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 53 0;
#X connect 6 0 40 1;
#X connect 7 0 6 0;
#X connect 8 0 40 2;
#X connect 9 0 10 0;
#X connect 10 0 8 0;
#X connect 12 0 41 1;
#X connect 13 0 12 0;
#X connect 14 0 41 2;
#X connect 15 0 16 0;
#X connect 16 0 14 0;
#X connect 22 0 53 0;
#X connect 23 0 24 0;
#X connect 24 0 53 0;
#X connect 26 0 53 0;
#X connect 31 0 53 0;
#X connect 32 0 31 0;
#X connect 39 0 47 0;
#X connect 40 0 49 0;
#X connect 41 0 48 0;
#X connect 45 0 4 0;
#X connect 48 0 53 0;
#X connect 49 0 53 0;
#X connect 51 0 53 0;
#X connect 53 0 46 0;
#X connect 53 1 46 1;
#X connect 53 2 39 0;
#X connect 53 2 50 0;
#X restore 493 297 pd basic;
#N canvas 623 71 417 561 MIDI-in 0;
#N canvas 396 60 637 710 MIDI-input 0;
#X obj 92 117 ctlin;
#X obj 77 143 pack f f f;
#X msg 77 164 ctl \$1 \$2 \$3;
#X obj 101 222 pack f f f;
#X obj 145 431 pack f f f;
#X obj 113 197 notein;
#X msg 101 243 note \$1 \$2 \$3;
#X obj 145 410 polytouchin;
#X msg 145 452 polytouch \$1 \$2 \$3;
#X obj 49 13 pgmin;
#X obj 49 64 pack f f;
#X msg 49 85 pgm \$1 \$2;
#X obj 119 290 pack f f;
#X obj 133 361 pack f f;
#X msg 119 311 bend \$1 \$2;
#X obj 133 340 touchin;
#X msg 133 382 touch \$1 \$2;
#X obj 119 269 bendin;
#X obj 49 39 - 1;
#X text 188 35 Using Vanilla's MIDI input objects for specific MIDI messages., f 47;
#X text 195 142 touch <float \, float> -;
#X text 201 156 polytouch <f \, f \, f> -;
#X text 249 128 bend <f \, f> -;
#X text 207 170 pgm <float \, float> -;
#X text 237 114 ctl <f \, f \, f> -;
#X text 335 114 control change: value \, control \, channel (optional), f 51;
#X text 335 128 bend: value \, channel (optional), f 51;
#X text 335 142 channel aftertouch: value \, channel (optional), f 51;
#X text 335 156 key aftertouch: value \, key \, channel (optional), f 51;
#X text 335 170 program change: program \, channel (optional), f 51;
#X text 187 67 All messages take a final channel argument. If this last element of the message is not given \, then a default channel 1 is used., f 64;
#X msg 381 475 bend \$1;
#X obj 298 341 vsl 22 100 0 16383 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 381 343 sel 0;
#X obj 381 395 line;
#X msg 317 308 set \$1;
#X obj 381 422 change;
#X msg 381 369 8192 150;
#X text 231 206 Note that vanilla's [pgmin] object is indexed from 1 so you need to subtract 1 to use it on [sfont~] \, which is indexed from 0 ([pgm.in] from ELSE is also indexed from 0 by the way). The example below emulates a bend wheel \, maybe an extra object for the future...;
#N canvas 546 185 549 330 sysex 0;
#X msg 114 149 sysex 127 127 8 8 3 127 127 64 64 64 64 64 64 64 64 64 64 64 64, f 33;
#X msg 131 197 sysex 127 127 8 8 3 127 127 74 50 67 85 61 78 54 71 47 64 81 57, f 33;
#X text 322 153 12-tet (default tuning);
#X text 352 198 quarter-comma meantone (has wolf fifth at Ab - Eb), f 27;
#X obj 114 249 outlet;
#X obj 47 44 sysexin;
#X text 94 70 A specific sysex message can be set via a 'sysex' message or via raw input. Sysex messages are useful for advanced settings. One example is "mts-tuning" standards used in this example \, where you can retune MIDI pitches \, but [sfont~] also has microtonal capabilities so this is not needed., f 62;
#X text 100 46 input from vanilla's [sysexin] (raw input);
#X connect 0 0 4 0;
#X connect 1 0 4 0;
#X connect 5 0 4 0;
#X restore 151 495 pd sysex;
#X obj 298 283 else/initmess 8192;
#X obj 381 319 else/mouse;
#X obj 381 446 else/rint;
#X obj 379 511 midiin;
#X obj 101 617 outlet;
#X obj 101 578 else/selector 2 2;
#X obj 236 577 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 266 579 or just select raw midi input from MIDI in;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 0 2 1 2;
#X connect 1 0 2 0;
#X connect 2 0 45 0;
#X connect 3 0 6 0;
#X connect 4 0 8 0;
#X connect 5 0 3 0;
#X connect 5 1 3 1;
#X connect 5 2 3 2;
#X connect 6 0 45 0;
#X connect 7 0 4 0;
#X connect 7 1 4 1;
#X connect 7 2 4 2;
#X connect 8 0 45 0;
#X connect 9 0 18 0;
#X connect 9 1 10 1;
#X connect 10 0 11 0;
#X connect 11 0 45 0;
#X connect 12 0 14 0;
#X connect 13 0 16 0;
#X connect 14 0 45 0;
#X connect 15 0 13 0;
#X connect 15 1 13 1;
#X connect 16 0 45 0;
#X connect 17 0 12 0;
#X connect 17 1 12 1;
#X connect 18 0 10 0;
#X connect 31 0 45 0;
#X connect 32 0 34 0;
#X connect 33 0 37 0;
#X connect 34 0 35 0;
#X connect 34 0 36 0;
#X connect 35 0 32 0;
#X connect 36 0 42 0;
#X connect 37 0 34 0;
#X connect 39 0 45 0;
#X connect 40 0 32 0;
#X connect 41 0 33 0;
#X connect 42 0 31 0;
#X connect 43 0 45 1;
#X connect 45 0 44 0;
#X connect 46 0 45 2;
#X restore 154 357 pd MIDI-input;
#N canvas 343 199 766 498 control-messages 0;
#X obj 270 405 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X obj 171 405 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X obj 28 439 outlet;
#X obj 82 187 vsl 18 100 0 127 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 82 336 s \$0-ctl;
#X obj 58 409 r \$0-ctl;
#X obj 171 459 s \$0-ctl;
#X obj 270 459 s \$0-ctl;
#X obj 533 382 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X obj 533 442 s \$0-ctl;
#X text 164 384 sustain pedal;
#X text 264 384 tonal or sostenuto pedal;
#X text 362 427 see also:;
#X text 69 162 modulation;
#X obj 357 316 s \$0-ctl;
#X obj 437 266 s \$0-ctl;
#X text 392 193 portamento on/off, f 10;
#X text 147 162 volume;
#X obj 159 336 s \$0-ctl;
#X obj 550 228 s \$0-ctl;
#X obj 437 212 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X obj 357 167 vsl 18 100 1 127 1 1 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 159 187 vsl 18 100 0 127 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 550 163 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X text 387 171 <-- portamento speed;
#X text 29 15 The control change parameters are programmed in a given synthesizer \, but if usually follows some standards like the messages where using here., f 72;
#X text 487 11 For reference \, see:;
#X obj 244 335 s \$0-ctl;
#X obj 244 186 vsl 18 100 0 127 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X text 241 162 pan;
#X msg 276 277 64;
#X text 557 382 flush note ons (panic);
#X msg 159 307 ctl \$1 7;
#X msg 244 306 ctl \$1 10;
#X msg 357 287 ctl \$1 5;
#X msg 437 240 ctl \$1 65;
#X msg 533 413 ctl \$1 123;
#X msg 270 433 ctl \$1 66;
#X msg 171 433 ctl \$1 64;
#X text 608 410 (doesn't affect note hanging via pedals), f 16;
#X msg 82 304 ctl \$1 1;
#X text 510 31 and:;
#X msg 550 201 ctl \$1 68;
#X text 577 162 <-- set to legato (monophonic) mode, f 18;
#X obj 537 278 hradio 15 1 0 4 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X obj 537 337 s \$0-ctl;
#X msg 537 310 ctl \$1 0;
#X text 611 284 sets bank number but doesn't load a program (you need to use the 'pgm' message next., f 18;
#X obj 360 451 else/suspedal;
#X obj 611 12 else/openfile -h https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2 MIDI Specifications;
#X obj 545 32 else/openfile -h https://github.com/FluidSynth/fluidsynth/wiki/FluidFeatures#midi-control-change-implementation-chart Fluid Specificaitions;
#X obj 28 63 else/keyboard 17 80 6 1 0 0 empty empty;
#X connect 0 0 37 0;
#X connect 1 0 38 0;
#X connect 3 0 40 0;
#X connect 5 0 2 0;
#X connect 8 0 36 0;
#X connect 20 0 35 0;
#X connect 21 0 34 0;
#X connect 22 0 32 0;
#X connect 23 0 42 0;
#X connect 28 0 33 0;
#X connect 30 0 33 0;
#X connect 32 0 18 0;
#X connect 33 0 27 0;
#X connect 34 0 14 0;
#X connect 35 0 15 0;
#X connect 36 0 9 0;
#X connect 37 0 7 0;
#X connect 38 0 6 0;
#X connect 40 0 4 0;
#X connect 42 0 19 0;
#X connect 44 0 46 0;
#X connect 46 0 45 0;
#X connect 51 0 2 0;
#X restore 170 407 pd control-messages;
#X obj 124 285 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X text 244 356 <-- open;
#X text 227 389 More on:;
#X text 32 195 Raw MIDI is also possible via float input \, so you can use Pd vanillas [midiin] object or play a MIDI file from [midi]. Sysex messages is also possible via a 'sysex' message or raw MIDI input from a MIDI file or the [sysexin] object. You can also use vanilla's other MIDI objects like [pgmin] of course or the ones from ELSE \, such as [pgm.in] \, see [pd MIDI-input] below.;
#X text 32 143 The bank message is not a proper MIDI message on its own but it is usually given by the control message number 0 as in the last example - control change is also responsible for other usual parameters as we'll see in this example.;
#X text 32 23 We've seen the list message which acts in the same way as a 'note' message \, we've also seen the 'pgm' (program change) message and these two are MIDI messages. Other MIDI messages are:;
#X text 92 68 - 'ctl' for 'control change \; - 'bend' for Pitch Bend \; - 'touchin' for channel aftertouch \; - 'polytouchin' for key aftertouch \; - 'sysex' for Sysex messages;
#X obj 124 312 else/midi -loop midi-seq.mid;
#X obj 115 480 else/out~;
#X obj 124 446 else/sfont~ sf/Theremin;
#X text 276 438 .sf2 or .sf3 extension also implied, f 12;
#X connect 0 0 11 0;
#X connect 1 0 11 0;
#X connect 2 0 9 0;
#X connect 9 0 11 0;
#X connect 11 0 10 0;
#X connect 11 1 10 1;
#X restore 481 319 pd MIDI-in;
#X obj 107 466 cnv 17 3 17 empty \$0-pddp.cnv.let.r 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 148 467 anything;
#X obj 2 487 cnv 3 550 3 empty \$0-pddp.cnv.argument flags 8 12 0 13 #dcdcdc #000000 0;
#X text 127 494 -v: set to verbosity mode, f 61;
#X text 127 509 -ch <float>: set number of channels from 16 (default) to 256, f 61;
#X text 127 523 -g <float>: overall gain from 0.1 to 1 (default 0.4), f 61;
#N canvas 443 419 550 433 ALL 0;
#X text 44 161 bank <float \, float> -;
#X text 38 119 touch <float \, float> -;
#X text 44 133 polytouch <f \, f \, f> -;
#X text 92 105 bend <f \, f> -;
#X text 50 147 pgm <float \, float> -;
#X text 80 90 ctl <f \, f \, f> -;
#X text 178 90 control change: value \, control \, channel (optional), f 51;
#X text 178 105 bend: value \, channel (optional), f 51;
#X text 178 119 channel aftertouch: value \, channel (optional), f 51;
#X text 178 133 key aftertouch: value \, key \, channel (optional), f 51;
#X text 178 147 program change: program \, channel (optional), f 51;
#X text 178 161 bank number: bank \, channel (optional), f 51;
#X text 86 205 sysex <list> -;
#X text 178 205 sets sysex messages, f 51;
#X text 74 61 note <f \, f \, f> -;
#X text 134 75 list -;
#X text 178 75 same as "note" message, f 51;
#X text 128 22 float -;
#X text 178 22 raw MIDI input, f 51;
#X text 128 219 panic -;
#X text 178 219 resets synth and clears hanging notes, f 51;
#X text 80 176 transp <f \, f> -;
#X text 98 191 pan <f \, f> -;
#X text 178 176 transposition: cents \, channel (optional), f 51;
#X text 178 191 pan control (from -1 to 1) and channel (optional), f 51;
#X text 178 61 note: key \, velocity \, channel (optional), f 51;
#X obj 23 20 cnv 17 3 385 empty \$0-pddp.cnv.let.0 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 12 11 cnv 3 520 3 empty \$0-pddp.cnv.inlets empty 8 12 0 13 #dcdcdc #000000 0;
#X text 116 234 version -;
#X text 134 249 info -;
#X text 178 234 prints version info on terminal, f 51;
#X text 178 249 prints soundfont information on terminal, f 51;
#X text 68 279 verbose <float> -;
#X text 178 279 non zero sets verbosity mode, f 51;
#X text 86 294 remap <list> -;
#X text 178 294 list of 128 pitches in MIDI remaps all keys, f 51;
#X text 86 309 scale <list> -;
#X text 86 335 base <float> -;
#X text 178 335 base MIDI pitch for scale, f 51;
#X text 56 351 set-tuning <list> -;
#X text 56 367 sel-tuning <list> -;
#X text 178 367 selects stored tuning <bank \, program> into a <channel>, f 55;
#X text 178 351 sets tuning <bank \, program \, channel & name> for a scale;
#X text 38 383 unsel-tuning <float> -;
#X text 178 383 unselect a tuning from a channel (or from all channels if no float is given), f 55;
#X obj 12 413 cnv 3 520 3 empty \$0-pddp.cnv.inlets empty 8 12 0 13 #dcdcdc #000000 0;
#X text 178 309 scale in cents to retune (12-tone temperament if no list is given), f 51;
#X text 178 36 loads soundfont file (.sf2/.sf3 extensions implied) if no symbol is given \, dialog window opens (same as click), f 55;
#X text 80 36 open <symbol> -;
#X text 134 264 dump -;
#X text 178 264 outputs soundfont information on rightmost outlet, f 51;
#X restore 238 395 pd ALL Messages;
#N canvas 413 196 760 568 tuning_&_more 0;
#X msg 70 243 panic;
#X floatatom 167 374 10 0 0 0 - - - 0;
#X msg 167 397 pan \$1;
#X floatatom 92 335 10 0 0 0 - - - 0;
#X msg 92 356 transp \$1;
#X text 29 15 The control change parameters are programmed in a given synthesizer \, but if usually follows some standards like the messages where using here., f 72;
#X text 487 11 For reference \, see:;
#X text 510 31 and:;
#X text 153 279 set transposition in cents, f 17;
#X text 221 327 set pan for all channels, f 12;
#X text 539 287 see also:;
#X obj 30 211 list append 1;
#X obj 105 186 + 1;
#X obj 105 163 hradio 15 1 0 8 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X text 231 163 channel;
#N canvas 693 123 584 735 tuning 0;
#X text 113 94 bohlen-pierce;
#X text 126 115 quarter tones;
#X obj 67 31 loadbang;
#X msg 266 210 base 57;
#X text 136 143 equal temperament;
#X obj 266 264 s \$0-tuning;
#X msg 59 314 scale 0 180 350 500 700 850 1030 1200;
#X obj 93 491 s \$0-tuning;
#X msg 276 235 base 60;
#X obj 67 232 s \$0-tuning;
#X text 103 57 eighth tones;
#X obj 91 685 s \$0-tuning;
#X msg 101 586 sel-tuning 0 0 2;
#X text 211 580 select bank 0 \, pgm 0 in ch 2, f 14;
#X obj 361 614 r \$0-tuning;
#X obj 338 647 outlet;
#X text 297 313 an arbitrary scale;
#X msg 93 363 set-tuning 1 1 2 arbitrary;
#X text 191 545 select bank 1 \, pgm 1 in ch 1, f 14;
#X msg 81 549 sel-tuning 1 1 1;
#X msg 111 401 scale;
#X text 157 401 default (12 tone scale);
#X obj 338 550 bng 17 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X msg 67 57 48 2;
#X msg 79 93 13 3;
#X msg 90 116 24 2;
#X msg 100 144 12 2;
#N canvas 338 227 481 377 scale-generator 0;
#X obj 87 150 + 13;
#X obj 87 127 trigger float float, f 32;
#X obj 276 188 + 1;
#X obj 212 211 pack float float float;
#X obj 87 340 outlet;
#X obj 87 21 inlet;
#X obj 200 311 print scale_generate;
#X obj 87 177 t f f b, f 18;
#X msg 212 285 ----------------------------------------;
#X msg 212 236 set-tuning 0 \$3 \$2 \$1-tones-per-octave;
#X obj 27 159 vradio 15 1 0 8 fgfsgdg sfgshgd empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X msg 27 290 sel-tuning 0 \$1 1;
#X obj 100 49 bng 17 250 50 0 fsvfs dghsj empty 17 7 0 10 #dfdfdf #000000 #000000;
#X text 172 36 Generates 8 scales and loads them in different program numbers (0-127) on bank 0 and different channels (1-8). These are equal divisions of the octave from 13 to 20 steps. A scale name is also generated. Set a different input channel to play each scale on the parent patch., f 47;
#X text 10 113 or select a program in channel 1, f 11;
#X obj 87 78 else/loop 8;
#X obj 87 206 else/eqdiv;
#X obj 87 236 else/insert scale;
#X connect 0 0 7 0;
#X connect 1 0 0 0;
#X connect 1 1 2 0;
#X connect 1 1 3 2;
#X connect 2 0 3 1;
#X connect 3 0 9 0;
#X connect 5 0 15 0;
#X connect 7 0 16 0;
#X connect 7 1 3 0;
#X connect 7 2 8 0;
#X connect 8 0 6 0;
#X connect 9 0 4 0;
#X connect 9 0 6 0;
#X connect 10 0 11 0;
#X connect 11 0 4 0;
#X connect 12 0 15 0;
#X connect 15 0 1 0;
#X connect 16 0 17 0;
#X connect 17 0 4 0;
#X connect 17 0 6 0;
#X restore 338 581 pd scale-generator;
#X text 458 580 <-- open;
#X text 362 551 generate scale;
#X obj 368 138 s \$0-tuning;
#N canvas 342 235 477 288 remap 0;
#X obj 75 237 outlet;
#X obj 114 207 print;
#X obj 75 32 bng 17 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X text 220 74 The remap message allows you to set MIDI Pitches for each key. This patch generates random values for each key., f 31;
#X obj 75 62 else/loop -b 128;
#X obj 75 91 else/rand.f 0 127;
#X obj 75 119 else/group 128;
#X obj 75 146 else/sort;
#X obj 75 176 else/insert remap;
#X connect 2 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X connect 8 0 1 0;
#X restore 368 111 pd remap;
#X text 312 91 open to see 'remap' example, f 11;
#X text 241 423 set bank 0 \, pgm 0 in all channels, f 17;
#X msg 124 430 set-tuning 0 0 0;
#X msg 135 459 set-tuning 0 0 -1;
#X text 249 453 don't load in a channel (only store in a bank/pgm), f 26;
#X msg 114 618 unsel-tuning 1;
#X msg 123 649 unsel-tuning;
#X text 209 612 unselect tuning in channel 1, f 15;
#X text 207 643 unselect in all channels, f 12;
#X text 321 210 (decimal values allowed);
#X obj 67 173 else/eqdiv;
#X obj 67 201 else/insert scale;
#X text 197 25 There are banks and programs just for tunings. You can load a tuning with the 'scale' message followed by a list of intervals in cents. Here we're initially loading an eighth note scale (by default \, it goes into bank 0 \, program 0 and channel 1).;
#X text 250 175 Set fundamental (starting point of the scale in MIDI Pitch), f 31;
#X text 328 235 (default \, middle C);
#X text 97 341 sets tuning <bank \, program \, channel & name> for a scale;
#X text 259 363 sets to bank 1 \, pgm 1 \, ch 2 and scale name;
#X text 346 258 you need to set or reset the scale afterwards., f 24;
#X connect 2 0 23 0;
#X connect 3 0 5 0;
#X connect 6 0 7 0;
#X connect 8 0 5 0;
#X connect 12 0 11 0;
#X connect 14 0 15 0;
#X connect 17 0 7 0;
#X connect 19 0 11 0;
#X connect 20 0 7 0;
#X connect 22 0 27 0;
#X connect 23 0 42 0;
#X connect 24 0 42 0;
#X connect 25 0 42 0;
#X connect 26 0 42 0;
#X connect 27 0 15 0;
#X connect 31 0 30 0;
#X connect 34 0 7 0;
#X connect 35 0 7 0;
#X connect 37 0 11 0;
#X connect 38 0 11 0;
#X connect 42 0 43 0;
#X connect 43 0 9 0;
#X restore 178 424 pd tuning;
#X text 360 325 Open [pd tuning] for more details. Note that this example uses the [eqdiv] object to generate scales with equal divisions and starts with an eighth tone scale., f 62;
#X text 324 375 The 'set-tuning' message sets a tuning bank \, a program number (both from 0-127) \, a MIDI channel and a tuning name - default values are (0 \, 0 \, 0 \, custom-tuning). The 'scale' message then sets the tuning into the bank/program and loads it into the channel for use. If you don't want to load the scale into any channel and just set it into a bank/program \, use '0' \, while '-1' loads it into all channels., f 68;
#X obj 210 497 route scale;
#X text 114 240 Big panic red button \, resets whole synth, f 21;
#X text 324 450 The 'sel-tuning' message selects a bank/program in a given channel. The scale name is then output in the right outlet. If no scale is set \, "Unnamed" is output. To unselect a tuning from a channel (say "2") \, use 'unsel-tuning 2' \, or just 'unsel-tuning' to clear all channels (this loads the default 12 tone temperament back)., f 68;
#X text 319 168 [sfont~] also has microtonal capabilities. The 'scale' message sets a scale in cents and you can previously set a base value with the 'base' message \, which sets the scale fundamental in MIDI pitch (60 by default \, which is "C4"). Just 'scale' sets to the regular 12 tone temperament. Scales can have steps different that 12 and may not be based on the octave (such as the bohlen-Pierce scale). If picthes fall out of the 0-127 range \, the keys are muted. This behaves similarly to the [retune] object. A "remap" message sets 128 MIDI Pitch values (from 0 to 127) for each MIDI key \, so you can have a scale that doesn't repeat (decimal values are possible \, so 60.5 is a quarter tone above middle C)., f 69;
#X obj 603 287 else/retune;
#X obj 54 493 else/out~;
#X obj 611 12 else/openfile -h https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2 MIDI Specifications;
#X obj 545 32 else/openfile -h https://github.com/FluidSynth/fluidsynth/wiki/FluidFeatures#midi-control-change-implementation-chart Fluid Specificaitions;
#X obj 30 65 else/keyboard 17 80 6 3 0 0 empty empty;
#X obj 210 525 else/display;
#X obj 92 277 else/knob 50 -1200 1200 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X obj 167 316 else/knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X obj 69 460 else/sfont~ sf/waves.sf2;
#X obj 230 460 print info;
#X connect 0 0 30 0;
#X connect 1 0 2 0;
#X connect 2 0 30 0;
#X connect 3 0 4 0;
#X connect 4 0 30 0;
#X connect 11 0 30 0;
#X connect 12 0 11 1;
#X connect 13 0 12 0;
#X connect 15 0 30 0;
#X connect 18 0 27 0;
#X connect 26 0 11 0;
#X connect 28 0 3 0;
#X connect 29 0 1 0;
#X connect 30 0 23 0;
#X connect 30 1 23 1;
#X connect 30 2 18 0;
#X connect 30 2 31 0;
#X restore 445 341 pd tuning_&_more;
#N canvas 373 219 564 397 open 0;
#X obj 70 61 openpanel;
#X obj 70 31 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 96 33 load a different soundfont;
#X obj 70 300 outlet;
#X text 215 78 If no extension is given \, it searches for both ".sf2" and ".sf3" extensions. This is the same for the argument., f 38;
#X msg 89 86 symbol sf/Theremin;
#X text 150 217 no symbol opens dialog window;
#X msg 70 117 open \$1;
#X msg 100 182 open sf/Waves.sf2;
#X msg 115 218 open;
#X text 150 238 note you can also open a file by clicking on the object, f 29;
#X msg 89 154 open sf/GeneralUser_GS.sf3;
#X text 264 147 This is a big (6.8 MB) General MIDI soundbank that comes with ELSE for Pd Vanilla and is also available in PlugData., f 42;
#X connect 0 0 7 0;
#X connect 1 0 0 0;
#X connect 5 0 7 0;
#X connect 7 0 3 0;
#X connect 8 0 3 0;
#X connect 9 0 3 0;
#X connect 11 0 3 0;
#X restore 87 170 pd open;
#X text 19 170 load ----> soundfonts, f 10;
#X obj 148 315 else/out~;
#X obj 148 156 else/keyboard 14 45 2 3 0 0 empty empty;
#X text 43 84 [sfont~] is a sampler synthesizer that plays SoundFont files. It is based on FluidLite \, a light version of FluidSynth., f 74;
#X obj 343 313 route list;
#X obj 343 337 print dump;
#X obj 148 285 else/sfont~ sf/GeneralUser_GS.sf3;
#X obj 148 131 else/note.in;
#X text 65 287 click to --> open file, f 12;
#X msg 169 217 dump;
#X text 207 212 outputs lists with soundfont name followed by lists that represent: <bank> \, <program> \, <preset name>, f 51;
#X msg 188 253 info;
#X text 225 253 print info on Pd's window instead;
#X text 202 467 - info output, f 39;
#X connect 35 0 42 0;
#X connect 38 0 42 0;
#X connect 40 0 41 0;
#X connect 42 0 37 0;
#X connect 42 1 37 1;
#X connect 42 2 40 0;
#X connect 43 0 38 0;
#X connect 45 0 42 0;
#X connect 47 0 42 0;
