#N canvas 543 46 560 626 10;
#X obj 4 318 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 466 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 549 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 599 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 92 475 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 92 326 cnv 17 3 87 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 152 325 signal;
#X text 152 475 signal;
#X obj 205 249 else/out~;
#X obj 2 3 cnv 15 301 42 empty empty resonant~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 23 40 cnv 4 4 4 empty empty Bandpass 0 28 2 18 #e0e0e0 #000000 0;
#X obj 169 40 cnv 4 4 4 empty empty filter 0 28 2 18 #e0e0e0 #000000 0;
#X obj 99 40 cnv 4 4 4 empty empty resonant 0 28 2 18 #e0e0e0 #000000 0;
#X obj 92 419 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 92 442 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 116 419 float/signal;
#X text 116 442 float/signal;
#X text 158 340 clear;
#N canvas 426 113 926 617 filter 0;
#X obj 674 101 hsl 128 15 0.1 100 1 0 empty \$0-Q-set empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 606 75 hsl 128 15 20 20000 1 0 empty \$0-Hz-set empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 545 111 noise~;
#X obj 545 183 else/out~;
#X text 55 92 y[n] = a0 * x[n] + a2 * x[n-2] + b1 * y[n-1] + b2 * y[n-2];
#X text 61 118 a0 \, a2 \, b1 and b2 are calculated as a function of center frequency 'f' in hz and 'q' as follows \;;
#X obj 671 125 nbx 6 14 0.1 100 0 0 \$0-Q empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 603 101 nbx 6 14 20 20000 0 0 \$0-Hz empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 54 46 The equation is from the "Cookbook formulae for audio EQ biquad filter coefficients" by Robert Bristow-Johnsonc [1] \, and it is:;
#X text 623 75 center frequency;
#X text 695 101 resonance (Q);
#X text 53 13 This filter has zeroes fixes at +1 and -1 on the z-plane \, which means both 0Hz and Nyquist are always filtered out.;
#X text 712 151 Note: a 'q' value of 0 bypasses the input., f 21;
#X text 502 18 Change the parameters and check the filter response below. The graph considers a sample rate of 44.1Khz.;
#X text 700 187 same is true for t60 = 0;
#X text 82 145 omega = f * PI/nyquist \; alphaQ = sin(omega) / (2*q) \; b0 = alphaQ + 1 \; a0 = alphaQ * q / b0 \; a2 = -a0 \; b1 = 2*cos(omega) / b0 \; b2 = (alphaQ - 1) / b0 \;;
#X obj 545 150 else/resonant~ 500 1;
#N canvas 169 31 398 275 coeff 0;
#X obj 103 87 r \$0-Hz;
#X obj 173 87 r \$0-Q;
#X obj 87 54 loadbang;
#X obj 87 156 outlet;
#X obj 87 127 else/bicoeff2 resonant 500 1;
#X connect 0 0 4 0;
#X connect 1 0 4 1;
#X connect 2 0 4 0;
#X connect 4 0 3 0;
#X restore 12 284 pd coeff;
#X obj 12 311 else/biplot;
#X text 26 242 [1] found in https://webaudio.github.io/Audio-EQ-Cookbook/audio-eq-cookbook.html, f 80;
#X connect 0 0 6 0;
#X connect 1 0 7 0;
#X connect 2 0 16 0;
#X connect 6 0 16 2;
#X connect 7 0 16 1;
#X connect 16 0 3 0;
#X connect 17 0 18 0;
#X restore 432 223 pd filter formula \; and response;
#X text 200 418 - central frequency in Hertz;
#X text 201 340 - clears filter's memory if you blow it up;
#X obj 3 500 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#N canvas 783 164 457 344 resonance 0;
#X obj 36 246 else/out~;
#X text 92 167 resonance as 't60' in ms, f 12;
#X msg 53 149 q;
#X msg 65 173 t60;
#X obj 36 121 else/imp~ 1;
#X obj 243 246 else/out~;
#X msg 268 149 q;
#X msg 279 173 bw;
#X obj 243 121 noise~;
#X obj 243 206 else/resonant~ -bw 500 0.25;
#X obj 36 206 else/resonant~ -t60 500 500;
#X text 28 24 By default \, the resonance parameter is 'q' \, but you can also set to 't60' or 'bw'. In 'bw' the resonance is bandwidth in octaves. In 't60' \, it's the time in ms for an excitation signal (such as an impulse) to decay 60dB. Use the -t60/-bw flags to change from the default or the messages.;
#X text 307 168 bandwidth in octaves, f 10;
#X connect 2 0 10 0;
#X connect 3 0 10 0;
#X connect 4 0 10 0;
#X connect 6 0 9 0;
#X connect 7 0 9 0;
#X connect 8 0 9 0;
#X connect 9 0 5 0;
#X connect 10 0 0 0;
#X restore 467 198 pd resonance;
#X text 210 60 (constant skirt);
#X text 201 325 - signal to be filtered or excite the resonator;
#X text 201 475 - resonator/filtered signal;
#N canvas 835 96 413 594 [bandpass~]_vs_[resonant~] 0;
#X text 27 12 If you compare the filter response of both [bandpass~] and [resonant~] \, you may notice how similar they are. In fact \, the only difference is that [bandpass~] will have an automatic gain adjustment so the maximum gain value is constantly at 0 dB!;
#X text 29 84 Therefore \, we can describe [bandpass~] as being a "constant gain filter" \, whereas [resonant~] is a constant skirt filter.;
#X obj 103 136 else/imp~ 1;
#X obj 104 425 else/out~;
#X obj 203 219 else/out~;
#X obj 191 192 else/bandpass~ 1000 1000;
#X obj 125 225 else/meter~;
#X obj 42 426 else/meter~;
#X obj 104 384 else/resonant~ 1000 1000;
#X obj 192 309 else/out~;
#X obj 192 285 *~ 1000;
#X text 309 235 <-- we hear nothing, f 11;
#X text 297 322 <-- now we hear it, f 10;
#X text 209 438 <-- we hear the resonance naturally, f 13;
#X connect 2 0 5 0;
#X connect 2 0 8 0;
#X connect 5 0 4 0;
#X connect 5 0 6 0;
#X connect 5 0 10 0;
#X connect 8 0 3 0;
#X connect 8 0 7 0;
#X connect 10 0 9 0;
#X restore 366 261 pd [bandpass~]_vs_[resonant~];
#X msg 222 189 clear;
#N canvas 466 163 843 347 resonator 0;
#X text 33 14 Resonator:;
#X obj 228 128 noise~;
#X obj 228 182 *~;
#X obj 243 156 else/pulse~ 0.5 0.25;
#X obj 65 218 else/resonant~ 400 1000;
#X obj 228 218 else/resonant~ 700 2000;
#X text 33 43 The Q parameter affecting the gain of the filter makes it so that it acts as a 'resonator' \, where it will resonate at the resonant frequency for a period of time after the input signal has ceased.;
#X obj 554 100 else/out~;
#X obj 554 40 else/dust~ 5;
#X text 642 40 random excitation;
#N canvas 769 150 452 512 T60 0;
#X obj 292 282 else/pi;
#X obj 184 156 / 1000;
#X obj 184 210 expr log(1000) / ($f1 * pi);
#X obj 184 181 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 243 182 decay time in seconds;
#X obj 184 239 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 246 238 bandwidth in hertz;
#X obj 169 268 /;
#X obj 115 183 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 169 294 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 228 292 Q;
#X obj 115 108 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 173 107 decay time in milliseconds;
#X obj 115 131 t bang float;
#X text 64 183 center;
#X text 53 203 frequency;
#X obj 154 331 /;
#X obj 154 357 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 142 242 t f f;
#X text 213 358 bandwidth in hertz;
#X obj 154 385 expr log(1000) / ($f1 * pi);
#X obj 154 415 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 213 416 decay time in seconds;
#X obj 154 437 * 1000;
#X obj 154 462 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 212 461 decay time in milliseconds;
#X obj 33 122 loadbang;
#X msg 33 146 set 1000;
#X msg 115 84 2000;
#X obj 115 60 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 67 22 Converting from decay time to Q and vice-versa;
#X obj 292 308 v pi;
#X connect 0 0 31 0;
#X connect 1 0 3 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 5 0 7 1;
#X connect 7 0 9 0;
#X connect 8 0 18 0;
#X connect 9 0 16 1;
#X connect 11 0 13 0;
#X connect 13 0 8 0;
#X connect 13 1 1 0;
#X connect 16 0 17 0;
#X connect 17 0 20 0;
#X connect 18 0 16 0;
#X connect 18 1 7 0;
#X connect 20 0 21 0;
#X connect 21 0 23 0;
#X connect 23 0 24 0;
#X connect 26 0 27 0;
#X connect 27 0 8 0;
#X connect 28 0 11 0;
#X connect 29 0 28 0;
#X restore 567 256 pd T60 and Q conversion;
#X obj 141 256 else/out~;
#X obj 554 68 else/resonant~ -t60 1000 1000;
#X text 449 180 Thus \, instead of a 'q' factor \, the resonant parameter can be specified by a decay time. The decay time is given in "T60" \, which is the time it takes to decay 60 dB. You can convert from decay time to Q and vice versa with a formula implemented in the subpatch below.;
#X text 518 307 see also:;
#X obj 598 307 else/resonator~;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 0 5 0;
#X connect 3 0 2 1;
#X connect 4 0 11 0;
#X connect 5 0 11 1;
#X connect 8 0 12 0;
#X connect 12 0 7 0;
#X restore 469 286 pd resonator;
#X text 128 557 1) float - central frequency in hertz (default 0);
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 304 3 graph;
#X obj 205 161 noise~;
#X obj 205 217 else/resonant~ 500 100;
#X floatatom 269 189 5 0 0 0 - - - 0;
#X floatatom 334 189 5 0 0 0 - - - 0;
#X text 27 205 see also:;
#X obj 26 254 else/bandpass~;
#X obj 26 279 else/bicoeff2;
#X obj 26 231 else/resonator~;
#X text 128 575 2) float - resonance (default 0) \, either in 't60' or 'Q' (default), f 66;
#X text 176 385 bw;
#X text 201 385 - sets resonance parameter to bandwidth in octaves;
#X text 182 370 q;
#X text 201 370 - sets resonance parameter to Q (default);
#X text 170 400 t60;
#X text 201 400 - sets resonance parameter to decay time in ms;
#X text 201 442 - resonance (Q \, bw or t60);
#X text 164 526 -t60;
#X text 209 526 - sets resonance parameter to 't60';
#X text 170 506 -bw;
#X text 209 506 - sets resonance parameter to bandwidth in octaves;
#X msg 133 182 bypass \$1;
#X obj 133 158 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 59 90 [resonant~] is a bandpass resonator filter like [bandpass~] \, but it doesn't have a maximum dB value of 0 \, so changing the Q increases the gain of the filter. Besides 'Q' and 'bw' you can also set the resonance as 't60' (like with [resonator~])., f 75;
#X text 104 355 bypass <float>;
#X text 201 355 - 1 (bypasses input signal) or 0 (doesn't bypass);
#X connect 28 0 40 0;
#X connect 39 0 40 0;
#X connect 40 0 8 0;
#X connect 41 0 40 1;
#X connect 42 0 40 2;
#X connect 59 0 40 0;
#X connect 60 0 59 0;
