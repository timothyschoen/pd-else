#N canvas 489 44 561 663 10;
#X obj 4 637 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 5 313 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 538 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 611 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 68 320 cnv 17 3 192 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 152 320 signal;
#X text 207 545 (none);
#X obj 68 517 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 152 517 signal;
#X text 196 517 - signal to be displayed on the Y axis, f 58;
#X text 196 320 - signal to be displayed in the X axis, f 58;
#X text 205 616 (none);
#X obj 4 566 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 196 396 - sets vertical range (default -1 1), f 58;
#X text 196 457 - sets trigger mode: 0 (none \, default) \, 1 (up) or 2 (down);
#X text 196 471 - sets threshold level for the trigger mode (default 0), f 58;
#N canvas 151 161 937 419 X-Y_Mode 0;
#X obj 769 88 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 766 110 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X msg 720 39 588;
#X msg 684 39 550;
#X msg 653 39 441;
#X msg 594 39 220;
#X msg 754 39 660;
#X msg 786 39 1760;
#X text 57 110 When in X-Y mode \, [scope~] plots points whose horizontal axis (X) corresponds to the signal's values coming into the left inlet and whose vertical axis (Y) corresponds to the signal's values coming into the right inlet. If the two signals are identical and in phase \, a straight line increasing from left to right will be seen. If the two signals are identical and 180 degrees out of phase \, a straight line decreasing from left to right will be seen. Other combinations may produce circles \, ellipses \, and Lissajous figures.;
#X text 57 247 When in X-Y mode \, there's an averaging algorithm for the calccount parameter \, where a representative sample from this period is used. So it requires small values for a better representation (only 2 in the examples below).;
#X obj 492 92 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 685 88 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X msg 564 39 1;
#X obj 492 174 else/scope~ 200 200 5 3 200 -1 1 50 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X text 57 73 If signals are connected to both the left and right inlets \, [scope~] operates in X-Y mode.;
#X text 59 317 Change the phase of the oscillator to check how it affects the plot \, then try different frequencies.;
#X text 794 88 change phase;
#X obj 492 133 else/sine~ 440;
#X obj 685 134 else/sine~ 440;
#X msg 624 39 440;
#X msg 577 89 0;
#X text 606 89 reset;
#X obj 777 218 else/setdsp~;
#X connect 0 0 1 0;
#X connect 1 0 18 2;
#X connect 2 0 11 0;
#X connect 3 0 11 0;
#X connect 4 0 11 0;
#X connect 5 0 11 0;
#X connect 6 0 11 0;
#X connect 7 0 11 0;
#X connect 10 0 17 0;
#X connect 11 0 18 0;
#X connect 12 0 11 0;
#X connect 17 0 13 0;
#X connect 18 0 13 1;
#X connect 19 0 11 0;
#X connect 20 0 17 1;
#X connect 20 0 18 1;
#X restore 414 240 pd X-Y_Mode;
#X obj 46 111 hsl 100 17 2 30 1 0 empty empty empty 5 8 1 10 #dcdcdc #000000 #000000 0 0;
#X floatatom 43 133 5 0 0 0 - - - 0;
#X obj 31 194 cnv 5 5 5 empty empty 1 0 0 0 16 #fcfcfc #9c9c9c 0;
#X obj 19 300 cnv 5 5 5 empty empty -1 0 0 0 16 #fcfcfc #9c9c9c 0;
#X obj 30 246 cnv 5 5 5 empty empty 0 0 0 0 16 #fcfcfc #9c9c9c 0;
#X text 65 112 frequency;
#N canvas 411 84 736 514 appearance_colors 0;
#X obj 395 306 osc~ 24;
#X obj 326 341 else/scope~ 250 133 10 3 185 -1 1 0 0 0 -0.333333 30 30 30 190 190 190 160 160 160 0 empty;
#X text 472 79 RGB colors (values from 0-255) for fgcolor (front/signal) \, bgcolor (background) & grid (gridcolor)., f 35;
#X obj 366 266 else/initmess fgcolor 30 30 30 \, bgcolor 190 190 190 \, gridcolor 160 160 160, f 40;
#X text 547 245 default;
#X obj 156 356 else/setdsp~;
#X obj 55 46 vsl 15 128 0 255 0 0 rjhfkjfbws \$0-Rf empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 1;
#X floatatom 55 188 5 0 0 0 - - - 0;
#X obj 101 46 vsl 15 128 0 255 0 0 xaslkdjla \$0-Gf empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 1;
#X floatatom 101 188 5 0 0 0 - - - 0;
#X obj 148 46 vsl 15 128 0 255 0 0 qdaskjlf \$0-Bf empty 0 -9 0 10 #0000fc #fcfcfc #000000 0 1;
#X floatatom 148 188 5 0 0 0 - - - 0;
#X obj 326 46 vsl 15 128 0 255 0 0 rjhfkjfbws \$0-Rg empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 1;
#X floatatom 326 188 5 0 0 0 - - - 0;
#X obj 372 46 vsl 15 128 0 255 0 0 xaslkdjla \$0-Gg empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 1;
#X floatatom 372 188 5 0 0 0 - - - 0;
#X obj 419 46 vsl 15 128 0 255 0 0 qdaskjlf \$0-Bg empty 0 -9 0 10 #0000fc #fcfcfc #000000 0 1;
#X floatatom 419 188 5 0 0 0 - - - 0;
#X obj 193 46 vsl 15 128 0 255 0 0 rjhfkjfbws \$0-Rb empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 1;
#X floatatom 193 188 5 0 0 0 - - - 0;
#X obj 239 46 vsl 15 128 0 255 0 0 xaslkdjla \$0-Gb empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 1;
#X floatatom 239 188 5 0 0 0 - - - 0;
#X obj 286 46 vsl 15 128 0 255 0 0 qdaskjlf \$0-Bb empty 0 -9 0 10 #0000fc #fcfcfc #000000 0 1;
#X floatatom 286 188 5 0 0 0 - - - 0;
#X obj 55 239 else/insert fgcolor;
#X obj 55 214 else/pack2 f f f;
#X obj 193 214 else/pack2 f f f;
#X obj 193 239 else/insert bgcolor;
#X obj 326 214 else/pack2 f f f;
#X obj 326 239 else/insert gridcolor;
#X connect 0 0 1 0;
#X connect 3 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 25 0;
#X connect 8 0 9 0;
#X connect 9 0 25 1;
#X connect 10 0 11 0;
#X connect 11 0 25 2;
#X connect 12 0 13 0;
#X connect 13 0 28 0;
#X connect 14 0 15 0;
#X connect 15 0 28 1;
#X connect 16 0 17 0;
#X connect 17 0 28 2;
#X connect 18 0 19 0;
#X connect 19 0 26 0;
#X connect 20 0 21 0;
#X connect 21 0 26 1;
#X connect 22 0 23 0;
#X connect 23 0 26 2;
#X connect 24 0 1 0;
#X connect 25 0 24 0;
#X connect 26 0 27 0;
#X connect 27 0 1 0;
#X connect 28 0 29 0;
#X connect 29 0 1 0;
#X restore 294 263 pd appearance_colors;
#N canvas 526 132 767 456 appearance_others 0;
#X msg 135 147 delay 1000;
#X text 142 175 vertical range;
#X msg 122 123 delay 0;
#X text 123 101 onset delay;
#X text 202 147 once a second;
#X msg 155 216 range -1 1;
#X text 175 123 (default);
#X text 225 218 (default);
#X msg 145 193 range -1.2 1.2;
#X text 29 44 You can set the vertical (signal amplitude) range and the onset delay (time between displays) with messages.;
#X obj 506 251 else/scope~ 100 50 256 3 128 -1 1 0 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X obj 478 100 tgl 25 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 478 143 select 0 1;
#X obj 506 173 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 431 173 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 122 273 else/scope~ 219 108 10 3 185 -1.2 1.2 0 0 0 -0.333333 30 30 30 190 190 190 160 160 160 0 empty;
#X msg 431 198 dim 100 50;
#X msg 506 198 dim 50 100;
#X text 395 43 There's also a "dim" message/flag for setting the size of your [scope~]., f 41;
#X obj 40 207 noise~;
#X obj 341 115 else/setdsp~;
#X connect 0 0 15 0;
#X connect 2 0 15 0;
#X connect 5 0 15 0;
#X connect 8 0 15 0;
#X connect 11 0 12 0;
#X connect 12 0 14 0;
#X connect 12 1 13 0;
#X connect 13 0 17 0;
#X connect 14 0 16 0;
#X connect 16 0 10 0;
#X connect 17 0 10 0;
#X connect 19 0 15 0;
#X restore 425 263 pd appearance_others;
#N canvas 877 183 459 413 mouse 0;
#X text 93 342 And as noted \, if you right click on it (in edit mode or not) you can access its properties., f 50;
#X text 44 36 When you click on [scope~] with your mouse \, the display freezes for as long as you hold the mouse button down.;
#X text 86 295 When in edit mode \, you can resize the object by clicking and dragging on its bottom right corner., f 51;
#X obj 93 96 else/rampnoise~ 40;
#X obj 93 133 else/scope~ 184 115 256 3 128 -1 1 0 0 0 0 0 0 0 190 190 190 100 100 100 0 empty;
#X obj 317 131 else/setdsp~;
#X connect 3 0 4 0;
#X restore 357 240 pd mouse;
#X obj 236 198 else/note 151 12 helvetica empty 0 200 0 0 0 255 255 255 0 0 <== Right click for properties!;
#X text 116 395 range <f \, f>;
#X text 86 412 fgcolor <f \, f \, f>;
#X text 86 427 bgcolor <f \, f \, f>;
#X text 74 441 gridcolor <f \, f \, f>;
#X obj 499 69 else/setdsp~;
#N canvas 954 174 335 328 Y_Mode 0;
#X obj 93 144 else/scope~ 130 130 11 3 128 -1 1 0 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X text 53 33 If a signal is only fed to the second inlet \, [scope~] displays in "Y Mode" only., f 31;
#X obj 216 102 osc~ 60;
#X obj 265 166 else/setdsp~;
#X connect 2 0 0 1;
#X restore 491 240 pd Y_Mode;
#X text 128 378 dim <f \, f>;
#X obj 43 153 osc~ 2;
#X text 92 499 receive <symbol>;
#X text 98 456 trigger <float>;
#X text 86 471 triglevel <float>;
#X text 196 499 - receive symbol (default empty), f 58;
#N canvas 643 128 501 338 receive 0;
#X obj 67 175 else/scope~ 130 130 2 3 128 -1 1 100 0 0 0 30 30 30 190 190 190 160 160 160 0 \$0-rcv;
#X obj 311 272 s \$0-rcv;
#X obj 67 130 noise~;
#X msg 311 205 2 128;
#X msg 331 233 64 12;
#X obj 124 123 loadbang;
#X msg 124 144 receive \\\$0-rcv;
#X text 252 108 You can send any kind of message that [scope~] accepts. Note that if you send it a list of two floats. Then the values are spread via both inlets and set samples per line and lines per buffer \, respectively., f 38;
#X text 30 25 When in edit mode \, [scope~] shows its inlets. The [scope~] object below has a receive symbol \, so you can send messages to it via a [send] object (but not audio). In this case \, the inlets are suppressed \, so we don't see it. The receive symbol can be set with the receive message or the -receive flag. Dollar signs must be escaped. If you set a receive name as "empty" then it can't receive messages anymore and the inlets are shown., f 75;
#X obj 419 208 else/setdsp~;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X restore 485 285 pd receive;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 22 40 cnv 4 4 4 empty empty Oscilloscope\ display 0 28 2 18 #e0e0e0 #000000 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 2 3 cnv 15 301 42 empty empty scope~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X text 196 412 - sets front/signal RGB color (values 0-255), f 58;
#X text 196 427 - sets background RGB color (values 0-255), f 58;
#X text 196 441 - sets grid RGB color (values 0-255), f 58;
#X text 92 334 nsamples <float>;
#X text 104 349 nlines <float>;
#X text 196 379 - sets width/height (default 200 100), f 58;
#X obj 43 191 else/scope~ 184 115 256 3 128 -1 1 0 0 0 0 32 32 32 187 187 187 159 159 159 0 empty;
#N canvas 437 181 670 405 buffer_period 0;
#X msg 113 42 256 10;
#X obj 53 125 osc~ 20;
#X msg 127 70 10 256;
#X text 170 70 10 samples per line \, 256 lines;
#X text 160 42 256 samples per line \, 10 lines;
#X obj 113 244 else/scope~ 178 126 256 3 10 -1 1 0 0 0 -0.333333 30 30 30 190 190 190 160 160 160 0 empty;
#X text 334 198 Therefore \, the total number of samples (or period) displayed in the scope is equal to: nsamples * nlines. This total number of samples also affects the time between displays. If the number of samples is small \, the refresh rate speed is high \, so you may want to use the "delay" message to increase the speed between displays., f 49;
#X listbox 113 97 10 0 0 0 - - - 0;
#X floatatom 132 123 5 0 0 0 - - - 0;
#X msg 153 204 nlines \$1;
#X floatatom 153 179 5 0 0 0 - - - 0;
#X msg 132 148 nsamples \$1;
#X text 334 284 You can also set both parameters with a list input. Lets check the example to the left with two settings. Both have the same display period in samples (2560) \, but one is displayed as a buffer made of 10 lines and 256 samples per line and the other as a buffer made of 256 lines and 10 samples per line., f 49;
#X text 334 104 "nlines" sets the number of lines in the display (possible values from 8 to 256 - default is 8). The number of samples represented by each line is set by "nsamples" (possible values from 2 to 8192 - default is 256). For each line \, the maximum and minimum values within the period in samples are used to generate the line. So the smallest line is 2 samples/points long., f 49;
#X obj 238 119 else/setdsp~;
#X connect 0 0 7 0;
#X connect 1 0 5 0;
#X connect 2 0 7 0;
#X connect 7 0 5 0;
#X connect 8 0 11 0;
#X connect 9 0 5 0;
#X connect 10 0 9 0;
#X connect 11 0 5 0;
#X restore 276 285 pd buffer_period;
#N canvas 502 146 864 402 delay_trigger 0;
#X obj 461 197 vsl 15 126 -1 1 0 1 empty empty empty 0 -9 0 10 #b8b8b8 #000000 #000000 6200 1;
#X obj 598 67 vradio 17 1 1 3 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 1;
#X msg 598 148 trigger \$1;
#X floatatom 598 126 5 0 0 0 - - - 0;
#X msg 503 130 triglevel \$1;
#X obj 461 343 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 461 368 s \$0-slider;
#X obj 503 76 r \$0-slider;
#X floatatom 503 102 5 0 0 0 - - - 0;
#X text 617 67 0) none;
#X text 617 84 1) Up;
#X text 617 102 2) Down;
#X text 52 119 The default mode is "trigger 0" \, which is "none mode" \, where the signal is displayed the way it is., f 57;
#X text 52 149 "trigger 1" is "up mode" \, in which - following the delay period - a new display is triggered only when the signal goes from below the trigger level to being equal to it or above it.;
#X text 52 200 "trigger 2" sets to down mode \, in which - following the delay period - a new display is shown only when the signal goes from above the trigger level to being equal to it or below it., f 57;
#X text 52 251 The "triglevel <float>" message sets the threshold for the trigger modes "1" (up) and "2" (down). In these cases \, as described above \, the waveform must increase or decrease past this value to trigger a new display. If you are displaying a periodic waveform \, some changes to the trigger level will shift the waveform to the left or right., f 57;
#X obj 479 196 else/scope~ 266 131 2 3 256 -1 1 50 0 1 -0.008 30 30 30 190 190 190 160 160 160 0 empty;
#X msg 706 151 delay \$1;
#X floatatom 706 123 5 0 0 0 - - - 0;
#X text 52 76 The delay onset period determines when to display a new waveform. The trigger mode determines when a new waveform trace begins (following the delay period).;
#X obj 479 28 else/rampnoise~ 300;
#X obj 781 204 else/setdsp~;
#X connect 0 0 5 0;
#X connect 1 0 3 0;
#X connect 2 0 16 0;
#X connect 3 0 2 0;
#X connect 4 0 16 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 4 0;
#X connect 17 0 16 0;
#X connect 18 0 17 0;
#X connect 20 0 16 0;
#X restore 380 285 pd delay_trigger;
#X text 245 130 number of samples per line & number of lines in buffer, f 27;
#X listbox 166 135 10 0 0 0 - - - 12;
#X obj 166 108 else/initmess 256 128;
#X text 164 363 list;
#X text 196 335 - sets number of samples per line (2-8192 \, default 256), f 58;
#X text 196 364 - one float sets 'nsamples' \, optional second sets 'nlines';
#X floatatom 168 162 5 0 0 0 - - - 12;
#X text 211 162 samples per line;
#X text 98 572 -fgcolor <f f f> | -bgcolor <f f f> | -gridcolor <f f f> | -range <f f> | -trigger <f> | -triglevel <f> | -nsamples <f> | -nlines <f> | -delay <f> | -dim <f f> | -receive <sym>, f 62;
#X text 207 60 [scope~] displays signals in the style of an oscilloscope. It works up to two dimensions., f 40;
#N canvas 626 294 419 280 see 0;
#X obj 128 86 scope3d~ 0 0 140 140 1 0 1 1 1 1 20 8 256 30 30 30 190 190 190 160 160 160 empty;
#X text 127 22 For up to 3D plots \, see:;
#X text 159 49 [scope3d~];
#X restore 479 199 pd see also;
#X text 110 485 rate <float>;
#X text 196 485 - onset time delay between displays (default 0), f 58;
#X text 196 349 - sets number of lines in buffer (8-256 \, default 8), f 58;
#X connect 17 0 18 0;
#X connect 18 0 34 0;
#X connect 34 0 57 0;
#X connect 61 0 57 0;
#X connect 62 0 61 0;
#X connect 66 0 57 0;
