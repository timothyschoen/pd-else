#N canvas 477 43 563 524 10;
#X obj 6 497 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 23 40 cnv 4 4 4 empty empty Slew 0 28 2 18 #e0e0e0 #000000 0;
#X obj 67 40 cnv 4 4 4 empty empty limiter 0 28 2 18 #e0e0e0 #000000 0;
#X obj 1 3 cnv 15 301 42 empty empty slew~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 193 309 else/s2f~;
#X text 19 246 see also:;
#X obj 25 311 else/glide~;
#X obj 503 94 else/setdsp~ 1;
#X obj 126 181 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 196 337 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 24 290 else/slew2~;
#X obj 23 269 else/slew;
#X obj 25 332 else/lag~;
#X msg 203 255 set 0;
#X msg 193 231 set 1;
#X msg 262 174 1;
#X floatatom 262 250 5 0 0 0 - - - 0;
#X msg 271 202 0;
#X msg 279 224 -1;
#X msg 234 174 0.1;
#X text 304 224 <= no limit;
#X text 311 185 per second), f 22;
#X text 293 173 <= speed limit (amplitude;
#X text 298 202 <= 0 speed (stopped);
#X obj 4 361 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 433 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 466 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 110 442 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 110 368 cnv 17 3 35 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 110 409 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 235 443 - slew limited values;
#X text 235 369 - values to be slew limited, f 46;
#X text 165 473 1) float - slew limit speed (default 0);
#X text 235 410 - speed limit (negative values = no limit), f 46;
#X text 235 385 - sets new start point and goes back to target;
#X obj 193 280 else/slew~ 1;
#N canvas 843 76 503 490 example 0;
#X text 73 16 When new values come in \, the object limits the change to a maximum step until it reaches the new value. A speed of "1" means that it takes one second to move to a difference of 1 in amplitue. The actual step between subsequent changes depend on this speed and the sample rate., f 61;
#X text 73 82 If you have a sample rate of 44100 samples per second \, then a second has 44100 steps. If the speed is then "1" \, this means that the step value is 1/44100 (2.26757e-05). So a shift between 0 and 1 takes 44100 steps of 2.26757e-05 and a second to reach 1!, f 61;
#X obj 61 364 else/rescale~ 300 600;
#X obj 61 391 osc~;
#X obj 61 414 else/out~;
#X obj 326 357 osc~;
#X obj 326 392 else/out~;
#X obj 326 199 else/stepnoise~ 1;
#X obj 326 242 else/rescale~ 200 800;
#X obj 59 169 else/randpulse~ 2;
#X obj 59 204 else/slew~ 10;
#X obj 326 283 else/slew~ 800;
#X obj 326 318 else/numbox~ 6 12 100 #c0c0c4 #440008 0 0 10 0;
#X obj 77 237 else/scope~ 200 100 256 3 128 -1 1 0 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 11 0;
#X connect 9 0 10 0;
#X connect 10 0 2 0;
#X connect 10 0 13 0;
#X connect 11 0 12 0;
#X connect 12 0 5 0;
#X restore 473 306 pd example;
#X obj 126 207 else/rand.f 0 1;
#X floatatom 126 228 9 0 0 0 - - - 0;
#X obj 126 249 sig~;
#X text 39 92 [slew~] takes an amplitude limit per second and an incoming value to be 'slew limited'. It then generates a line towards the incoming value. The difference between [slew~] and [glide~] is that [slew~] has a fixed speed \, not a fixed period. A limit of zero stops the line generation and a negative value turns the limiter off. There's support for multichannel signals., f 71;
#N canvas 565 104 507 509 multichannel 0;
#X obj 116 292 else/s2f~;
#X obj 116 136 bng 25 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 349 307 setdsp~;
#X msg 57 217 set 0 1;
#X obj 116 323 unpack;
#X obj 116 354 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 149 354 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 116 263 else/slew~ 0.5;
#X obj 116 217 else/rand.f~ -ch 2 0 1;
#X obj 256 293 else/s2f~;
#X obj 256 338 unpack;
#X obj 256 369 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 289 369 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X text 61 29 If [slew~] has a multichannel input \, it outputs the same number of channels. If the right inlet has a single channel for the slew limit \, the value is applied to all channels. If the right inlet is also a multichhanel signal \, then each channel gets its own limit value. Note \, however \, that the number of multichannels in the right inlet needs to match the same number of channels from the left input., f 65;
#X obj 256 264 else/slew~;
#X obj 313 233 else/sigs~ 0.5 1;
#X obj 116 175 else/float2imp~;
#X connect 0 0 4 0;
#X connect 1 0 16 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 7 0 0 0;
#X connect 8 0 7 0;
#X connect 8 0 14 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 10 1 12 0;
#X connect 14 0 9 0;
#X connect 15 0 14 1;
#X connect 16 0 8 0;
#X restore 443 331 pd multichannel;
#X text 162 385 set <list>;
#X text 167 443 signal(s);
#X text 168 410 signal(s);
#X text 132 369 float/signal(s);
#X connect 13 0 18 0;
#X connect 17 0 46 0;
#X connect 22 0 44 0;
#X connect 23 0 44 0;
#X connect 24 0 25 0;
#X connect 25 0 44 1;
#X connect 26 0 25 0;
#X connect 27 0 25 0;
#X connect 28 0 25 0;
#X connect 44 0 13 0;
#X connect 46 0 47 0;
#X connect 47 0 48 0;
#X connect 48 0 44 0;
