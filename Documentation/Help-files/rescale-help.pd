#N canvas 491 83 568 638 10;
#X obj 4 305 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 440 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 551 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 133 449 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 134 312 cnv 17 3 76 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 206 186 hsl 160 17 0 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 203 214 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 2 3 cnv 15 301 42 empty empty rescale 20 20 2 37 #e0e0e0 #000000 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Rescale\ control\ values 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X text 236 312 - original value(s), f 35;
#X text 236 449 - rescaled value(s);
#X text 236 327 - sets exponential value, f 35;
#X text 156 327 exp <float>;
#X obj 183 271 else/display;
#N canvas 589 35 623 686 arguments 0;
#X obj 51 123 hsl 180 15 0 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 48 151 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 151 173 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 207 174 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 96 200 else/rescale -10 10;
#X obj 96 233 else/display;
#X text 149 154 min-out;
#X text 206 154 max-out;
#X obj 310 88 hsl 180 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 307 116 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 307 245 else/display;
#X text 382 166 min-out;
#X text 464 166 max-out;
#X obj 386 185 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 466 185 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X msg 106 389 clip \$1;
#X obj 106 364 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 177 366 hsl 180 15 -2 2 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 174 394 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 174 477 nbx 6 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 307 212 else/rescale -in 0 1 -10 10;
#X msg 340 142 in 0 1;
#X text 387 142 input range;
#X text 63 20 You can set the minimum and maximum output via the rightmost inlets \, but you can set minimum and maximum input with the 'in' message or flag. The third argument is for the exponential factor explained later., f 74;
#X obj 264 538 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 261 579 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 261 636 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 375 578 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 375 635 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 392 653 Inverted;
#X obj 375 601 else/rescale 1 0;
#X obj 261 602 else/rescale 0 1;
#X text 97 572 The scaling can be inverted by reversing the min/max output values, f 21;
#X obj 174 439 else/rescale -noclip -in -1 1 -10 10;
#X text 64 286 By default \, [rescale] will clip the values to the given in and out range. You can use clip message to get in or out of the clip mode. The p the output into the output range. The -noclip flag initializes to non clip mode \, where the object keeps scaling outside the given boundaries with the same conversion parameters., f 71;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 4 1;
#X connect 3 0 4 2;
#X connect 4 0 5 0;
#X connect 8 0 9 0;
#X connect 9 0 20 0;
#X connect 13 0 20 1;
#X connect 14 0 20 2;
#X connect 15 0 33 0;
#X connect 16 0 15 0;
#X connect 17 0 18 0;
#X connect 18 0 33 0;
#X connect 20 0 10 0;
#X connect 21 0 20 0;
#X connect 24 0 25 0;
#X connect 24 0 27 0;
#X connect 25 0 31 0;
#X connect 27 0 30 0;
#X connect 30 0 28 0;
#X connect 31 0 26 0;
#X connect 33 0 19 0;
#X restore 466 226 pd arguments;
#X obj 133 395 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 192 395 float;
#X obj 6 614 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 6 473 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 236 371 - <1> turns clipping on \, <0> off, f 35;
#X text 150 371 clip <float>;
#X text 198 312 list;
#X text 198 449 list;
#X text 31 243 see also:;
#X obj 32 267 else/rescale~;
#X obj 183 243 else/rescale -1 1;
#X obj 183 156 else/initmess 16 63 127;
#N canvas 565 71 713 611 log/exponential 0;
#X obj 350 441 hsl 128 15 220 880 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 347 471 5 0 0 0 - - - 0;
#X msg 347 413 440;
#X obj 153 500 hsl 136 16 0 1 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 150 472 0.5;
#X floatatom 150 576 11 0 0 0 - - - 0;
#X floatatom 150 527 12 0 0 0 - - - 0;
#X text 102 22 The 3rd argument sets the exponential factor. You can also set this with the 'exp' message or flag. A value of '0' makes it linear (the default) \, but values of "1" or "-1" also make it linear.;
#X text 48 406 The log mode makes it behave like the 'log' mode in iemguis. This is useful for frequencies like \, below \, we have a range from 220 to 880 and the mid value is 440!, f 38;
#X text 102 73 For positive values \, it's like raising to the power of the given exponential \, try the example to the left with values from 0.1 to 10 The input from 0 to 127 is then mapped to 0-1 generating the exponential curves below., f 58;
#X floatatom 28 166 10 1 1.2 0 - - - 0;
#X obj 31 139 hsl 128 15 0.1 10 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 488 40 cnv 15 198 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-positive 128 float 0;
#X coords 0 1 127 0 200 140 1 0 0;
#X restore 487 39 graph;
#X text 39 139 exponential factor;
#X text 474 169 0;
#X text 472 37 1;
#X obj 55 282 trigger float float;
#X obj 55 223 trigger bang float, f 23;
#X obj 55 323 else/rescale;
#X msg 190 287 exp \$1;
#X obj 487 227 cnv 15 198 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-negative 128 float 0;
#X coords 0 1 127 0 200 140 1 0 0;
#X restore 486 226 graph;
#X text 473 356 0;
#X text 471 224 1;
#X obj 257 287 trigger float float;
#X obj 257 228 trigger bang float, f 23;
#X obj 257 328 else/rescale;
#X msg 392 292 exp \$1;
#X obj 257 199 * -1;
#X obj 55 352 tabwrite \$0-positive;
#X obj 257 357 tabwrite \$0-negative;
#X text 234 131 Negative exponentials are allowed. In this case \, it's like the curve shape has been mirrored in reverse., f 36;
#X obj 257 260 else/loop 128;
#X obj 55 255 else/loop 128;
#X obj 28 201 sel 1;
#X msg 25 222 0;
#X msg 79 514 log \$1;
#X obj 79 485 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 447 487 The log mode supersedes the exp mode \, so the exponential setting gets ignored and is only valid if the log mode is removed., f 32;
#X text 496 437 log mode built into iemguis \, check its help file., f 19;
#X text 447 540 When in log mode \, you cannot have or cross zero in the output range., f 32;
#X msg 28 115 1;
#X obj 28 88 loadbang;
#X obj 150 551 else/rescale -log -in 0 1 220 880;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 6 0 44 0;
#X connect 10 0 29 0;
#X connect 10 0 35 0;
#X connect 11 0 10 0;
#X connect 17 0 19 0;
#X connect 17 1 30 1;
#X connect 18 0 34 0;
#X connect 18 1 20 0;
#X connect 19 0 30 0;
#X connect 20 0 19 0;
#X connect 25 0 27 0;
#X connect 25 1 31 1;
#X connect 26 0 33 0;
#X connect 26 1 28 0;
#X connect 27 0 31 0;
#X connect 28 0 27 0;
#X connect 29 0 26 0;
#X connect 33 0 25 0;
#X connect 34 0 17 0;
#X connect 35 0 36 0;
#X connect 35 1 18 0;
#X connect 36 0 18 0;
#X connect 37 0 44 0;
#X connect 38 0 37 0;
#X connect 42 0 11 0;
#X connect 43 0 42 0;
#X connect 44 0 5 0;
#X restore 430 249 pd log/exponential;
#X text 147 559 1) float -;
#X text 215 559 minimum output value (default 0);
#X text 215 575 maximum output value (default 1);
#X text 147 575 2) float -;
#X text 147 591 3) float -;
#X text 215 591 exponential value (default 0 \, linear);
#X text 132 513 -exp <float>: sets exponential factor (default 0 \, linear);
#X text 96 497 -in <float \, float>: sets min/max input value (default 0 \, 127), f 61;
#X text 161 480 -noclip: sets non clipping mode (default clip mode);
#X text 156 342 log <float>;
#X text 46 89 By default \, [rescale] rescales input values from 0 to 127 (the MIDI range) into another range of values (0-1 by default). You can also set an exponential factor (1 by default - linear) or use a log mode as in iemguis. All these parameters can be changed by arguments., f 78;
#X obj 133 418 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 192 418 float;
#X text 236 395 - minimum out value;
#X text 236 418 - maximum out value;
#X text 132 528 -log/-rlog: sets to log or reverse log mode (default exp);
#X text 236 342 - non zero sets to log mode, f 35;
#X text 150 357 rlog <float>;
#X text 236 357 - non zero sets to reverse log mode;
#N canvas 748 285 366 348 reverse 0;
#X obj 103 125 hsl 136 16 0 1 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 100 97 0.5;
#X floatatom 100 201 11 0 0 0 - - - 0;
#X floatatom 100 152 12 0 0 0 - - - 0;
#X obj 103 254 hsl 136 16 0 1 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 100 226 else/rescale -rlog -in 220 880 0 1;
#X obj 100 176 else/rescale -log -in 0 1 220 880;
#X text 72 49 The 'rlog' mode is "reverse log" and converts from log to linear., f 37;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 5 0;
#X connect 3 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 2 0;
#X restore 454 272 pd reverse log;
#X connect 5 0 6 0;
#X connect 6 0 34 0;
#X connect 34 0 22 0;
#X connect 35 0 34 0;
