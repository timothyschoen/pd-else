#N canvas 484 38 562 636 10;
#X obj 250 229 hsl 128 15 44.1 44100 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 247 317 else/out~;
#X obj 2 3 cnv 15 301 42 empty empty rampnoise~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X obj 23 40 cnv 4 4 4 empty empty Ramp 0 28 2 18 #e0e0e0 #000000 0;
#X obj 75 40 cnv 4 4 4 empty empty noise 0 28 2 18 #e0e0e0 #000000 0;
#X obj 247 258 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 263 228 frequency in Hz;
#X text 38 277 see also:;
#X obj 39 304 else/lfnoise~;
#X obj 39 328 else/stepnoise~;
#X obj 247 284 else/rampnoise~ 400;
#X text 83 163 The [rampnoise~] object produces frequencies limited to a band from 0 up to the frequency it is running. It can go up to the sample rate \, and when that happens \, it's basically a white noise generator.;
#N canvas 806 202 450 300 control 0;
#X obj 153 133 else/rescale~ 200 800;
#X text 50 33 [rampnoise~] can be used to control parameters of other objects. Here we control the frequency of an oscillator.;
#X obj 153 163 else/sine~;
#X obj 153 200 else/out.mc~;
#X obj 153 101 else/rampnoise~ -mc 10 7;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X restore 477 349 pd control;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 386 133 885 299 seed 0;
#X text 30 41 Pseudo random number generators aren't true random number generators. Instead \, an algorithm is used to provide a sequence of numbers that seems random. The same sequence can be reproduced if you set a "seed" value \, which can be any integer number., f 52;
#X text 30 197 You can set a seed with the '-seed' flag. If you don't supply it \, each object gets its own seed internal seed. If you send a 'seed' message without float \, the object also gets a unique seed value., f 52;
#X text 613 22 Sync objects with a seed value;
#X msg 539 21 seed 319;
#X msg 496 22 seed;
#X obj 383 98 else/numbox~ 6 14 100 #c0c0c4 #440008 10 0 0 0;
#X obj 600 98 else/numbox~ 6 14 100 #c0c0c4 #440008 10 0 0 0;
#X obj 383 72 else/rampnoise~ -seed 319 1;
#X obj 600 71 else/rampnoise~ -seed 319 1;
#X obj 383 134 else/graph~;
#X obj 600 134 else/graph~;
#X text 30 120 Seeds are kept locally \, which means that if two [rampnoise~] objects are seeded the same they will have the same output. Conversely \, you can seed the same [rampnoise~] object twice with the same seed to repeat the output., f 52;
#X obj 821 22 else/setdsp~;
#X connect 3 0 7 0;
#X connect 3 0 8 0;
#X connect 4 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 9 0;
#X connect 6 0 10 0;
#X connect 7 0 5 0;
#X connect 8 0 6 0;
#X restore 495 303 pd seed;
#X obj 39 352 else/rampnoise;
#X text 83 88 [rampnoise~] is a low frequency (band limited) noise generator with interpolation \, therefore it ramps from one random value to another \, resulting in random ramps. Random values are between -1 and 1 at a rate in hertz (negative frequencies accepted). Use the seed message if you want a reproducible output. It has support for multichannels., f 59;
#X obj 3 473 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 91 483 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 91 400 cnv 17 3 60 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 3 390 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X text 224 398 - frequency input in hertz, f 52;
#X obj 2 605 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 3 575 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X text 151 584 1) float;
#X text 213 584 - frequency in hertz (default 0);
#X obj 7 512 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 108 521 -seed <float>: sets seed (default: unique internal);
#X text 131 399 list/signal(s);
#X text 140 484 signal(s);
#X text 143 414 seed <float>;
#X text 143 429 rand <float>;
#X text 224 428 - non zero sets to random gate value mode, f 52;
#X text 224 413 - a float sets seed \, no float sets a unique internal;
#X text 224 444 - <channel \, freq> set a single density channel, f 52;
#X text 107 444 set <float \, float>;
#X text 120 540 -ch <float>: number of output channels (default 1);
#X text 126 555 -mc <list>: sets multichannel output with a list of frequencies, f 63;
#X text 216 485 - bandlimited ramp noise;
#N canvas 683 110 622 689 multichannel 0;
#X obj 100 87 hsl 128 15 500 5000 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 97 116 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 181 117 density;
#X obj 97 241 else/out.mc~;
#X msg 161 161 ch 2;
#X msg 116 160 ch 1;
#X obj 405 217 else/out.mc~;
#X text 29 25 The -ch flag or message sets the number of output channels. This is only meaningful if you have a single channel input., f 42;
#X obj 235 599 else/out~;
#X floatatom 235 417 5 0 0 0 - - - 12;
#X msg 248 448 400 600;
#X text 126 330 You can initialize the object with multichannel if you give it a list of frequencies with the -mc flag (you can't set phases though). A list input also works if no signal is connected to set it to multichannel with a list of frequency input., f 62;
#X text 348 509 the set message sets a single frequency channel, f 17;
#X text 316 28 If you have a multichannel connection in the frequency input \, [randpulse2~] generates a signal with the same number of channels and the 'ch' message or flag is meaningless. The multichannel input is the density for each output., f 44;
#X msg 278 521 set 1 1555;
#X msg 261 478 100 600 1700;
#X obj 97 207 else/rampnoise~ -ch 2 500;
#X obj 405 179 else/rampnoise~;
#X obj 405 134 else/sigs~ 300 500;
#X obj 235 568 else/rampnoise~ -mc 440 660;
#X connect 0 0 1 0;
#X connect 1 0 16 0;
#X connect 4 0 16 0;
#X connect 5 0 16 0;
#X connect 9 0 19 0;
#X connect 10 0 19 0;
#X connect 14 0 19 0;
#X connect 15 0 19 0;
#X connect 16 0 3 0;
#X connect 17 0 6 0;
#X connect 18 0 17 0;
#X connect 19 0 8 0;
#X restore 447 326 pd multichannel;
#X connect 0 0 6 0;
#X connect 6 0 11 0;
#X connect 11 0 1 0;
