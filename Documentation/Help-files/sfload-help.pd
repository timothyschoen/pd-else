#N canvas 520 74 567 510 10;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 41 cnv 4 4 4 empty empty Load\ sounf\ files\ into\ arrays 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 305 4 graph;
#X obj 3 4 cnv 15 301 42 empty empty sfload 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X obj 7 481 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 7 301 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 7 365 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 7 441 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 99 310 cnv 17 3 45 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X msg 32 172 load bubul.mp3;
#X obj 32 147 loadbang;
#X obj 196 153 cnv 16 245 90 empty empty empty 20 12 0 10 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-file 534167 float 2;
#X coords 0 1 534167 -1 247 92 1 0 0;
#X restore 195 152 graph;
#X text 172 326 set <symbol> - set array name, f 51;
#X text 191 454 1) symbol - array name (default: none);
#X listbox 32 228 18 0 0 0 - - - 0;
#X obj 99 378 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 145 228 info;
#N canvas 713 164 584 620 details 0;
#X obj 57 191 cnv 16 245 130 empty empty empty 20 12 0 10 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array 0-\$0-stereo 87741 float 2;
#X coords 0 1 87741 -1 247 132 1 0 0;
#X restore 56 190 graph;
#X msg 48 84 load https://upload.wikimedia.org/wikipedia/en/1/10/Michael_Jackson_Thriller.ogg, f 81;
#X msg 62 115 load stereo.wav;
#X obj 48 147 else/sfload \$0-stereo;
#X text 75 14 when loading mono or multichannel files with [sfload] \, it searches for arrays that is preceded by "x-" (where 'x' is the channel number indexed from 0). If found \, it has loading priority \, if it fails it searches for an array with the exact given name instead., f 72;
#X obj 366 219 else/sfload \$0-stereo;
#X msg 366 165 load didge.flac 0;
#X msg 379 192 load didge.flac 1;
#X msg 374 380 load didge.flac 1;
#X obj 374 407 else/sfload 0-\$0-stereo;
#X text 333 261 You can optionally give a channel number to load from the file (indexed from 0). In the case of multichannel arrays \, it will also try to match the channel number from the array. You can force a channel swap if you specifically set the array channel., f 33;
#X text 202 106 (loading from an internet link \, this one takes a little while of course...);
#X msg 362 484 stop;
#X obj 511 544 bng 30 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 348 544 else/out~;
#X msg 352 461 play;
#X obj 352 512 else/tabplayer~ \$0-stereo 2;
#X text 97 502 You can use [tabplayer~] to play multichannel arrays. --------------->, f 37;
#X obj 57 342 cnv 16 245 130 empty empty empty 20 12 0 10 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array 1-\$0-stereo 87741 float 2;
#X coords 0 1 87741 -1 247 132 1 0 0;
#X restore 56 341 graph;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 6 0;
#X connect 9 0 10 0;
#X connect 13 0 17 0;
#X connect 16 0 17 0;
#X connect 17 0 15 0;
#X connect 17 1 15 1;
#X connect 17 2 14 0;
#X restore 480 196 pd details;
#X text 124 311 load <symbol \, float> - file to load and optional array name;
#X text 220 378 list - <size \, sample rate \, channels \, bits>, f 43;
#X text 22 270 see also:;
#X obj 161 270 else/play.file~;
#X obj 448 270 else/player~;
#X obj 345 270 else/tabplayer~;
#X obj 262 270 else/sample~;
#N canvas 713 164 434 564 threaded 0;
#X msg 174 193 load bubul.mp3;
#X obj 101 424 cnv 16 245 90 empty empty empty 20 12 0 10 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-threaded 534167 float 2;
#X coords 0 1 534167 -1 247 92 1 0 0;
#X restore 100 423 graph;
#X listbox 174 330 18 0 0 0 - - - 0;
#X text 287 330 info;
#X obj 174 303 else/sfload -t \$0-threaded;
#X obj 110 165 trigger bang bang bang;
#X obj 110 129 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 270 166 print a;
#X obj 174 359 print b;
#X obj 110 359 print c;
#X msg 220 269 threaded \$1;
#X obj 220 244 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 189 220 0;
#X msg 220 220 1;
#X text 75 23 By default [sfload] works in threaded mode \, which guarantees order of execution. If you wanna load larg files and would like to not choke Pd's audio you can try loadubg files in threaded mode \, but this ruins order of execution (and you can use the output of [sfload] to know when it is done loading)., f 49;
#X connect 0 0 5 0;
#X connect 3 0 9 0;
#X connect 5 0 3 0;
#X connect 6 0 10 0;
#X connect 6 1 0 0;
#X connect 6 2 8 0;
#X connect 7 0 6 0;
#X connect 11 0 5 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 14 0 12 0;
#X restore 480 217 pd threaded;
#X obj 7 405 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 210 418 -t: sets to threaded mode;
#X obj 32 201 else/sfload \$0-file;
#X text 148 341 threaded <float> - non zero sets to threaded mode, f 55;
#X obj 87 270 soundfiler;
#X text 74 87 [sfload] is similar to [soundfiler] supports more file formats (officialy AAC \, AIF \, CAF \, FLAC \, MP3 \, OGG \, OPUS & WAV). It can also load into multichannel arrays and load files from web links!, f 65;
#X connect 16 0 36 0;
#X connect 17 0 16 0;
#X connect 36 0 22 0;
