#N canvas 525 38 560 625 10;
#X obj 306 6 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 5 pd;
#X obj 345 13 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 13 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 13 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 13 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 28 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 28 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 202 41 cnv 4 4 4 empty empty oscillator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 600 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 200 151 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 3 5 cnv 15 301 42 empty empty bl.wavetable~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 5 graph;
#X obj 22 42 cnv 4 4 4 empty empty Bandlimited 0 28 2 18 #e0e0e0 #000000 0;
#X text 63 198 see also:;
#X obj 200 202 else/out~;
#X obj 3 545 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 262 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 454 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X text 135 269 float/signal - frequency in hz, f 61;
#X obj 121 41 cnv 4 4 4 empty empty wavetable 0 28 2 18 #e0e0e0 #000000 0;
#X obj 43 220 else/wavetable~;
#X text 148 551 1) symbol;
#N canvas 811 254 411 420 table 0;
#X obj 33 158 cnv 15 298 198 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-table 4096 float 0;
#X coords 0 1 4095 -1 300 200 1 0 0;
#X restore 32 158 graph;
#X obj 135 43 else/loop 4096;
#X obj 164 114 tabwrite \$0-table;
#X obj 135 71 expr -2 * ($f1 / 4095) + 1 \; $f1;
#X obj 135 16 loadbang;
#X connect 2 0 4 0;
#X connect 4 0 3 0;
#X connect 4 1 3 1;
#X connect 5 0 2 0;
#X restore 119 159 pd table;
#X text 31 159 check table =>;
#X obj 103 465 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 181 466 signal;
#X text 223 466 - a periodically repeating waveform;
#X obj 103 410 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 103 430 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 135 412 float/signal - phase sync (resets internal phase);
#X text 135 432 float/signal - phase offset (modulation input), f 50;
#X text 154 580 3) float;
#X text 208 565 - sets frequency in Hz (default 0), f 43;
#X text 208 580 - sets phase offset (default 0), f 43;
#X text 154 565 2) float;
#X obj 103 269 cnv 17 3 134 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 183 328 none - sets to no interpolation mode, f 54;
#X text 189 343 lin - sets to linear interpolation mode, f 53;
#X text 189 358 cos - sets to cosine interpolation mode, f 53;
#X text 159 373 lagrange - sets to lagrange interpolation mode, f 58;
#X text 171 388 spline - sets to spline interpolation mode (default), f 56;
#N canvas 403 51 851 443 sync 0;
#X obj 514 254 else/out~;
#X obj 602 151 nbx 5 14 110 200 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 703 177 Master oscillator;
#X text 707 210 Slave oscillator;
#X obj 602 177 else/imp~ 110;
#X text 509 349 NOTE:;
#X text 524 369 The "phase sync" inlet is quite different from the "phase offset" inlet. This means that the are completely independent., f 43;
#X obj 227 249 vsl 15 100 -1 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 227 217 else/sig2float~;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #dcdcdc #7c7c7c #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #dcdcdc #7c7c7c 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 122 265 pd;
#X msg 424 133 0.25;
#X msg 350 132 0.75;
#X msg 318 132 1;
#X msg 390 132 0.5;
#N canvas 274 200 384 353 sine 0;
#X obj 33 119 cnv 15 298 198 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-sine 4096 float 0;
#X coords 0 1 4095 -1 300 200 1 0 0;
#X restore 32 118 graph;
#X obj 84 60 else/tabgen \$0-sine sin 1 0 1;
#X restore 362 267 pd sine;
#X text 58 15 The second inlet resets the phase ands behaves in the same way for control data as objects like [osc~] and [tabosc4~] in Pd. A number input resets the oscillator and restarts the cycle with an initial phase that corresponds to the input number \, so the internal phase is synced to the given value. The phase values are from 0 to 1 and values beyond that are wrapped within this range.;
#X text 44 374 Additionally \, you can reset the oscillator with an impulse signal. The impulse values need to be > 0 and <= 1 (otherwise ignored). Because phase is cyclical \, the value of 1 represents the "phase 0" of the cycle \, where the impulse occurs., f 62;
#X text 477 22 Syncing the phase with control messages is useful for LFOs and control with MIDI. A sync with audio is useful for the "hard sync" technique \, where an oscillator (called slave) is synced according to the frequency of a master oscillator, f 58;
#X msg 514 178 soft \$1;
#X obj 514 148 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 477 84 Soft sync is also possible with the '-soft' flag or the "soft" message \, where it alternates between positive and negative frequencies and sounds less harsh., f 58;
#X obj 227 193 else/bl.wavetable~ \$0-sine 0.25;
#X obj 514 210 else/bl.wavetable~ \$0-sine 200;
#X obj 318 164 else/float2imp~;
#X connect 1 0 4 0;
#X connect 4 0 22 1;
#X connect 8 0 7 0;
#X connect 10 0 23 0;
#X connect 11 0 23 0;
#X connect 12 0 23 0;
#X connect 13 0 23 0;
#X connect 18 0 22 0;
#X connect 19 0 18 0;
#X connect 21 0 8 0;
#X connect 22 0 0 0;
#X connect 23 0 21 1;
#X restore 495 188 pd sync;
#N canvas 675 66 419 529 phase 0;
#X obj 73 446 else/out~;
#X text 261 405 Phase Modulation:;
#X obj 244 377 osc~ 50.01;
#X text 18 326 The phase values are wrapped into the 0-1 range \, since the phase cycle is from 0 to 1 (where 1 is also the start of another cycle).;
#X text 31 27 The second float argument sets an initial phase (or "phase offset"). This is also settable with the third inlet. This allows you to control two oscillators with the same frequency falling in and out of phase. Another feature is phase modulation., f 53;
#X text 384 110 1;
#X obj 81 247 else/out~;
#X obj 81 211 +~;
#X obj 270 110 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 267 134 4 0 0 0 - - - 0;
#X text 250 109 0;
#X obj 267 158 else/float2sig~ 50;
#X obj 73 405 else/bl.wavetable~ \$0-saw 200;
#X obj 96 184 else/bl.wavetable~ \$0-saw 220;
#X obj 55 148 else/bl.wavetable~ \$0-saw 220;
#X connect 2 0 12 2;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 11 0 13 2;
#X connect 12 0 0 0;
#X connect 13 0 7 1;
#X connect 14 0 7 0;
#X restore 489 210 pd phase;
#N canvas 683 161 623 334 interpolation 0;
#X obj 66 168 cnv 16 198 138 empty empty empty 20 12 0 10 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-interp 5 float 3;
#A 0 -0.0571427 0.514287 -0.571428 0.871429 -0.957155;
#X coords 0 1 5 -1 200 140 1;
#X restore 65 168 graph;
#X msg 332 42 none;
#X msg 341 63 lin;
#X msg 348 85 cos;
#X msg 355 105 lagrange;
#X msg 362 126 spline;
#X text 408 126 default;
#X text 330 17 set different interpolation methods, f 36;
#X obj 332 152 else/bl.wavetable~ -none \$0-interp 50;
#X text 61 36 By default \, [bl.wavetebale~] uses the spline interpolation method but you can set it to linear \, cosine \, lagrange or no interpolation at all. For more details \, check the subsection 'interpolation' of chapter 28 (buffer) in the live electronics tutorial., f 35;
#X obj 332 206 else/scope~ 200 100 10 3 128 -1 1 10 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X connect 2 0 9 0;
#X connect 3 0 9 0;
#X connect 4 0 9 0;
#X connect 5 0 9 0;
#X connect 6 0 9 0;
#X connect 9 0 11 0;
#X restore 441 232 pd interpolation;
#N canvas 693 127 445 488 midi 0;
#X obj 134 168 nbx 6 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 137 237 else/out~;
#X obj 119 304 else/graph~ 441 11;
#X msg 118 138 midi \$1;
#X obj 118 109 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 40 27 By default \, frequency input is in hertz \, but if you use the 'midi' message or '-midi' flag you can change it to MIDI pitch input \, where it is not really bound to the 0 to 127 range \, neither it has to be integers. This is just like using [mtof~]...;
#X obj 118 207 else/bl.wavetable~ -midi \$0-saw 60;
#X connect 0 0 6 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 6 0 1 0;
#X connect 6 0 2 0;
#X restore 495 166 pd midi;
#X text 135 299 midi <float> -;
#X text 225 299 non zero sets to frequency input in MIDI pitch, f 47;
#X text 135 314 soft <float> -;
#X text 225 314 non zero sets to soft sync mode, f 47;
#X text 260 150 <-- frequency;
#X obj 5 488 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 103 525 -soft: sets to soft sync mode (default hard), f 64;
#X text 103 494 -none/-lin/-cos/-lagrange: set interpolation mode (default spline), f 67;
#X text 208 551 - array name (optional \, default none), f 43;
#X text 103 510 -midi: sets frequency input in MIDI pitch (default hertz), f 64;
#X text 48 89 [bl.wavetable~] is a bandlimited wavetable oscillator abstraction that uses the upsampling/filtering techniquelike \, which makes the object quite inefficient CPU wise. This object also minimizes aliasing caused by hard sync and phase modulation. No wavetable scanning here though..., f 71;
#X text 123 284 table <symbol> - sets an entire array to be used as a waveform, f 63;
#X obj 200 175 else/bl.wavetable~ \$0-table 400;
#N canvas 750 137 490 555 table 0;
#X obj 124 250 nbx 6 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 143 314 else/out~;
#X obj 125 381 else/graph~ 441 11;
#X obj 250 116 cnv 15 198 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 50 450 250 (subpatch) 0;
#X array \$0-saw 4096 float 0;
#X coords 0 1 4095 -1 200 140 1 0 0;
#X restore 249 115 graph;
#X text 28 105 generate-saw;
#X obj 29 128 else/tabgen \$0-saw sin 1 0 1 2 0 0.5 3 0 0.333 4 0 0.25 5 0 0.2, f 32;
#X obj 124 284 else/bl.wavetable~ 110;
#X obj 49 207 else/initmess table \$0-saw;
#X text 45 21 Besides the first argument \, the "table" message followed by an array name sets an entire array to be used as a waveform. If no name is given or if you send a name that doesn't correspond to an exist array \, then the output is silent., f 63;
#X connect 0 0 7 0;
#X connect 7 0 1 0;
#X connect 7 0 2 0;
#X connect 8 0 7 0;
#X restore 489 144 pd table;
#X connect 10 0 58 0;
#X connect 58 0 15 0;
