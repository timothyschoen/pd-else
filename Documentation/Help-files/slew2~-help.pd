#N canvas 457 38 563 560 10;
#X obj 6 534 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 23 40 cnv 4 4 4 empty empty Slew 0 28 2 18 #e0e0e0 #000000 0;
#X obj 67 40 cnv 4 4 4 empty empty limiter 0 28 2 18 #e0e0e0 #000000 0;
#X obj 1 3 cnv 15 301 42 empty empty slew2~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 193 309 else/s2f~;
#X text 19 246 see also:;
#X obj 503 94 else/setdsp~ 1;
#X obj 196 337 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X msg 203 255 set 0;
#X msg 192 231 set 1;
#X obj 4 361 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 460 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 493 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 96 469 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 96 368 cnv 17 3 35 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 96 409 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 141 385 set <float>;
#X text 220 470 - slew limited values;
#X text 220 369 - values to be slew limited, f 46;
#X text 220 385 - sets new start point and goes back to target;
#X obj 193 280 else/slew2~ 1 1, f 20;
#X msg 310 179 1;
#X floatatom 310 255 5 0 0 0 - - - 0;
#X msg 319 207 0;
#X msg 327 229 -1;
#X msg 282 179 0.1;
#X text 352 229 <= no limit;
#X text 359 190 per second), f 22;
#X text 341 178 <= speed limit (amplitude;
#X text 346 207 <= 0 speed (stopped);
#X msg 251 180 1;
#X floatatom 251 256 5 0 0 0 - - - 0;
#X msg 260 208 0;
#X msg 268 230 -1;
#X msg 223 180 0.1;
#X obj 23 269 else/slew~;
#X obj 24 290 else/slew2;
#X obj 25 311 else/glide2~;
#X obj 25 332 else/lag2~;
#X text 32 87 [slew2~] is like [slew~] but has independent values for upwards & downwards ramps. It takes an amplitude limit per second and generates a line towards the incoming value. The difference between [slew~] and [glide~] is that [slew~] has a fixed speed \, not a fixed period. A limit of zero stops the line generation and a negative value turns the limiter off (but again \, up and down limits are independent)., f 75;
#N canvas 843 76 503 490 example 0;
#X text 73 16 When new values come in \, the object limits the change to a maximum step until it reaches the new value. A speed of "1" means that it takes one second to move to a difference of 1 in amplitue. The actual step between subsequent changes depend on this speed and the sample rate., f 61;
#X text 73 82 If you have a sample rate of 44100 samples per second \, then a second has 44100 steps. If the speed is then "1" \, this means that the step value is 1/44100 (2.26757e-05). So a shift between 0 and 1 takes 44100 steps of 2.26757e-05 and a second to reach 1!, f 61;
#X obj 61 364 else/rescale~ 300 600;
#X obj 61 391 osc~;
#X obj 61 414 else/out~;
#X obj 326 357 osc~;
#X obj 326 392 else/out~;
#X obj 326 199 else/stepnoise~ 1;
#X obj 326 242 else/rescale~ 200 800;
#X obj 326 283 else/slew2~ 800 4000;
#X obj 59 204 else/slew2~ 10 5;
#X obj 59 170 else/randpulse~ 2;
#X obj 326 318 else/numbox~ 6 12 100 #c0c0c4 #440008 0 0 10 0;
#X obj 77 237 else/scope~ 200 100 256 3 128 -1 1 0 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 12 0;
#X connect 10 0 2 0;
#X connect 10 0 13 0;
#X connect 11 0 10 0;
#X connect 12 0 5 0;
#X restore 474 309 pd example;
#X text 235 161 up;
#X text 165 500 1) float - slew limit speed upwards (default 0);
#X text 165 515 1) float - slew limit speed downwards (default 0);
#X text 302 161 down;
#X text 220 410 - speed limit upwards (negative values = no limit);
#X obj 96 433 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 220 434 - speed limit downwards (negative values = no limit);
#X obj 126 181 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 126 207 else/rand.f 0 1;
#X floatatom 126 228 9 0 0 0 - - - 0;
#X obj 126 248 sig~;
#N canvas 565 104 507 509 multichannel 0;
#X obj 116 286 else/s2f~;
#X obj 116 119 bng 25 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 349 290 setdsp~;
#X msg 57 200 set 0 1;
#X obj 116 317 unpack;
#X obj 116 348 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 149 348 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 116 200 else/rand.f~ -ch 2 0 1;
#X obj 256 276 else/s2f~;
#X obj 256 321 unpack;
#X obj 256 352 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 289 352 vsl 18 120 0 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X text 45 21 If [slew2~] has a multichannel left input \, it outputs the same number of channels. If the secondary inlets have a single channel for the up/down slew limit \, the single value is applied to all channels. If a secondary inlet is also a multichhanel signal \, then each channel gets its own limit value. Note \, however \, that the number of multichannels in secondary inlets need to match the same number of channels from the left input., f 65;
#X obj 116 257 else/slew2~ 0.5 1.5;
#X obj 256 247 else/slew2~;
#X obj 287 182 else/sigs~ 0.5 1;
#X obj 319 214 else/sigs~ 1.5 0.25;
#X obj 116 158 else/float2imp~;
#X connect 0 0 4 0;
#X connect 1 0 17 0;
#X connect 3 0 13 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 7 0 13 0;
#X connect 7 0 14 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 9 1 11 0;
#X connect 13 0 0 0;
#X connect 14 0 8 0;
#X connect 15 0 14 1;
#X connect 16 0 14 2;
#X connect 17 0 7 0;
#X restore 443 331 pd multichannel;
#X text 153 410 signal(s);
#X text 153 434 signal(s);
#X text 153 470 signal(s);
#X text 117 369 float/signal(s);
#X connect 13 0 16 0;
#X connect 17 0 29 0;
#X connect 18 0 29 0;
#X connect 29 0 13 0;
#X connect 30 0 31 0;
#X connect 31 0 29 2;
#X connect 32 0 31 0;
#X connect 33 0 31 0;
#X connect 34 0 31 0;
#X connect 39 0 40 0;
#X connect 40 0 29 1;
#X connect 41 0 40 0;
#X connect 42 0 40 0;
#X connect 43 0 40 0;
#X connect 57 0 58 0;
#X connect 58 0 59 0;
#X connect 59 0 60 0;
#X connect 60 0 29 0;
