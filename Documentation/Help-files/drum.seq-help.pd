#N struct 1008-slot float x float y float slotsize float color float width float bordercolor;
#N struct 1038-slot float x float y float slotsize float color float width float bordercolor;
#N canvas 476 45 562 639 10;
#X obj 24 39 cnv 4 4 4 empty empty Drum 0 28 2 18 #e0e0e0 #000000 0;
#X obj 75 39 cnv 4 4 4 empty empty sequence 0 28 2 18 #e0e0e0 #000000 0;
#X obj 215 39 cnv 4 4 4 empty empty GUI 0 28 2 18 #e0e0e0 #000000 0;
#X obj 306 3 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 2 pd;
#X obj 345 10 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 10 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 10 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 10 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 25 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 25 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 7 304 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 7 485 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 7 540 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X obj 7 613 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 118 312 cnv 17 3 168 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 117 492 cnv 17 3 40 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 191 491 list;
#X text 191 324 list;
#X text 143 452 size <float>;
#X text 185 380 clear;
#X text 231 380 - clears active cells (no output), f 41;
#X text 185 366 float;
#X text 137 466 embed <float>;
#X text 231 408 - import contents as an array, f 41;
#X text 231 466 - non zero save internal contents with the object;
#X obj 151 39 cnv 4 4 4 empty empty pattern 0 28 2 18 #e0e0e0 #000000 0;
#X text 231 324 - sets track \, slot and status (no output), f 42;
#X text 231 366 - sets slot value and output tracks values;
#N canvas 598 57 629 680 drum 0;
#X obj 355 564 else/pluck~ 50 2500 10000;
#X obj 294 607 else/out~;
#X obj 174 31 tgl 18 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 295 488 sel 1;
#X obj 348 488 sel 1;
#X msg 118 93 clear;
#X obj 174 58 else/tempo 120;
#X obj 185 353 drum.seq 3 8 20 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 0 1 1 0;
#X obj 401 488 print drum.seq;
#X msg 185 110 export;
#X obj 193 488 sel 1;
#X obj 242 445 route 1 2 3, f 27;
#X text 350 63 Here's an example on how to use [drum.seq] for a drum pattern sequencer patch. You can also see how some of the messages work (note that tracks and slots are indexed from 1)., f 42;
#X obj 174 86 else/rand.i 1 8;
#X obj 72 31 tgl 18 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 72 58 else/tempo 120;
#X obj 29 58 sel 0;
#X text 199 32 <= random values;
#X msg 29 91 goto 1;
#X msg 221 251 track 3 0 1 1 0 0 1 1 0;
#X msg 215 229 track 1 1 0 1 0 1 1 0 1;
#X obj 185 421 route bang;
#X obj 185 445 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 111 446 finished =>;
#X msg 194 135 export 1;
#X msg 210 207 import 1 0 0 0 1 0 1 0 || 0 1 0 1 0 1 0 1 || 0 0 1 0 1 0 1 0;
#X text 407 465 <= export messages;
#X text 257 161 <=;
#X text 273 155 export track 3, f 7;
#X text 250 135 <=;
#X text 267 129 export track 1, f 7;
#X text 229 110 <=;
#X text 245 106 export, f 10;
#X text 245 115 all tracks;
#X msg 203 161 export 3;
#X text 350 126 The import message also sets the number of slots and tracks., f 42;
#X msg 235 313 embed \$1;
#X obj 235 286 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 193 526 else/play.file~ bagal.flac, f 15;
#X obj 295 526 else/play.file~ dholak.flac, f 15;
#X obj 404 520 else/float2imp~;
#X connect 0 0 1 0;
#X connect 2 0 6 0;
#X connect 3 0 39 0;
#X connect 4 0 40 0;
#X connect 5 0 7 0;
#X connect 6 0 13 0;
#X connect 7 0 21 0;
#X connect 9 0 7 0;
#X connect 10 0 38 0;
#X connect 11 0 10 0;
#X connect 11 1 3 0;
#X connect 11 2 4 0;
#X connect 11 3 8 0;
#X connect 13 0 7 0;
#X connect 14 0 15 0;
#X connect 14 0 16 0;
#X connect 15 0 7 0;
#X connect 16 0 18 0;
#X connect 18 0 7 0;
#X connect 19 0 7 0;
#X connect 20 0 7 0;
#X connect 21 0 22 0;
#X connect 21 1 11 0;
#X connect 24 0 7 0;
#X connect 25 0 7 0;
#X connect 34 0 7 0;
#X connect 36 0 7 0;
#X connect 37 0 36 0;
#X connect 38 0 1 0;
#X connect 39 0 1 0;
#X connect 40 0 0 1;
#X restore 488 265 pd drum \; sequencer;
#X text 131 422 tracks <float>;
#X text 137 437 slots <float>;
#X text 231 422 - sets number of tracks (clears data), f 41;
#X text 231 437 - sets number of slots (clears data), f 41;
#X text 231 452 - sets cell size in pixels (clears data), f 41;
#X obj 254 119 tgl 16 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X msg 209 143 clear;
#X obj 267 169 hradio 20 1 0 4 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0;
#X text 76 241 click on the slots =>;
#X obj 210 229 else/drum.seq 2 4 20 0 0 0 0 0 0 0 0 0 0 0 0;
#X obj 210 278 print track-value;
#X obj 3 2 cnv 15 301 42 empty empty drum.seq 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 3 2 graph;
#X text 137 519 export <list>;
#X text 231 519 - array of contexts via the "export" message;
#X obj 267 197 + 1;
#X msg 254 143 1 1 \$1 \, 1 4 \$1 \, 2 2 \$1;
#X text 297 232 <= track 1;
#X text 297 252 <= track 2;
#X text 231 491 - track and slot value (indexed from 1), f 44;
#X obj 143 172 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X msg 161 143 goto 4;
#X text 191 310 bang;
#X text 231 310 - gets sequence value and moves to the next;
#X text 143 352 goto <float>;
#X text 231 352 - sets slot value;
#X text 143 339 track <list>;
#X text 231 339 - sets track values (1st value sets track number);
#X text 191 505 bang;
#X text 231 505 - when reaching the end of the sequence, f 44;
#X text 131 394 export <float>;
#X text 231 394 - export tracks \, no float exports all as an array;
#X text 156 577 -size <float>: sets cell size in pixels (default 20);
#X text 156 562 -slots <float>: sets number of slots (default 8);
#X text 156 547 -tracks <float>: sets tracks (default 2), f 47;
#X text 156 592 -embed: sets emebding mode (default no embedding);
#X text 50 86 [drum.seq] provides a drum grid so you can activate cells to represent attacks., f 65;
#X text 274 118 set cell values via list messages;
#X text 137 408 import <list>;
#X text 81 173 output =>;
#X connect 35 0 46 0;
#X connect 36 0 39 0;
#X connect 37 0 45 0;
#X connect 39 0 40 0;
#X connect 45 0 39 0;
#X connect 46 0 39 0;
#X connect 50 0 39 0;
#X connect 51 0 39 0;
