#N canvas 500 41 561 688 10;
#X obj 4 657 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 6 223 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 507 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 621 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 85 230 cnv 17 3 248 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 85 515 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 179 287 list;
#X obj 85 537 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 173 391 pause;
#X text 167 405 resume;
#X text 218 391 - pauses the output, f 53;
#X obj 23 40 cnv 4 4 4 empty empty Envelope 0 28 2 18 #e0e0e0 #000000 0;
#X obj 101 40 cnv 4 4 4 empty empty generator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 2 2 cnv 15 301 42 empty empty envgen~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 304 3 graph;
#X text 218 287 -;
#X text 179 243 bang;
#X text 173 537 float;
#N canvas 525 38 476 517 status 0;
#X obj 360 293 switch~;
#X obj 360 225 tgl 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 71 253 *~;
#X obj 49 191 osc~ 440;
#X obj 201 241 else/sig2float~;
#X obj 201 277 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 289 289 else/setdsp~;
#X obj 71 298 else/out~;
#X text 51 29 [envgen~] has a right outlet that sends a status value (1 when the envelope starts and 0 when it ends). This can be useful for different things \, but particularly to turn on and off the DSP processing of a subpatch or abstraction with [switch~]., f 62;
#X obj 129 126 bng 45 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 129 188 else/envgen~ 50 1 150 0.6 500 0.6 250 0;
#X obj 345 469 clone;
#X text 323 444 see also:;
#X text 70 416 You should also check try pd's [clone] object for managing polyphonic synths.;
#X text 51 80 This is only pertinent for control triggers \, such as floats and bangs., f 62;
#X connect 1 0 0 0;
#X connect 2 0 7 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 2 1;
#X connect 10 0 4 0;
#X connect 10 1 1 0;
#X restore 430 64 pd status;
#X text 218 405 - resumes the envelope after being paused, f 53;
#X text 113 379 setgain <float>;
#X text 218 379 - sets overall gain, f 53;
#X obj 6 560 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 101 434 retrigger <float>;
#X text 218 434 - retrigger time in ms, f 53;
#X text 119 448 legato <float>;
#X text 218 448 - non-0 sets to legato mode, f 53;
#X text 107 419 suspoint <float>;
#X text 218 419 - sets sustain point, f 53;
#X text 167 258 attack;
#X text 218 243 - attacks the envelope with the last gate on value, f 53;
#X text 161 272 release;
#N canvas 376 92 897 467 basic 0;
#X msg 496 110 pause;
#X msg 539 110 resume;
#X obj 589 109 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 619 242 vsl 20 80 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X text 643 313 0;
#X text 642 238 1;
#X obj 503 228 *~;
#X obj 503 266 else/out~;
#X obj 503 177 osc~ 440;
#X obj 589 175 else/envgen~ 0 1000 1 500 0;
#X text 618 92 ADSR (attack \, decay \, sustain \, release);
#X text 751 136 AR (attack \, release);
#X obj 45 343 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 26 192 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 138 238 start \, duration \, target;
#X text 106 215 duration \, target;
#X obj 308 242 else/sig2float~;
#X obj 308 275 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 308 166 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 163 342 else/setdsp~;
#X text 68 435 0;
#X text 65 338 1;
#X text 334 369 0;
#X text 333 270 1;
#X obj 45 288 else/envgen~ 0.5;
#X text 263 101 Being an all purpose line/envelope generator \, you can use it to create complex envelope lines as below., f 35;
#X obj 738 346 vsl 20 80 -1 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X text 761 342 1;
#X obj 738 289 else/envgen~;
#X text 762 417 -1;
#X msg 26 216 500 \$1 \, bang;
#X msg 45 238 0 1000 1 \, bang;
#X text 517 25 You can pause the envelope at any point with the "pause" message \, after which the "resume" message restarts the envelope., f 46;
#X msg 615 110 100 1 100 0.6 1000 0.6 500 0 \, bang;
#X msg 623 136 0 1000 1 500 0 \, bang;
#X msg 738 240 -1 200 1 200 0 200 0.5 100 1 400 -1 \, bang, f 18;
#X msg 56 262 0 0.5 \, bang;
#X text 130 262 immediate jump;
#X obj 45 315 else/s2f~;
#X text 25 14 The line segments in [envgen~] are set with lists in pairs of duration and target values. This is the opposite order of the [line] and [vline~] from Vanilla \, also \, unlike those \, lists only set the envelope (you need a bang or gate to run it)., f 36;
#X text 25 99 If you have lists with an odd number of elements \, the first float sets a staring point. In practical terms \, it's like this number is a target paired with a preceding "0" duration value., f 36;
#X text 152 287 <-- initial output;
#X text 263 15 If you give [envgen~] just a float as the argument \, it initializes the object to output that value as a starting point. You can also use the -init flag instead. Otherwise \, you can give it a list to define segments., f 35;
#X obj 308 195 else/envgen~ -init 0.5 0 500 1 250 0.25 250 0.25 500 1 250 1 750 0 0 0.5, f 24;
#X obj 619 214 else/s2f~;
#X obj 738 316 else/s2f~;
#X obj 807 315 sel 0;
#X obj 807 339 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X text 804 361 done;
#X msg 689 250 pause;
#X text 491 351 The [envgen~] object works also as an all purpose line generator such as [vline~]. This means you can have multiple line segments and in any range. Note that the maximum number of segments is 1024!, f 36;
#X connect 0 0 9 0;
#X connect 1 0 9 0;
#X connect 2 0 9 0;
#X connect 6 0 7 0;
#X connect 8 0 6 0;
#X connect 9 0 6 1;
#X connect 9 0 44 0;
#X connect 13 0 30 0;
#X connect 16 0 17 0;
#X connect 18 0 43 0;
#X connect 24 0 38 0;
#X connect 28 0 45 0;
#X connect 28 1 46 0;
#X connect 30 0 24 0;
#X connect 31 0 24 0;
#X connect 33 0 9 0;
#X connect 34 0 9 0;
#X connect 35 0 28 0;
#X connect 36 0 24 0;
#X connect 38 0 12 0;
#X connect 43 0 16 0;
#X connect 44 0 3 0;
#X connect 45 0 26 0;
#X connect 46 0 47 0;
#X connect 49 0 28 0;
#X restore 492 64 pd basic;
#X obj 234 117 *~;
#X obj 234 158 else/out~;
#X obj 234 79 osc~ 440;
#X obj 307 68 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#N canvas 484 132 770 535 gate-sustain 0;
#X obj 78 249 else/display;
#X obj 178 347 *~;
#X obj 78 283 mtof;
#X obj 92 316 else/bl.vsaw~;
#X obj 193 302 else/envgen~ 10 1 40 0.5 400 0.5 50 0, f 19;
#X text 24 241 MIDI Pitch =>, f 8;
#X obj 503 245 else/rescale;
#X obj 503 273 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 488 381 *~;
#X obj 398 274 mtof;
#X obj 193 180 else/tempo 60 50;
#X obj 193 144 tgl 18 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 213 145 <= generate random notes, f 12;
#X obj 193 251 else/display 6;
#X obj 117 284 osc~ 0.5;
#X text 29 30 A non-zero input triggers the envelope as a "gate on" message and sets an overall gain (which is 1 by default). A zero value is ignored if there's no sustain point., f 57;
#X text 392 25 When you set a sustain point \, with the sustain message or flag \, then [envgen~] holds at the given point until it receives a 0 or release message., f 39;
#X text 30 69 By default \, [envgen~] has no sustain point \, which means it also doesn't have a release ramp and generates the whole envelope at "one-shot" when triggered., f 57;
#X text 251 253 <= gain (gate on);
#X obj 178 376 else/plate.rev~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 488 410 else/plate.rev~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 78 220 else/rand.i 36 72;
#X obj 193 219 else/rand.f 0.25 1;
#X obj 498 461 else/out~;
#X obj 186 429 else/out~;
#X text 392 81 Here's [envgen~] as an ADSR envelope:, f 39;
#X obj 398 115 else/keyboard 17 80 2 4 0 0 empty empty;
#X obj 398 305 else/bl.tri~;
#X obj 398 215 unpack float float;
#X obj 503 328 else/envgen~ -suspoint 2 10 1 40 0.5 50 0, f 24;
#X obj 578 275 bng 21 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X text 611 264 You can also retrigger with a bang when sustained, f 14;
#X connect 0 0 2 0;
#X connect 1 0 19 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 4 0 1 1;
#X connect 6 0 7 0;
#X connect 7 0 29 0;
#X connect 8 0 20 0;
#X connect 9 0 27 0;
#X connect 10 0 21 0;
#X connect 10 0 22 0;
#X connect 11 0 10 0;
#X connect 13 0 4 0;
#X connect 14 0 3 1;
#X connect 19 0 24 0;
#X connect 19 1 24 1;
#X connect 20 0 23 0;
#X connect 20 1 23 1;
#X connect 21 0 0 0;
#X connect 22 0 13 0;
#X connect 26 0 28 0;
#X connect 27 0 8 0;
#X connect 28 0 9 0;
#X connect 28 1 6 0;
#X connect 29 0 8 1;
#X connect 30 0 29 0;
#X restore 451 141 pd gate-sustain;
#N canvas 267 107 1028 416 legato-retrigger 0;
#X obj 73 222 *~;
#X obj 51 170 osc~ 440;
#X obj 192 242 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 131 117 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 73 272 else/out~;
#X text 158 120 <= click multiple times, f 24;
#X obj 131 158 else/envgen~ 100 1 300 0.25 1000 0.25 500 0, f 18;
#X obj 399 246 *~;
#X obj 377 194 osc~ 440;
#X obj 517 275 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 457 141 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 399 296 else/out~;
#X text 484 144 <= click multiple times;
#X obj 457 182 else/envgen~ 0 100 1 300 0.25 1000 0.25 500 0, f 20;
#X msg 380 142 legato \$1;
#X obj 380 121 tgl 15 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 722 266 *~;
#X obj 700 214 osc~ 440;
#X obj 841 286 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 780 161 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 722 316 else/out~;
#X text 807 164 <= click multiple times;
#X msg 693 165 retrigger \$1;
#X obj 693 138 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 45 54 An even number of elements makes [envgen~] operate in legato mode \, where retriggering restarts the attack ramp from the current amplitude level - check below., f 42;
#X text 350 29 An odd number of elements sets the first float as a starting point \, where a retrigger restarts from this point. Therefore it doesn't operate in legato mode. But you can force a legato mode with the legato message or flag \, which ignores this first point - try it below., f 46;
#X text 673 24 When not in legato mode \, you can set a retrigger time in ms with the "retrigger" message or flag. This adds an extra ramp to the starting point and is useful if you do not want to play in legato mode but want to avoid clicks. A small amount such as 10 ms is already usually enough for this non legato effect., f 50;
#X obj 780 202 else/envgen~ -retrigger 20 0 100 1 300 0.25 1000 0.25 500 0, f 26;
#X obj 192 209 else/s2f~;
#X obj 517 242 else/s2f~;
#X obj 841 253 else/s2f~;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 3 0 6 0;
#X connect 6 0 0 1;
#X connect 6 0 28 0;
#X connect 7 0 11 0;
#X connect 8 0 7 0;
#X connect 10 0 13 0;
#X connect 13 0 7 1;
#X connect 13 0 29 0;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X connect 16 0 20 0;
#X connect 17 0 16 0;
#X connect 19 0 27 0;
#X connect 22 0 27 0;
#X connect 23 0 22 0;
#X connect 27 0 16 1;
#X connect 27 0 30 0;
#X connect 28 0 2 0;
#X connect 29 0 9 0;
#X connect 30 0 18 0;
#X restore 427 122 pd legato-retrigger;
#X text 218 229 - gate: on/attack (non-0) or off/release (0), f 53;
#X text 218 272 - same as a gate off, f 53;
#X text 218 258 - same as bang or gate on, f 53;
#N canvas 647 120 482 439 duration 0;
#X obj 37 269 else/setdsp~;
#X obj 140 352 else/envgen~;
#X obj 113 395 print~;
#X obj 113 203 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 113 229 t b f;
#X msg 80 168 0;
#X msg 113 168 1;
#X msg 150 168 2;
#X msg 183 168 3;
#X obj 140 260 else/samps2ms;
#X floatatom 140 286 10 0 0 0 - - - 0;
#X text 25 166 samples;
#X text 205 286 ms;
#X obj 287 395 print~;
#X obj 287 203 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 287 229 t b f;
#X msg 254 168 0;
#X msg 287 168 1;
#X msg 319 168 2;
#X msg 352 168 3;
#X floatatom 314 255 4 0 0 0 - - - 0;
#X msg 314 276 0 \$1 1 \$1 0;
#X msg 140 308 0 \$1 1;
#X text 345 254 samps;
#X obj 314 352 else/envgen~ -samps;
#X msg 335 319 samps 1;
#X text 57 73 A line size of 0 means an immediate jump \, otherwise a ramp starts at the current or start point. A line of 2 samples starts at the current or start point and reaches its destination target at the next sample. Multiple lines with 0 duration next to each other get ignored (all but the last one). Time values less than 0 are clipped to 0!;
#X text 57 8 The time duration of each line is set in ms but is converted to number of samples and is rounded to the nearest integer sample duration. For instance \, durations >= 1.5 and < 2.5 is rounded to 2 samples. Alternatively \, you can set time in samples directly.;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 4 0 1 0;
#X connect 4 1 9 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 3 0;
#X connect 8 0 3 0;
#X connect 9 0 10 0;
#X connect 10 0 22 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 15 0 24 0;
#X connect 15 1 20 0;
#X connect 16 0 14 0;
#X connect 17 0 14 0;
#X connect 18 0 14 0;
#X connect 19 0 14 0;
#X connect 20 0 21 0;
#X connect 21 0 24 0;
#X connect 22 0 1 0;
#X connect 24 0 13 0;
#X connect 25 0 24 0;
#X restore 475 84 pd duration;
#N canvas 726 168 516 457 function 0;
#X obj 134 245 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 394 166 1;
#X obj 119 334 *~;
#X obj 119 371 else/out~;
#X text 393 262 0;
#X obj 58 283 osc~ 440;
#X obj 185 172 else/function 200 100 empty empty 0 1 220 220 220 50 50 50 0 0 0 0 0 100 1 100 0.5 200 0.5 200 0;
#X text 57 85 Note that [function] always sends an odd number of elements \, so you can use "legato" mode or not \, and also set a retrigger time if you will., f 65;
#X obj 185 139 else/initmess 0 100 1 100 0.5 200 0.5 200 0;
#X text 100 186 [function] =>;
#X text 57 33 You can use [function] with [envgen~]. Since [function] is always outputting a list you can plug it directly into [envgen~] to set the envelope. Check the help file of [function] for more details on how it works., f 65;
#X obj 134 291 else/envgen~ -retrigger 20, f 13;
#X connect 0 0 11 0;
#X connect 2 0 3 0;
#X connect 5 0 2 0;
#X connect 6 0 11 0;
#X connect 8 0 6 0;
#X connect 11 0 2 1;
#X restore 475 193 pd function;
#X text 131 229 float/signal;
#N canvas 742 87 506 636 exponential 0;
#X obj 43 402 cnv 15 398 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-env 13230 float 0;
#X coords 0 1 13229 0 400 140 1 0 0;
#X restore 42 401 graph;
#X obj 129 359 tabwrite~ \$0-env;
#X obj 102 279 t b a;
#X text 181 199 linear;
#X text 113 564 The following subpatch shows how to create "S" like curves:, f 35;
#N canvas 692 218 467 485 "S"-curves 0;
#X obj 24 317 cnv 15 398 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 1 52 450 300 (subpatch) 0;
#X array \$0-S-curve 4410 float 0;
#X coords 0 1 4409 0 400 140 1 0 0;
#X restore 23 316 graph;
#X text 11 310 1;
#X text 11 442 0;
#X obj 94 223 route bang;
#X obj 151 279 tabwrite~ \$0-S-curve;
#X obj 151 250 else/envgen~;
#X obj 94 13 loadbang;
#X msg 94 38 expl 4 -4 \, 0 50 0.5 50 1 \, bang;
#X msg 99 56 expl -4 4 \, 1 50 0.5 50 0 \, bang;
#X msg 113 80 expl -4 4 \, 0 50 0.5 50 1 \, bang;
#X msg 117 98 expl 4 -4 \, 1 50 0.5 50 0 \, bang;
#X msg 129 123 expl 0.25 -0.25 \, 0 50 0.5 50 1 \, bang;
#X msg 134 141 expl -0.25 0.25 \, 1 50 0.5 50 0 \, bang;
#X msg 137 172 expl -0.25 0.25 \, 0 50 0.5 50 1 \, bang;
#X msg 143 191 expl 0.25 -0.25 \, 1 50 0.5 50 0 \, bang;
#X connect 4 0 5 0;
#X connect 4 0 6 0;
#X connect 4 1 6 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 8 0 4 0;
#X connect 9 0 4 0;
#X connect 10 0 4 0;
#X connect 11 0 4 0;
#X connect 12 0 4 0;
#X connect 13 0 4 0;
#X connect 14 0 4 0;
#X connect 15 0 4 0;
#X restore 267 583 pd "S"-curves;
#X obj 129 310 else/envgen~ 150 1 150 0, f 12;
#X obj 415 116 else/setdsp~;
#X msg 123 199 expl 1 1;
#X msg 135 222 expl 4 4;
#X msg 140 240 expl -4 -4;
#X obj 303 110 else/rescale;
#X obj 303 132 else/rescale~;
#X text 25 90 The exponential factor is the same as used in [else/rescale] and [else/rescale~]. Check them out as well:;
#X text 25 14 The 'exp' message or flag also sets an exponential factor after the duration value. The 'expl' message sets exponential factors for each segment (by default \, they're "1" (linear). The 'expi' message sets a single exponential factor. For values >= 0 \, it's like raising to the power of the given exponential. Negative values are accepted and offer a mirrored/reversed curve. Check below., f 70;
#X floatatom 102 131 5 0 0 0 - - - 0;
#X floatatom 32 132 5 0 0 0 - - - 0;
#X obj 294 362 tabwrite~ \$0-env;
#X obj 267 287 t b a;
#X msg 267 238 exp 150 -10 1 150 10 0;
#X text 322 282 with a start value;
#X text 271 220 no start value;
#X msg 32 155 expi 0 \$1;
#X msg 102 154 expi 1 \$1;
#X obj 294 323 else/envgen~;
#X msg 280 263 exp 0 150 10 1 150 -10 0;
#X obj 123 178 loadbang;
#X connect 3 0 2 0;
#X connect 3 0 7 0;
#X connect 3 1 7 0;
#X connect 7 0 2 0;
#X connect 9 0 3 0;
#X connect 10 0 3 0;
#X connect 11 0 3 0;
#X connect 16 0 24 0;
#X connect 17 0 23 0;
#X connect 19 0 18 0;
#X connect 19 0 25 0;
#X connect 19 1 25 0;
#X connect 20 0 19 0;
#X connect 23 0 3 0;
#X connect 24 0 3 0;
#X connect 25 0 18 0;
#X connect 26 0 19 0;
#X connect 27 0 9 0;
#X restore 457 103 pd exponential;
#X text 204 626 -;
#X text 218 626 a float sets an initial output value \, a list of floats sets the envelope (default 0 0), f 44;
#X text 218 339 - sets exponential values for each line segment, f 53;
#X text 137 339 expl <list>;
#X text 143 313 exp <list>;
#X text 218 313 -;
#X text 137 355 expi <f \, f>;
#X text 218 354 -;
#X text 230 354 sets an exponential for a line segment specified by the first float indexed from 0, f 51;
#X text 230 313 sets envelope with an extra exponential element for each segment, f 51;
#X text 18 167 see also:;
#X obj 19 187 else/function~;
#X obj 85 484 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 230 288 sets envelope with pairs of duration & target (if odd number of elements \, first is start point), f 51;
#X text 329 69 <--;
#X text 354 65 generate envelope, f 8;
#X obj 307 134 else/numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 115 187 else/adsr~;
#N canvas 300 124 1047 598 signal 0;
#X obj 159 204 *~;
#X obj 487 299 *~;
#X obj 379 223 mtof~;
#X obj 502 150 else/randpulse2~ 7;
#X obj 379 252 else/bl.saw~;
#X obj 174 159 else/envgen~ 10 1 40 0.7 400 0.7 50 0, f 19;
#X text 35 21 The [envgen~] object can also be triggered by audio. For a one shot envelope (without sustain points) \, you can use impulses to trigger it., f 47;
#X text 379 70 But a gate is needed for envelopes with sustain points. Note that float input is not ignored when there's a signal connection and can also retrigger the envelope., f 47;
#X obj 159 233 else/plate.rev~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 487 328 else/plate.rev~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 49 138 else/rand.i~ 36 72;
#X obj 379 195 else/rand.i~ 36 72;
#X obj 159 276 else/out~;
#X obj 497 378 else/out~;
#X obj 174 89 else/tempo~ -on 60 100;
#X obj 502 218 else/envgen~ -suspoint 2 10 1 40 0.5 50 0, f 24;
#X obj 49 166 else/bl.tri~ -midi;
#X obj 208 398 sig~;
#X obj 208 368 tgl 21 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 137 388 noise~;
#X obj 137 425 *~;
#X obj 355 372 bng 21 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 355 402 else/impseq~;
#X obj 208 432 else/envgen~ -suspoint 2 50 1 10 0.1 500 0, f 25;
#X obj 137 485 else/out~;
#X obj 355 468 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 262 509 When the gate is on \, you can also retrigger the envelope with impulses in the right inlet., f 29;
#X obj 808 170 tgl 21 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 808 207 else/sigs~ 0 0;
#X obj 889 170 tgl 21 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 742 282 *~;
#X obj 742 230 noise~;
#X obj 742 323 else/meter2~;
#X obj 742 484 else/out.mc~;
#X text 713 42 The object has multichannel support. In which case the right outlet is non functional. If [envgen~] has a multichannel left input \, it outputs the same number of channels \, one for each gate signal. The right inlet must have the same number of channels if bigger than 1 \, in which case each channel gets is retriggered independently \, otherwise the single channel input retriggers all channels., f 46;
#X obj 808 234 else/envgen~ -suspoint 2 500 1 50 0.5 1500 0, f 24;
#X obj 949 303 tgl 25 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 839 309 The status ----> outlet considers all channels \, so it waits until all are finished to turn it off., f 16;
#X obj 949 349 print status, f 6;
#X connect 0 0 8 0;
#X connect 1 0 9 0;
#X connect 2 0 4 0;
#X connect 3 0 11 0;
#X connect 3 0 15 0;
#X connect 4 0 1 0;
#X connect 5 0 0 1;
#X connect 8 0 12 0;
#X connect 8 1 12 1;
#X connect 9 0 13 0;
#X connect 9 1 13 1;
#X connect 10 0 16 0;
#X connect 11 0 2 0;
#X connect 14 0 5 0;
#X connect 14 0 10 0;
#X connect 15 0 1 1;
#X connect 16 0 0 0;
#X connect 17 0 23 0;
#X connect 18 0 17 0;
#X connect 19 0 20 0;
#X connect 20 0 24 0;
#X connect 21 0 22 0;
#X connect 22 0 23 1;
#X connect 23 0 20 1;
#X connect 23 1 25 0;
#X connect 27 0 28 0;
#X connect 28 0 35 0;
#X connect 29 0 28 1;
#X connect 30 0 32 0;
#X connect 31 0 30 0;
#X connect 32 0 33 0;
#X connect 35 0 30 1;
#X connect 35 1 36 0;
#X connect 36 0 38 0;
#X restore 469 161 pd signal \; Multichannel;
#X text 150 515 signal(s);
#X text 218 515 - envelope signal(s), f 25;
#X text 149 485 signal(s);
#X text 218 484 - impulse signal(s) to retrigger the envelope, f 53;
#X obj 307 99 else/envgen~ 1500 1 500 0, f 12;
#X obj 376 131 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 219 537 - status: 1 <on> \, 0 <off> (considers all channels);
#X obj 376 155 print status, f 6;
#X text 11 92 [envgen~] is an envelope (and an all purpose line) generator (here it creates a 1000 ms line to 1 and then a 500 ms line to 0). It has multichannel support., f 34;
#X text 93 565 -exp <list> sets function with an extra exponential element for each segment | -init <float> (default 0) | -retrigger <float> (default 0) | -legato (sets to legato mode on \, default is off) | -suspoint <float> (default 0) | -samps sets time to samples (default ms), f 70;
#X text 117 627 1) float/list;
#X text 125 462 samps <float>;
#X text 218 462 - non-0 sets to time in samples instead of ms, f 53;
#X connect 41 0 42 0;
#X connect 43 0 41 0;
#X connect 44 0 77 0;
#X connect 77 0 41 1;
#X connect 77 0 70 0;
#X connect 77 1 78 0;
#X connect 78 0 80 0;
