#N canvas 340 132 907 444 12;
#X obj 105 319 *~;
#X obj 22 230 mtof;
#X obj 105 394 outlet~;
#X obj 113 27 inlet;
#X obj 307 294 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 288 326 switch~;
#X obj 215 97 print other messages;
#X obj 113 67 route list adsr;
#X obj 164 212 unpack f f f f;
#X text 337 231 send release value to parent, f 15;
#X text 496 135 This is a template to build synth abstractions., f 49;
#X obj 22 258 else/bl.saw~;
#X obj 56 181 unpack f f;
#X text 497 291 If you have a polyphonic synth you also want to send the release value to the parent [synth~] abstraction loader \, so the [voices] object also handles the release time for the voice allocation., f 49;
#X text 496 204 You probably need to use an envelope like [adsr~] to handle MIDI velocity and convert MIDI pitch to frequency and feed an oscillator. A [switch~] object is also desired to free the CPU when there's no active voice and [adsr~] can feed it., f 49;
#X text 364 136 get arguments from parent, f 13;
#X obj 123 258 else/adsr~ 20 10 0.7 150;
#X obj 182 143 else/receiver 1 \\\$0-args;
#X obj 286 205 else/sender 1 \\\$0-rel;
#X text 496 158 Arguments are received via [receiver] from the parent., f 49;
#X connect 0 0 2 0;
#X connect 1 0 11 0;
#X connect 3 0 7 0;
#X connect 7 0 12 0;
#X connect 7 1 8 0;
#X connect 7 2 6 0;
#X connect 8 0 16 1;
#X connect 8 1 16 2;
#X connect 8 2 16 3;
#X connect 8 3 16 4;
#X connect 8 3 18 0;
#X connect 11 0 0 0;
#X connect 12 0 1 0;
#X connect 12 1 16 0;
#X connect 16 0 0 1;
#X connect 16 1 4 0;
#X connect 16 1 5 0;
#X connect 17 0 8 0;
